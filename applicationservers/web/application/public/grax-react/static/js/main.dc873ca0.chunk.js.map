{"version":3,"sources":["App.js","serviceWorker.js","index.js","lib/utils.js"],"names":["GRAXRestoreTabs","lazy","Promise","all","__webpack_require__","e","then","bind","GRAXLogging","GRAXHistory","GRAXDelete","GRAXCloud","GRAXAudit","GRAXSummaryCharts","appName","window","location","hash","substring","helpLinkbyAppName","summarycharts","delete","timemachine","logging","GRAXApp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","_this2","script","document","createElement","src","async","onload","setState","body","appendChild","react_default","a","spinner","size","variant","Fragment","isAppleDevice","className","isEmbeded","aria-hidden","id","href","style","position","right","rel","target","icon_settings","iconPath","react","fallback","tabs","panel","label","columns","subtype","React","Component","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","setCookie","getCookie","SF_DATETIME_REGEXP","DATETIME_FORMAT","DATE_FORMAT","TZ","comboboxFilterAndLimit","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","lodash__WEBPACK_IMPORTED_MODULE_3__","lodash__WEBPACK_IMPORTED_MODULE_3___default","availableLocales","moment","locales","cname","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","cookie","name","ca","decodeURIComponent","split","i","length","c","charAt","indexOf","parent","platform","userLocaleParam","search","tzParam","browserLocale","userLanguage","language","userLocale","join","tz","guess","console","log","locale","toLowerCase","setDefault","_ref","inputValue","_ref$limit","limit","options","inputValueRegExp","selection","RegExp","_","escapeRegExp","filter","option","type","splice"],"mappings":"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","file":"static/js/main.dc873ca0.chunk.js","sourcesContent":["import React, { Suspense, lazy } from \"react\";\nimport { Tabs, TabsPanel, IconSettings, Spinner } from \"@salesforce/design-system-react\";\n\nimport \"@salesforce-ux/design-system/assets/styles/salesforce-lightning-design-system.min.css\";\nimport \"./App.css\";\n\nimport { isEmbeded, isAppleDevice } from \"./lib/utils\";\n\nconst GRAXRestoreTabs = lazy(() => import(\"./components/GRAXRestoreTabs\"));\nconst GRAXLogging = lazy(() => import(\"./components/GRAXLogging\"));\nconst GRAXHistory = lazy(() => import(\"./components/GRAXHistory\"));\nconst GRAXDelete = lazy(() => import(\"./components/GRAXDelete\"));\nconst GRAXCloud = lazy(() => import(\"./components/GRAXCloud\"));\nconst GRAXAudit = lazy(() => import(\"./components/GRAXAudit\"));\nconst GRAXSummaryCharts = lazy(() => import(\"./components/GRAXSummaryCharts\"));\n\nvar appName = window.location.hash ? window.location.hash.substring(1) : \"cloud\";\n\nvar helpLinkbyAppName = {\n  // 'mapping': 'grax-restore',\n  summarycharts: \"summary-charts\",\n  delete: \"datalake-delete\",\n  timemachine: \"grax-object-time-machine\",\n  logging: \"grax-logs\"\n};\n\nclass GRAXApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    if (appName === \"summarycharts\") {\n      const script = document.createElement(\"script\");\n      script.src = \"https://www.gstatic.com/charts/loader.js\";\n      script.async = true;\n      script.onload = () => {\n        this.setState({ isLoading: false });\n      };\n\n      document.body.appendChild(script);\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Spinner size=\"large\" variant=\"brand\" />;\n    }\n\n    return (\n      <React.Fragment>\n        {isAppleDevice && (\n          <style>{`\n                    html, body {\n                        height: 100%;\n                        overflow: auto;\n                        -webkit-overflow-scrolling: touch;\n                    }\n                `}</style>\n        )}\n        <div className={isEmbeded ? \"slds-tabs_scoped__content\" : \"\"}>\n          {helpLinkbyAppName[appName] != null ? (\n            <div aria-hidden=\"false\" id=\"GRAXHelpLink\">\n              <h3>\n                <a\n                  href={\"https://documentation.grax.io/docs/\" + helpLinkbyAppName[appName]}\n                  style={{\n                    position: \"absolute\",\n                    right: \"27px\"\n                  }}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  GRAX Help\n                </a>\n              </h3>\n            </div>\n          ) : null}\n\n          <IconSettings iconPath=\"./assets/icons\">\n            <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n              {(appName === \"restore\" || appName === \"mapping\") && (\n                <GRAXRestoreTabs variant={isEmbeded ? \"default\" : \"scoped\"} appName={appName} />\n              )}\n              {appName === \"logging\" && (\n                <Tabs variant={isEmbeded ? \"default\" : \"scoped\"} id=\"grax-logging-tabs\">\n                  <TabsPanel label=\"Error Logs\">\n                    <GRAXLogging\n                      columns={[\"CreatedDate\", \"source\", \"info\", \"error\", \"stack\", \"description\"]}\n                    />\n                  </TabsPanel>\n                  <TabsPanel label=\"Restore Logs\">\n                    <GRAXLogging\n                      subtype=\"restore\"\n                      columns={[\n                        \"CreatedDate\",\n                        \"objecttype\",\n                        \"sourceId\",\n                        \"destinationId\",\n                        \"status\",\n                        \"error\",\n                        \"description\"\n                      ]}\n                    />\n                  </TabsPanel>\n                </Tabs>\n              )}\n              {appName === \"timemachine\" && (\n                <Tabs variant={isEmbeded ? \"default\" : \"scoped\"} id=\"grax-history-tabs\">\n                  <TabsPanel label=\"History\">\n                    <GRAXHistory />\n                  </TabsPanel>\n                </Tabs>\n              )}\n              {appName === \"delete\" && (\n                <Tabs variant={isEmbeded ? \"default\" : \"scoped\"} id=\"grax-delete-tabs\">\n                  <TabsPanel label=\"Delete\">\n                    <GRAXDelete />\n                  </TabsPanel>\n                </Tabs>\n              )}\n              {appName === \"cloud\" && <GRAXCloud />}\n              {appName === \"audit\" && (\n                <GRAXAudit columns={[\"LastModifiedDate\", \"ObjectType\", \"ObjectVersion\"]} />\n              )}\n              {appName === \"summarycharts\" && (\n                <GRAXSummaryCharts variant={isEmbeded ? \"default\" : \"scoped\"} />\n              )}\n            </Suspense>\n          </IconSettings>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GRAXApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable no-useless-escape */\nimport moment from 'moment';\nimport 'moment-timezone';\nimport 'moment/min/locales';\nimport _ from 'lodash';\n\nconst availableLocales = moment.locales();\n\nexport function setCookie(cname, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    var expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n};\n\nexport function getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n};\n\nvar isEmbeded = window !== window.parent;\nvar isAppleDevice = navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) ? true : false;\n\nexport {isEmbeded, isAppleDevice};\n\n/*\n2018-12-10\n1996-12-10\n2018-12-10 12:40:00\n1996-12-10 12:57:00\n1996-12-10 12:57:00-2340\n1996-12-10 12:57:00+2340\n2018-05-01T18:08:42.000+0000\n2018-12-10T12:50:00Z\n1996-12-10T12:00:00Z\n2018-12-10T12:50:35.000Z\n1996-12-10T12:00:00.000Z\n2010-12-31T23:59:59.999Z\n2002-10-10T12:00:00+05:00\n2002-10-10T07:00:00Z\n2002-10-10T00:00:00+05:00\n2002-10-09T19:00:00Z\n*/\nvar SF_DATETIME_REGEXP = /^((?:(?:19|20)\\d{2})-(?:10|11|12|0?\\d)-(?:30|31|(?:0|1|2)\\d))((?:(?:T|\\s)(?:(?:0|1|2)\\d)(?:\\:[0-5]\\d)(?::[0-5]\\d)?((?:(?:\\.\\d{3})?)?Z?(?:[+-](?:0|1|2)\\d\\:?[0-5]\\d)?))?)$/;\n\nvar DATETIME_FORMAT = 'L LT';\nvar DATE_FORMAT = 'L';\n\nexport {SF_DATETIME_REGEXP, DATETIME_FORMAT, DATE_FORMAT};\n\nvar userLocaleParam = window.location.search.match(/[\\?&]locale\\=([^&]+)/);\nvar tzParam = window.location.search.match(/[\\?&]tz\\=([^&]+)/);\n\nexport const browserLocale = window.navigator.userLanguage || window.navigator.language;\n\nexport const userLocale = userLocaleParam ? decodeURIComponent(userLocaleParam[1]).split('_').join('-') : browserLocale;\nexport const TZ = tzParam ? decodeURIComponent(tzParam[1]) : moment.tz.guess();\n\n\nconsole.log('Available localizations: ' + availableLocales.join(', '));\n\nlet locale = userLocale.toLowerCase();\n\nif(availableLocales.indexOf(locale) === -1 && userLocale.indexOf('-') !== -1) {\n    locale = locale.split('-')[0];\n}\n\nif(availableLocales.indexOf(locale) !== -1) {\n    moment.locale(locale);\n} else {\n    moment.locale('en'); // default localization\n}\n\nif(TZ) {\n    moment.tz.setDefault(TZ);\n}\n\nconsole.log('User Locale: ' + userLocale);\nconsole.log('Available Locale: ' + moment.locale());\nconsole.log('User TimeZone: ' + TZ);\n\nexport {moment}; // Export moment with additions\n\n/*\noptions={comboboxFilterAndLimit({\n    inputValue: this.state.inputValue,\n    limit: 1000,\n    options: this.state.options,\n    selection: this.state.selection\n})}\n*/\nconst comboboxFilterAndLimit = ({ inputValue, limit = 10, options, selection }) => {\n    const inputValueRegExp = new RegExp(_.escapeRegExp(inputValue), 'ig');\n\n    return _.filter(options, (option, i) => {\n        return (!inputValue || option.type === 'separator'\n                            || option.label.match(inputValueRegExp)\n                            || option.id.match(inputValueRegExp))\n                            /*&& !selection.some((sel) => sel && _.isEqual(sel, option))*/;\n    }).splice(0, limit);\n};\nexport {comboboxFilterAndLimit};"],"sourceRoot":""}