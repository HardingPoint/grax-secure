{"version":3,"sources":["../../../.tmp-es/utilities/date.js","../../../../../.tmp-es/components/date-picker/private/day.jsx","../../../../../.tmp-es/components/date-picker/private/week.jsx","../../../../../.tmp-es/components/date-picker/private/calendar.jsx","../../../../../.tmp-es/components/date-picker/private/year-picklist.jsx","../../../../../.tmp-es/components/date-picker/private/navigation.jsx","../../../../../.tmp-es/components/date-picker/private/calendar-wrapper.jsx","../../../../.tmp-es/components/date-picker/check-props.js","../../../../.tmp-es/utilities/warning/low-priority-warning.js","../../../../.tmp-es/components/date-picker/date-picker.jsx","../../../../.tmp-es/components/date-picker/index.jsx","../../../../.tmp-es/components/checkbox/check-props.js","../../../../.tmp-es/components/checkbox/index.jsx"],"names":["DateUtil","firstDayOfMonth","newDate","Date","isFirstDayOfMonth","date","isLastDayOfMonth","isSameMonth","d1","d2","isSameDay","isCurrentMonth","isToday","isEqual","addDays","parseInt","deltaDays","addWeeks","deltaWeeks","nearestWeekDay","delta","weekDayIndex","isLeapYear","year","getDaysInMonth","addMonths","dateOfNewDate","Math","DatepickerCalendarDay","props","isSelectedDay","isDisabled","aria-disabled","aria-selected","className","classNames","onClick","event","onSelectDate","handleClick","onKeyDown","onCalendarBlur","onKeyboardNavigateToPreviousDay","onKeyboardNavigateToNextDay","onKeyboardNavigateToPreviousWeek","onKeyboardNavigateToNextWeek","direction","keyDownCallbacks","KEYS","DIRECTIONS","shiftKeyDownCallbacks","EventUtil","handleKeyDown","ref","component","role","tabIndex","calendarHasFocus","PropTypes","disabled","initialDateForCalendarRender","selectedDate","selectedDateRef","todayLabel","focusedDate","onRequestInternalFocusDate","func","LanguageDirection","DatepickerWeek","days","i","key","dateDisabled","firstDayOfWeek","isRequired","DatepickerCalendar","todayFocus","prevProps","triggerCallback","selected","prevDate","nextDate","firstDayOfWeekOffset","prevWeek","weeks","done","monthIndex","count","onRequestClose","extraWeeks","this","sunday","title","weekDayLabels","abbreviatedWeekDayLabels","aria-labelledby","isIsoWeekday","scope","colSpan","href","todayRef","React","Component","id","onChangeMonth","onLastFocusableNodeKeyDown","DatepickerYearSelector","now","fromYear","toYear","opts","label","value","String","selectedYear","option","selectedValue","selection","assistiveText","assistiveTextYear","classNameMenu","events","onSelect","handleSelect","inheritWidthOf","menuPosition","multiple","options","labels","placeholder","variant","relativeYearFrom","relativeYearTo","number","DatepickerMonthNavigation","style","flex","icon","assistiveTextPreviousMonth","iconCategory","iconName","iconVariant","buttonRef","type","aria-live","aria-atomic","assistiveTextNextMonth","monthLabels","onPreviousMonthKeyDown","previousMonthRef","DatepickerCalendarWrapper","data","modifiedData","isolated","aria-hidden","data-selection","state","canFocusCalendar","onCalendarFocus","propTypes","nextMonth","openCalendar","previousMonth","string","align","formatter","formattedValue","hasStaticAlignment","abbreviatedWeekDays","months","today","weekDays","array","input","isOpen","onChange","onClose","onOpen","onRequestOpen","parser","triggerClassName","defaultProps","lowPriorityWarning","Datepicker","transform","contentsClassName","context","onRequestTargetElement","position","portalMount","defaultInputProps","iconRight","aria-haspopup","aria-expanded","category","name","inputRef","inputValue","topLevelDeprecatedComponentProps","onBlur","onFocus","required","childrenProps","childrenPropInputProps","inputRendered","formattedDate","timezoneOffset","portal","isOpenFromIcon","isRequestFromIcon","parsedDate","Object","isNaN","dateString","initDate","shortid","checkProps","nextProps","assign","inputProps","getInputProps","inputToRender","children","getIsOpen","getDialog","iconPath","onClickOutside","heading","checked","defaultChecked","errorText","indeterminate","toggleDisabled","toggleEnabled","onKeyPress","onKeyUp","readOnly","coverable","vertical","onRenderVisualPicker","onRenderVisualPickerSelected","onRenderVisualPickerNotSelected","size","Checkbox","idArray","aria-describedby","htmlFor","labelId","colorVariant","ariaProps","getAriaProps","subRenders","base","toggle","renderVisualPickerVariant"],"mappings":"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","file":"static/js/3.81264e24.chunk.js","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nconst DateUtil = {\n\tfirstDayOfMonth(date) {\n\t\tconst newDate = new Date(date);\n\t\tnewDate.setDate(1);\n\t\treturn newDate;\n\t},\n\n\tisFirstDayOfMonth(date) {\n\t\treturn date.getDate() === 1;\n\t},\n\n\tisLastDayOfMonth(date) {\n\t\treturn !DateUtil.isSameMonth(date, DateUtil.addDays(date, 1));\n\t},\n\tisSameMonth(d1, d2) {\n\t\tif (!d1 || !d2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\td1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth()\n\t\t);\n\t},\n\tisSameDay(d1, d2) {\n\t\tif (!d1 || !d2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\td1.getFullYear() === d2.getFullYear() &&\n\t\t\td1.getMonth() === d2.getMonth() &&\n\t\t\td1.getDate() === d2.getDate()\n\t\t);\n\t},\n\tisCurrentMonth(date) {\n\t\tif (!date) {\n\t\t\treturn false;\n\t\t}\n\t\treturn DateUtil.isSameMonth(date, new Date());\n\t},\n\tisToday(date) {\n\t\tif (!date) {\n\t\t\treturn false;\n\t\t}\n\t\treturn DateUtil.isSameDay(date, new Date());\n\t},\n\tisEqual(d1, d2) {\n\t\treturn d1.getTime() === d2.getTime();\n\t},\n\taddDays(date, deltaDays) {\n\t\tconst newDate = new Date(date);\n\t\tnewDate.setDate(newDate.getDate() + parseInt(deltaDays, 10));\n\t\treturn newDate;\n\t},\n\taddWeeks(date, deltaWeeks) {\n\t\treturn DateUtil.addDays(date, parseInt(deltaWeeks, 10) * 7);\n\t},\n\tnearestWeekDay(date, weekDayIndex) {\n\t\tlet delta = weekDayIndex - date.getDay();\n\t\tif (delta < 0) {\n\t\t\tdelta += 7;\n\t\t}\n\t\treturn DateUtil.addDays(date, delta);\n\t},\n\tisLeapYear(year) {\n\t\treturn (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t},\n\n\tgetDaysInMonth(year, month) {\n\t\treturn [\n\t\t\t31,\n\t\t\tDateUtil.isLeapYear(year) ? 29 : 28,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t\t30,\n\t\t\t31,\n\t\t][month];\n\t},\n\n\taddMonths(date, value) {\n\t\tconst newDate = new Date(date);\n\t\tconst dateOfNewDate = newDate.getDate();\n\t\tnewDate.setDate(1);\n\t\tnewDate.setMonth(newDate.getMonth() + value);\n\t\tnewDate.setDate(\n\t\t\tMath.min(\n\t\t\t\tdateOfNewDate,\n\t\t\t\tDateUtil.getDaysInMonth(newDate.getFullYear(), newDate.getMonth())\n\t\t\t)\n\t\t);\n\t\treturn newDate;\n\t},\n};\n\nexport default DateUtil;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\nimport EventUtil from '../../../utilities/event';\nimport DateUtil from '../../../utilities/date';\nimport KEYS from '../../../utilities/key-code';\n\nimport { DIRECTIONS } from '../../utilities/UNSAFE_direction';\nimport LanguageDirection from '../../utilities/UNSAFE_direction/private/language-direction';\n\nconst handleClick = (event, { date, onSelectDate }) => {\n\tonSelectDate(event, { date });\n};\n\nconst handleKeyDown = (\n\tevent,\n\t{\n\t\tdate,\n\t\tonCalendarBlur,\n\t\tonSelectDate,\n\t\tonKeyboardNavigateToPreviousDay,\n\t\tonKeyboardNavigateToNextDay,\n\t\tonKeyboardNavigateToPreviousWeek,\n\t\tonKeyboardNavigateToNextWeek,\n\t\tdirection,\n\t}\n) => {\n\tconst keyDownCallbacks = {\n\t\t[KEYS.SPACE]: () => {\n\t\t\tonSelectDate(event, { date });\n\t\t},\n\t\t[KEYS.ENTER]: () => {\n\t\t\tonSelectDate(event, { date });\n\t\t},\n\t\t[KEYS.TAB]: () => {\n\t\t\tonCalendarBlur(event, { direction: 'next' });\n\t\t},\n\t\t[KEYS.LEFT]: () => {\n\t\t\tif (direction === DIRECTIONS.RTL) {\n\t\t\t\tonKeyboardNavigateToNextDay(event, { date });\n\t\t\t} else {\n\t\t\t\tonKeyboardNavigateToPreviousDay(event, { date });\n\t\t\t}\n\t\t},\n\t\t[KEYS.RIGHT]: () => {\n\t\t\tif (direction === DIRECTIONS.RTL) {\n\t\t\t\tonKeyboardNavigateToPreviousDay(event, { date });\n\t\t\t} else {\n\t\t\t\tonKeyboardNavigateToNextDay(event, { date });\n\t\t\t}\n\t\t},\n\t\t[KEYS.UP]: () => {\n\t\t\tonKeyboardNavigateToPreviousWeek(event, { date });\n\t\t},\n\t\t[KEYS.DOWN]: () => {\n\t\t\tonKeyboardNavigateToNextWeek(event, { date });\n\t\t},\n\t};\n\n\tconst shiftKeyDownCallbacks = {\n\t\t[KEYS.TAB]: () => {\n\t\t\tonCalendarBlur(event, { direction: 'previous' });\n\t\t},\n\t};\n\n\tif (event.keyCode) {\n\t\tif (event.shiftKey && keyDownCallbacks[event.keyCode]) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tshiftKeyDownCallbacks[event.keyCode]();\n\t\t} else if (keyDownCallbacks[event.keyCode]) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tkeyDownCallbacks[event.keyCode]();\n\t\t}\n\t}\n};\n\nconst DatepickerCalendarDay = (props) => {\n\tconst isCurrentMonth = DateUtil.isSameMonth(\n\t\tprops.date,\n\t\tprops.initialDateForCalendarRender\n\t);\n\tconst isToday = DateUtil.isToday(props.date);\n\tconst isSelectedDay = DateUtil.isSameDay(props.date, props.selectedDate);\n\tconst isFirstDayOfMonth = DateUtil.isFirstDayOfMonth(props.date);\n\tconst isDisabled = !isCurrentMonth || props.disabled;\n\n\treturn (\n\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t<td\n\t\t\taria-disabled={isDisabled}\n\t\t\taria-selected={isSelectedDay}\n\t\t\tclassName={classNames({\n\t\t\t\t'slds-is-today': isToday,\n\t\t\t\t'slds-disabled-text': isDisabled,\n\t\t\t\t'slds-is-selected': isSelectedDay,\n\t\t\t})}\n\t\t\tonClick={(event) => {\n\t\t\t\thandleClick(event, {\n\t\t\t\t\tdate: props.date,\n\t\t\t\t\tonSelectDate: props.onSelectDate,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\thandleKeyDown(event, {\n\t\t\t\t\t...props,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tref={(component) => {\n\t\t\t\tif (isSelectedDay) {\n\t\t\t\t\tprops.selectedDateRef(component);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tprops.calendarHasFocus &&\n\t\t\t\t\tDateUtil.isSameDay(props.focusedDate, props.date) &&\n\t\t\t\t\tisCurrentMonth\n\t\t\t\t) {\n\t\t\t\t\tprops.onRequestInternalFocusDate(undefined, {\n\t\t\t\t\t\tdate: props.date,\n\t\t\t\t\t\tref: component,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}}\n\t\t\trole=\"gridcell\"\n\t\t\ttabIndex={\n\t\t\t\t!props.calendarHasFocus && isFirstDayOfMonth && isCurrentMonth ? 0 : -1\n\t\t\t}\n\t\t>\n\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t<span className=\"slds-day\">\n\t\t\t\t{isToday ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{`${props.todayLabel}: `}</span>\n\t\t\t\t) : null}\n\t\t\t\t{props.date.getDate()}\n\t\t\t</span>\n\t\t</td>\n\t);\n};\n\nDatepickerCalendarDay.displayName = 'SLDSDatepickerCalendarDay';\n\nDatepickerCalendarDay.propTypes = {\n\t/**\n\t * If elements within the calendar have focus. This is helpful for keyboard event trapping.\n\t */\n\tcalendarHasFocus: PropTypes.bool.isRequired,\n\t/**\n\t * Date of day\n\t */\n\tdate: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * If date is disabled\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t */\n\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Triggered when the keyboard moves focus off the calendar.\n\t */\n\tonCalendarBlur: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the next day on the calendar. Triggered when right arrow button is pressed.\n\t */\n\tonKeyboardNavigateToNextDay: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the same day in the next week on the calendar. Triggered when down arrow button is pressed.\n\t */\n\tonKeyboardNavigateToNextWeek: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the previous day on the calendar. Triggered when left arrow button is pressed.\n\t */\n\tonKeyboardNavigateToPreviousDay: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the same day in the previous week on the calendar. Triggered when up arrow button is pressed.\n\t */\n\tonKeyboardNavigateToPreviousWeek: PropTypes.func.isRequired,\n\t/**\n\t * Triggered when a date on the calendar is clicked.\n\t */\n\tonSelectDate: PropTypes.func.isRequired,\n\t/**\n\t * Currently selected date. This should be present in the input field.\n\t */\n\tselectedDate: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Component reference / DOM node for selected day.\n\t */\n\tselectedDateRef: PropTypes.func.isRequired,\n\t/**\n\t * Label of shortcut to jump to today within the calendar. Also used for assistive text for the current day.\n\t */\n\ttodayLabel: PropTypes.string.isRequired,\n\tfocusedDate: PropTypes.instanceOf(Date),\n\tonRequestInternalFocusDate: PropTypes.func,\n};\n\nexport default LanguageDirection(DatepickerCalendarDay);\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Day from './day';\n\nimport DateUtil from '../../../utilities/date';\n\nconst DatepickerWeek = (props) => {\n\tconst days = [];\n\tlet date = props.firstDayOfWeek;\n\n\t// eslint-disable-next-line fp/no-loops\n\tfor (let i = 0; i < 7; i += 1) {\n\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\tdays.push(\n\t\t\t<Day\n\t\t\t\tcalendarHasFocus={props.calendarHasFocus}\n\t\t\t\tdate={date}\n\t\t\t\tdisabled={props.dateDisabled({ date })}\n\t\t\t\tfocusedDate={props.focusedDate}\n\t\t\t\tinitialDateForCalendarRender={props.initialDateForCalendarRender}\n\t\t\t\tkey={date.toString()}\n\t\t\t\tonKeyboardNavigateToNextDay={props.onKeyboardNavigateToNextDay}\n\t\t\t\tonKeyboardNavigateToNextWeek={props.onKeyboardNavigateToNextWeek}\n\t\t\t\tonKeyboardNavigateToPreviousDay={props.onKeyboardNavigateToPreviousDay}\n\t\t\t\tonKeyboardNavigateToPreviousWeek={\n\t\t\t\t\tprops.onKeyboardNavigateToPreviousWeek\n\t\t\t\t}\n\t\t\t\tonCalendarBlur={props.onCalendarBlur}\n\t\t\t\tonRequestInternalFocusDate={props.onRequestInternalFocusDate}\n\t\t\t\tonSelectDate={props.onSelectDate}\n\t\t\t\tselectedDate={props.selectedDate}\n\t\t\t\tselectedDateRef={props.selectedDateRef}\n\t\t\t\ttodayLabel={props.todayLabel}\n\t\t\t/>\n\t\t);\n\t\tdate = DateUtil.addDays(date, 1);\n\t}\n\n\treturn (\n\t\t<tr className=\"week\" key={days[0].toString()}>\n\t\t\t{days}\n\t\t</tr>\n\t);\n};\n\nDatepickerWeek.propTypes = {\n\t/**\n\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t */\n\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Is true if calendar day has focus.\n\t */\n\tcalendarHasFocus: PropTypes.bool.isRequired,\n\t/**\n\t * dateDisabled() takes a date as input argument, returns true if given date should be disabled, otherwise returns false.\n\t */\n\tdateDisabled: PropTypes.func,\n\t/**\n\t * First day of week.\n\t */\n\tfirstDayOfWeek: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Date that has focus.\n\t */\n\tfocusedDate: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Triggered when the keyboard moves focus off the calendar.\n\t */\n\tonCalendarBlur: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the next day on the calendar. Triggered when right arrow button is pressed.\n\t */\n\tonKeyboardNavigateToNextDay: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the same day in the next week on the calendar. Triggered when down arrow button is pressed.\n\t */\n\tonKeyboardNavigateToNextWeek: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the previous day on the calendar. Triggered when left arrow button is pressed.\n\t */\n\tonKeyboardNavigateToPreviousDay: PropTypes.func.isRequired,\n\t/**\n\t * For keyboard navigation. Changes the focus to the same day in the previous week on the calendar. Triggered when up arrow button is pressed.\n\t */\n\tonKeyboardNavigateToPreviousWeek: PropTypes.func.isRequired,\n\t/**\n\t * Triggered when the user wants to focus on a new day witht he keyboard. It returns the keyboard event a data object with the shape: `{date: [Date object]}`. Keyboard event is ommited if a new month is rendered.  _Tested with Mocha framework._\n\t */\n\tonRequestInternalFocusDate: PropTypes.func.isRequired,\n\t/**\n\t * Triggered when a date on the calendar is clicked.\n\t */\n\tonSelectDate: PropTypes.func.isRequired,\n\t/**\n\t * Currently selected date. This should be present in the input field.\n\t */\n\tselectedDate: PropTypes.instanceOf(Date).isRequired,\n\t/**\n\t * Component reference / DOM node for selected day.\n\t */\n\tselectedDateRef: PropTypes.func.isRequired,\n\t/**\n\t * Label of shortcut to jump to today within the calendar. Also used for assistive text for the current day.\n\t */\n\ttodayLabel: PropTypes.string.isRequired,\n};\n\nDatepickerWeek.displayName = 'SLDSDatepickerWeek';\n\nexport default DatepickerWeek;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport Week from './week';\nimport DateUtil from '../../../utilities/date';\n\nclass DatepickerCalendar extends React.Component {\n\tstatic displayName = 'SLDSDatepickerCalendar';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Three letter abbreviations of the days of the week, starting on Sunday.\n\t\t */\n\t\tabbreviatedWeekDayLabels: PropTypes.array.isRequired,\n\t\t/**\n\t\t * dateDisabled() takes a date as input argument, returns true if given date should be disabled, otherwise returns false.\n\t\t */\n\t\tdateDisabled: PropTypes.func,\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t\t */\n\t\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t\t/**\n\t\t * Makes Monday the first day of the week\n\t\t */\n\t\tisIsoWeekday: PropTypes.bool,\n\t\t/**\n\t\t * Triggered when the keyboard moves focus off the calendar.\n\t\t */\n\t\tonCalendarBlur: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Displayed calendar has changed or re-rendered\n\t\t */\n\t\tonChangeMonth: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Internal callback that will eventually trigger when the keyboard moves focus on the calendar. `{date: [Date object], formattedDate: [string]}`.\n\t\t */\n\t\tonRequestInternalFocusDate: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the calendar is cancelled.\n\t\t */\n\t\tonRequestClose: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Triggered when a date on the calendar is clicked.\n\t\t */\n\t\tonSelectDate: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Currently selected date. This should be present in the input field.\n\t\t */\n\t\tselectedDate: PropTypes.instanceOf(Date),\n\t\t/**\n\t\t * Component reference / DOM node for selected day.\n\t\t */\n\t\tselectedDateRef: PropTypes.func,\n\t\t/**\n\t\t * Label of shortcut to jump to today within the calendar. This is also used for assistive text on today's date.\n\t\t */\n\t\ttodayLabel: PropTypes.string.isRequired,\n\t\t/**\n\t\t * For keyboard navigation. Listens for key presses on the last focusable DOM Node, the \"Today\" link, so that dialog focus can be trapped.\n\t\t */\n\t\tonLastFocusableNodeKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the Today `a` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous. `buttonRef={(component) => { if(component) console.log(component); }}`\n\t\t */\n\t\ttodayRef: PropTypes.func,\n\t\t/**\n\t\t * Names of the seven days of the week, starting on Sunday.\n\t\t */\n\t\tweekDayLabels: PropTypes.array.isRequired,\n\t};\n\n\tstate = {\n\t\tfocusedDate: this.props.initialDateForCalendarRender,\n\t\tcalendarHasFocus: true,\n\t\ttodayFocus: false,\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tthis.setCalendarRenderSeedDate(prevProps);\n\t}\n\n\tsetCalendarRenderSeedDate = (prevProps) => {\n\t\t// Set prop that sets focus in child component once it is rendered. This occurs when the month DOM has changed. This will trigger a re-render, but no DOM change will occur, just a DOM focus.\n\t\tif (\n\t\t\t!DateUtil.isEqual(\n\t\t\t\tthis.props.initialDateForCalendarRender,\n\t\t\t\tprevProps.initialDateForCalendarRender\n\t\t\t)\n\t\t) {\n\t\t\tthis.setState({ focusedDate: this.props.initialDateForCalendarRender });\n\t\t\tthis.props.onRequestInternalFocusDate(undefined, {\n\t\t\t\tdate: this.props.initialDateForCalendarRender,\n\t\t\t\ttriggerCallback: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleSelectDate = (event, { date }) => {\n\t\tif (!this.props.dateDisabled({ date })) {\n\t\t\tthis.setState({ selected: date });\n\t\t\tthis.props.onSelectDate(event, { date });\n\t\t}\n\t};\n\n\thandleRequestClose = (event) => {\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose(event, {});\n\t\t}\n\t};\n\n\thandleKeyboardNavigateToPreviousDay = (event, { date }) => {\n\t\tconst prevDate = DateUtil.addDays(date, -1);\n\t\tif (!DateUtil.isSameMonth(prevDate, date)) {\n\t\t\tthis.props.onChangeMonth(event, prevDate);\n\t\t} else {\n\t\t\tthis.setState({ focusedDate: prevDate });\n\t\t\tthis.props.onRequestInternalFocusDate(event, {\n\t\t\t\tdate: prevDate,\n\t\t\t\ttriggerCallback: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKeyboardNavigateToNextDay = (event, { date }) => {\n\t\tconst nextDate = DateUtil.addDays(date, 1);\n\t\tif (!DateUtil.isSameMonth(nextDate, date)) {\n\t\t\tthis.props.onChangeMonth(event, nextDate);\n\t\t} else {\n\t\t\tthis.setState({ focusedDate: nextDate });\n\t\t\tthis.props.onRequestInternalFocusDate(event, {\n\t\t\t\tdate: nextDate,\n\t\t\t\ttriggerCallback: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKeyboardNavigateToPreviousWeek = (event, { date }) => {\n\t\tconst prevDate = DateUtil.addDays(date, -7);\n\t\tif (!DateUtil.isSameMonth(prevDate, date)) {\n\t\t\tthis.props.onChangeMonth(event, prevDate);\n\t\t} else {\n\t\t\tthis.setState({ focusedDate: prevDate });\n\t\t\tthis.props.onRequestInternalFocusDate(event, {\n\t\t\t\tdate: prevDate,\n\t\t\t\ttriggerCallback: true,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKeyboardNavigateToNextWeek = (event, { date }) => {\n\t\tconst nextDate = DateUtil.addDays(date, 7);\n\t\tif (!DateUtil.isSameMonth(nextDate, date)) {\n\t\t\tthis.props.onChangeMonth(event, nextDate);\n\t\t} else {\n\t\t\tthis.setState({ focusedDate: nextDate });\n\t\t\tthis.props.onRequestInternalFocusDate(event, {\n\t\t\t\tdate: nextDate,\n\t\t\t\ttriggerCallback: true,\n\t\t\t});\n\t\t}\n\t};\n\n\trenderWeeks = () => {\n\t\tconst firstDayOfWeekOffset = this.props.isIsoWeekday ? 1 : 0;\n\n\t\tconst firstDayOfMonth = DateUtil.firstDayOfMonth(\n\t\t\tthis.props.initialDateForCalendarRender\n\t\t);\n\n\t\tlet firstDayOfWeek;\n\t\tif (firstDayOfMonth.getDay() > firstDayOfWeekOffset) {\n\t\t\tconst prevWeek = DateUtil.addWeeks(firstDayOfMonth, -1);\n\t\t\tfirstDayOfWeek = DateUtil.nearestWeekDay(prevWeek, firstDayOfWeekOffset);\n\t\t} else {\n\t\t\tfirstDayOfWeek = firstDayOfMonth;\n\t\t}\n\n\t\tconst weeks = [];\n\t\tlet done = false;\n\n\t\tlet monthIndex = firstDayOfWeek.getMonth();\n\t\tlet count = 0;\n\n\t\t// eslint-disable-next-line fp/no-loops\n\t\twhile (!done) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\tweeks.push(\n\t\t\t\t<Week\n\t\t\t\t\tcalendarHasFocus={this.state.calendarHasFocus}\n\t\t\t\t\tdateDisabled={this.props.dateDisabled}\n\t\t\t\t\tfirstDayOfWeek={firstDayOfWeek}\n\t\t\t\t\tkey={firstDayOfWeek.toString()}\n\t\t\t\t\tfocusedDate={this.state.focusedDate}\n\t\t\t\t\tinitialDateForCalendarRender={this.props.initialDateForCalendarRender}\n\t\t\t\t\tonCalendarBlur={this.props.onCalendarBlur}\n\t\t\t\t\tonKeyboardNavigateToPreviousDay={\n\t\t\t\t\t\tthis.handleKeyboardNavigateToPreviousDay\n\t\t\t\t\t}\n\t\t\t\t\tonKeyboardNavigateToNextDay={this.handleKeyboardNavigateToNextDay}\n\t\t\t\t\tonKeyboardNavigateToPreviousWeek={\n\t\t\t\t\t\tthis.handleKeyboardNavigateToPreviousWeek\n\t\t\t\t\t}\n\t\t\t\t\tonKeyboardNavigateToNextWeek={this.handleKeyboardNavigateToNextWeek}\n\t\t\t\t\tonRequestClose={this.handleRequestClose}\n\t\t\t\t\tonRequestInternalFocusDate={this.props.onRequestInternalFocusDate}\n\t\t\t\t\tonSelectDate={this.handleSelectDate}\n\t\t\t\t\tselectedDate={this.props.selectedDate}\n\t\t\t\t\tselectedDateRef={this.props.selectedDateRef}\n\t\t\t\t\ttodayLabel={this.props.todayLabel}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\t// create new weeks\n\t\t\tfirstDayOfWeek = DateUtil.addWeeks(firstDayOfWeek, 1);\n\t\t\tdone = count > 2 && monthIndex !== firstDayOfWeek.getMonth();\n\t\t\tcount += 1;\n\t\t\tmonthIndex = firstDayOfWeek.getMonth();\n\t\t}\n\t\tlet extraWeeks = 0;\n\t\t// eslint-disable-next-line fp/no-loops\n\t\twhile (weeks.length < 6) {\n\t\t\textraWeeks += 1;\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\tweeks.push(\n\t\t\t\t<tr key={`extra_${extraWeeks}`} className=\"week\">\n\t\t\t\t\t<td\n\t\t\t\t\t\taria-disabled=\"true\"\n\t\t\t\t\t\taria-selected=\"false\"\n\t\t\t\t\t\tclassName=\"slds-disabled-text\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-day \">&nbsp;</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t}\n\n\t\treturn weeks;\n\t};\n\n\trender() {\n\t\tconst sunday = (\n\t\t\t<th>\n\t\t\t\t<abbr title={this.props.weekDayLabels[0]}>\n\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[0]}\n\t\t\t\t</abbr>\n\t\t\t</th>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"calendar\">\n\t\t\t\t<table\n\t\t\t\t\tclassName=\"datepicker__month\"\n\t\t\t\t\trole=\"grid\"\n\t\t\t\t\taria-labelledby={`${this.props.id}-month`}\n\t\t\t\t>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{this.props.isIsoWeekday ? null : sunday}\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<abbr title={this.props.weekDayLabels[1]}>\n\t\t\t\t\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[1]}\n\t\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<abbr title={this.props.weekDayLabels[2]}>\n\t\t\t\t\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[2]}\n\t\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<abbr title={this.props.weekDayLabels[3]}>\n\t\t\t\t\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[3]}\n\t\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<abbr title={this.props.weekDayLabels[4]}>\n\t\t\t\t\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[4]}\n\t\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<abbr title={this.props.weekDayLabels[5]}>\n\t\t\t\t\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[5]}\n\t\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th scope=\"col\">\n\t\t\t\t\t\t\t\t<abbr title={this.props.weekDayLabels[6]}>\n\t\t\t\t\t\t\t\t\t{this.props.abbreviatedWeekDayLabels[6]}\n\t\t\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t{this.props.isIsoWeekday && sunday}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.renderWeeks()}\n\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan=\"7\" role=\"gridcell\">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"javascript:void(0)\" // eslint-disable-line no-script-url\n\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\tclassName=\"slds-show_inline-block slds-p-bottom_x-small\"\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\tthis.handleSelectDate(event, { date: new Date() });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonKeyDown={this.props.onLastFocusableNodeKeyDown}\n\t\t\t\t\t\t\t\t\tref={this.props.todayRef}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.props.todayLabel}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DatepickerCalendar;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport Combobox from '../../combobox/combobox';\n\nclass DatepickerYearSelector extends React.Component {\n\tstatic displayName = 'SLDSDatepickerYearSelector';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Label for year picklist/combobox\n\t\t */\n\t\tassistiveTextYear: PropTypes.string.isRequired,\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t\t */\n\t\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t\t/**\n\t\t * Displayed calendar has changed or re-rendered\n\t\t */\n\t\tonChangeMonth: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012).\n\t\t */\n\t\trelativeYearFrom: PropTypes.number,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012).\n\t\t */\n\t\trelativeYearTo: PropTypes.number,\n\t};\n\n\tgetOptions = () => {\n\t\tconst now = new Date();\n\t\tconst fromYear = now.getFullYear() + this.props.relativeYearFrom;\n\t\tconst toYear = now.getFullYear() + this.props.relativeYearTo;\n\t\tconst opts = [];\n\n\t\t// eslint-disable-next-line fp/no-loops\n\t\tfor (let year = fromYear; year < toYear; year += 1) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\topts.push({ label: `${year}`, value: year, id: String(opts.length) });\n\t\t}\n\t\treturn opts;\n\t};\n\n\tgetSelectedValueOption = () => {\n\t\tconst selectedYear = this.props.initialDateForCalendarRender.getFullYear();\n\t\treturn this.getOptions().filter((option) => option.value === selectedYear);\n\t};\n\n\thandleSelect = (event, { selection: selectedValues }) => {\n\t\tconst selectedValue = selectedValues[0]; // safe since we are working with a single selection\n\n\t\tif (selectedValue) {\n\t\t\tthis.props.onChangeMonth(\n\t\t\t\tnew Date(\n\t\t\t\t\tthis.props.initialDateForCalendarRender.setFullYear(\n\t\t\t\t\t\tparseInt(selectedValue.value, 10)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst selection = this.getSelectedValueOption();\n\t\treturn (\n\t\t\t<div className=\"slds-form-element slds-align-content-center\">\n\t\t\t\t<Combobox\n\t\t\t\t\tassistiveText={{ label: this.props.assistiveTextYear }}\n\t\t\t\t\tclassName=\"slds-shrink-none\"\n\t\t\t\t\tclassNameMenu=\"slds-datepicker\"\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonSelect: this.handleSelect,\n\t\t\t\t\t}}\n\t\t\t\t\tid={`${this.props.id}-year-picklist`}\n\t\t\t\t\tinheritWidthOf=\"target\"\n\t\t\t\t\tmenuPosition=\"relative\"\n\t\t\t\t\tmultiple={false}\n\t\t\t\t\toptions={this.getOptions()}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tplaceholder: 'Year',\n\t\t\t\t\t}}\n\t\t\t\t\tselection={selection}\n\t\t\t\t\tvalue={selection.value}\n\t\t\t\t\tvariant=\"readonly\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DatepickerYearSelector;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport YearPicklist from './year-picklist';\nimport Button from '../../button';\n\nimport DateUtil from '../../../utilities/date';\n\nclass DatepickerMonthNavigation extends React.Component {\n\tstatic displayName = 'SLDSDatepickerMonthNavigation';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Label for button to go to the next month\n\t\t */\n\t\tassistiveTextNextMonth: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Label for button to go to the previous month\n\t\t */\n\t\tassistiveTextPreviousMonth: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Label for year picklist/combobox\n\t\t */\n\t\tassistiveTextYear: PropTypes.string.isRequired,\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t\t */\n\t\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t\t/**\n\t\t * Displayed calendar has changed or re-rendered\n\t\t */\n\t\tonChangeMonth: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Names of the months\n\t\t */\n\t\tmonthLabels: PropTypes.array.isRequired,\n\t\t/**\n\t\t * For keyboard navigation. In order to trap focus within the dialog, the first DOM node with a tab index should be listened to.\n\t\t */\n\t\tonPreviousMonthKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous.\n\t\t */\n\t\tpreviousMonthRef: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012).\n\t\t */\n\t\trelativeYearFrom: PropTypes.number,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012).\n\t\t */\n\t\trelativeYearTo: PropTypes.number,\n\t};\n\n\tgetMonthLabel = () =>\n\t\tthis.props.monthLabels[\n\t\t\tnew Date(this.props.initialDateForCalendarRender).getMonth()\n\t\t];\n\n\tgetYearLabel = () =>\n\t\tnew Date(this.props.initialDateForCalendarRender).getFullYear();\n\n\thandleClick = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t};\n\n\thandleYearSelect = (initialDateForCalendarRender) => {\n\t\tthis.props.onChangeMonth(undefined, initialDateForCalendarRender);\n\t};\n\n\tpreviousMonthClicked = () => {\n\t\tthis.props.onChangeMonth(\n\t\t\tundefined,\n\t\t\tDateUtil.addMonths(this.props.initialDateForCalendarRender, -1)\n\t\t);\n\t};\n\n\tnextMonthClicked = () => {\n\t\tthis.props.onChangeMonth(\n\t\t\tundefined,\n\t\t\tDateUtil.addMonths(this.props.initialDateForCalendarRender, 1)\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"slds-datepicker__filter slds-grid\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slds-datepicker__filter_month slds-grid slds-grid_align-spread slds-grow\"\n\t\t\t\t\tstyle={{ flex: 1.75 }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"slds-align-middle\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: this.props.assistiveTextPreviousMonth }}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"left\"\n\t\t\t\t\t\t\ticonVariant=\"container\"\n\t\t\t\t\t\t\tonKeyDown={this.props.onPreviousMonthKeyDown}\n\t\t\t\t\t\t\tonClick={this.previousMonthClicked}\n\t\t\t\t\t\t\tbuttonRef={(component) => {\n\t\t\t\t\t\t\t\tthis.props.previousMonthRef(component);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2\n\t\t\t\t\t\tid={`${this.props.id}-month`}\n\t\t\t\t\t\tclassName=\"slds-align-middle\"\n\t\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\t\taria-atomic\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.getMonthLabel()}{' '}\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">{this.getYearLabel()}</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div className=\"slds-align-middle\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: this.props.assistiveTextNextMonth }}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"right\"\n\t\t\t\t\t\t\ticonVariant=\"container\"\n\t\t\t\t\t\t\tonClick={this.nextMonthClicked}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<YearPicklist\n\t\t\t\t\tassistiveTextYear={this.props.assistiveTextYear}\n\t\t\t\t\tid={this.props.id}\n\t\t\t\t\tinitialDateForCalendarRender={this.props.initialDateForCalendarRender}\n\t\t\t\t\tonChangeMonth={this.handleYearSelect}\n\t\t\t\t\trelativeYearFrom={this.props.relativeYearFrom}\n\t\t\t\t\trelativeYearTo={this.props.relativeYearTo}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DatepickerMonthNavigation;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\nimport Calendar from './calendar';\nimport CalendarNavigation from './navigation';\n\nimport EventUtil from '../../../utilities/event';\nimport KEYS from '../../../utilities/key-code';\n\nclass DatepickerCalendarWrapper extends React.Component {\n\tstatic defaultProps = {\n\t\tselectedDate: new Date(),\n\t\tvalue: new Date(),\n\t};\n\n\tstatic displayName = 'DatepickerCalendarWrapper';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Label for button to go to the next month\n\t\t */\n\t\tassistiveTextNextMonth: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Label for button to go to the previous month\n\t\t */\n\t\tassistiveTextPreviousMonth: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Label for year picklist/combobox\n\t\t */\n\t\tassistiveTextYear: PropTypes.string.isRequired /**\n\t\t * One letter abbreviations of the days of the week, starting on Sunday.\n\t\t */,\n\t\tabbreviatedWeekDayLabels: PropTypes.array.isRequired,\n\t\t/**\n\t\t * Whether or not the `CalendarWrapper` can steal focus from the main `Input`\n\t\t */\n\t\tcanFocusCalendar: PropTypes.bool.isRequired,\n\t\t/**\n\t\t * CSS classes to be added to tag with `slds-datepicker`.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * dateDisabled() takes a date as input argument, returns true if given date should be disabled, otherwise returns false.\n\t\t */\n\t\tdateDisabled: PropTypes.func,\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Makes Monday the first day of the week\n\t\t */\n\t\tisIsoWeekday: PropTypes.bool,\n\t\t/**\n\t\t * For use of datepicker outside of dropdown.\n\t\t */\n\t\tisolated: PropTypes.bool,\n\t\t/**\n\t\t * Names of the months\n\t\t */\n\t\tmonthLabels: PropTypes.array.isRequired,\n\t\t/**\n\t\t * Triggered when the keyboard moves focus on the calendar. {date: [Date object], formattedDate: [string]}  _Tested with Mocha framework._\n\t\t */\n\t\tonCalendarFocus: PropTypes.func,\n\t\t/**\n\t\t * Triggered when the calendar is supposed to close.\n\t\t */\n\t\tonRequestClose: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Triggered when a date on the calendar is clicked.\n\t\t */\n\t\tonSelectDate: PropTypes.func.isRequired,\n\t\t/**\n\t\t * The earliest year that can be selected in the year selection dropdown.\n\t\t */\n\t\trelativeYearFrom: PropTypes.number.isRequired,\n\t\t/**\n\t\t * The maximum year that can be selected in the year selection dropdown.\n\t\t */\n\t\trelativeYearTo: PropTypes.number.isRequired,\n\t\t/**\n\t\t * Currently selected date\n\t\t */\n\t\tselectedDate: PropTypes.instanceOf(Date),\n\t\t/**\n\t\t * Component reference / DOM node for selected day.\n\t\t */\n\t\tselectedDateRef: PropTypes.func,\n\t\t/**\n\t\t * Label of shortcut to jump to today within the calendar. Also used for assistive text for the current day.\n\t\t */\n\t\ttodayLabel: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Names of the seven days of the week, starting on Sunday.\n\t\t */\n\t\tweekDayLabels: PropTypes.array.isRequired,\n\t};\n\n\tstate = {\n\t\tinitialDateForCalendarRender: this.props.selectedDate,\n\t};\n\n\thandleCalendarBlur = (event, { direction }) => {\n\t\tif (direction === 'next' && this.previousMonthRef) {\n\t\t\tif (this.props.onCalendarFocus) {\n\t\t\t\tthis.props.onCalendarFocus(event, {\n\t\t\t\t\tdirection,\n\t\t\t\t\tref: this.previousMonthRef,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.previousMonthRef.focus();\n\t\t} else if (direction === 'previous' && this.todayRef) {\n\t\t\tif (this.props.onCalendarFocus) {\n\t\t\t\tthis.props.onCalendarFocus(event, {\n\t\t\t\t\tdirection,\n\t\t\t\t\tref: this.todayRef,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.todayRef.focus();\n\t\t}\n\t};\n\n\thandleFirstFocusableNodeKeyDown = (event) => {\n\t\tif (event.shiftKey && event.keyCode === KEYS.TAB) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t}\n\t};\n\n\thandleInitialDateForCalendarRenderChange = (\n\t\tevent,\n\t\tinitialDateForCalendarRender\n\t) => {\n\t\tthis.setState({ initialDateForCalendarRender });\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tif (event.keyCode === KEYS.ESCAPE) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tthis.props.onRequestClose(event, {});\n\t\t}\n\t};\n\n\thandleLastFocusableNodeKeyDown = (event) => {\n\t\tif (!event.shiftKey && event.keyCode === KEYS.TAB) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t}\n\t};\n\n\thandleRequestClose = (event) => {\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose(event, {});\n\t\t}\n\t};\n\n\thandleRequestFocusDate = (event, data) => {\n\t\t// will be called three times, due to re-render\n\t\tif (data.ref && this.props.canFocusCalendar) {\n\t\t\tdata.ref.focus();\n\t\t}\n\n\t\t// only call on actual DOM event and not on re-render\n\t\tif (this.props.onCalendarFocus && data.triggerCallback) {\n\t\t\tconst { triggerCallback, ...modifiedData } = data; // eslint-disable-line no-unused-vars\n\t\t\tthis.props.onCalendarFocus(event, modifiedData);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div // eslint-disable-line jsx-a11y/no-static-element-interactions\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-datepicker': this.props.isolated,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\taria-hidden=\"false\"\n\t\t\t\tdata-selection=\"single\"\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t>\n\t\t\t\t<CalendarNavigation\n\t\t\t\t\tassistiveTextNextMonth={this.props.assistiveTextNextMonth}\n\t\t\t\t\tassistiveTextPreviousMonth={this.props.assistiveTextPreviousMonth}\n\t\t\t\t\tassistiveTextYear={this.props.assistiveTextYear}\n\t\t\t\t\tid={this.props.id}\n\t\t\t\t\tinitialDateForCalendarRender={this.state.initialDateForCalendarRender}\n\t\t\t\t\tmonthLabels={this.props.monthLabels}\n\t\t\t\t\tonChangeMonth={this.handleInitialDateForCalendarRenderChange}\n\t\t\t\t\tpreviousMonthRef={(component) => {\n\t\t\t\t\t\tthis.previousMonthRef = component;\n\t\t\t\t\t}}\n\t\t\t\t\tonPreviousMonthKeyDown={this.handleFirstFocusableNodeKeyDown}\n\t\t\t\t\trelativeYearFrom={this.props.relativeYearFrom}\n\t\t\t\t\trelativeYearTo={this.props.relativeYearTo}\n\t\t\t\t/>\n\t\t\t\t<Calendar\n\t\t\t\t\tabbreviatedWeekDayLabels={this.props.abbreviatedWeekDayLabels}\n\t\t\t\t\tdateDisabled={this.props.dateDisabled}\n\t\t\t\t\tid={this.props.id}\n\t\t\t\t\tinitialDateForCalendarRender={this.state.initialDateForCalendarRender}\n\t\t\t\t\tisIsoWeekday={this.props.isIsoWeekday}\n\t\t\t\t\tonCalendarBlur={this.handleCalendarBlur}\n\t\t\t\t\tonChangeMonth={this.handleInitialDateForCalendarRenderChange}\n\t\t\t\t\tonRequestClose={this.handleRequestClose}\n\t\t\t\t\tonRequestInternalFocusDate={this.handleRequestFocusDate}\n\t\t\t\t\tonSelectDate={this.props.onSelectDate}\n\t\t\t\t\tselectedDate={this.props.selectedDate}\n\t\t\t\t\tselectedDateRef={this.props.selectedDateRef}\n\t\t\t\t\ttodayLabel={this.props.todayLabel}\n\t\t\t\t\ttodayRef={(component) => {\n\t\t\t\t\t\tthis.todayRef = component;\n\t\t\t\t\t}}\n\t\t\t\t\tonLastFocusableNodeKeyDown={this.handleLastFocusableNodeKeyDown}\n\t\t\t\t\tweekDayLabels={this.props.weekDayLabels}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DatepickerCalendarWrapper;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n/* eslint-disable import/no-mutable-exports */\n/* eslint-disable  max-len */\n\nimport deprecatedProperty from '../../utilities/warning/deprecated-property';\nimport getComponentDocFn from '../../utilities/get-component-doc';\n\nlet checkProps = function checkPropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tcheckProps = function checkPropsFunction(COMPONENT, props, jsonDoc) {\n\t\tconst createDocUrl = getComponentDocFn(jsonDoc);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.children,\n\t\t\t'children',\n\t\t\t'input',\n\t\t\t`Please see \\`input\\` prop description and add your own \\`Input\\`. Props will be shallow merged. ${createDocUrl(\n\t\t\t\t'input'\n\t\t\t)}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.onFocus,\n\t\t\t'onFocus',\n\t\t\tundefined,\n\t\t\t`Please see \\`input\\` prop description and add your own \\`Input\\`. Props will be shallow merged. ${createDocUrl(\n\t\t\t\t'input'\n\t\t\t)}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.onBlur,\n\t\t\t'onBlur',\n\t\t\tundefined,\n\t\t\t`Please see \\`input\\` prop description and add your own \\`Input\\`. Props will be shallow merged. ${createDocUrl(\n\t\t\t\t'input'\n\t\t\t)}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.abbrWeekDayLabels,\n\t\t\t'abbrWeekDayLabels',\n\t\t\t'abbreviatedWeekDayLabels',\n\t\t\t`Prop name has changed. ${createDocUrl('labels')}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.onDateChange,\n\t\t\t'onDateChange',\n\t\t\t'onChange',\n\t\t\t`Please see prop description for \\`onChange\\`. Parameters have changed. The callback receives an event and a data object of the shape: \\`{date: [Date object], formattedDate: [string], timezoneOffset: [number]}\\` ${createDocUrl(\n\t\t\t\t'onChange'\n\t\t\t)}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.onKeyDown,\n\t\t\t'onKeyDown',\n\t\t\tundefined,\n\t\t\t`Please see \\`input\\` prop description and add your own \\`Input\\`. Props will be shallow merged. ${createDocUrl(\n\t\t\t\t'input'\n\t\t\t)}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.onFocus,\n\t\t\t'required',\n\t\t\tundefined,\n\t\t\t`Please see children prop description and add your own \\`Input\\` as a child of Datepicker. ${createDocUrl(\n\t\t\t\t'children'\n\t\t\t)}`\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.strValue,\n\t\t\t'strValue',\n\t\t\t'formattedValue',\n\t\t\tcreateDocUrl('formattedValue')\n\t\t);\n\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.isInline,\n\t\t\t'isInline',\n\t\t\t'menuPosition=\"relative\"',\n\t\t\tcreateDocUrl('menuPosition')\n\t\t);\n\t};\n}\n\nexport default checkProps;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\nlet lowPriorityWarning = function printWarningFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\t// eslint-disable-next-line fp/no-rest-parameters\n\tconst printWarning = function printWarningFunction(originalMessage, ...args) {\n\t\tlet argIndex = 0;\n\t\tconst message = `Warning: ${originalMessage.replace(/%s/g, () => {\n\t\t\tconst argument = args[argIndex];\n\t\t\targIndex += 1;\n\t\t\treturn argument;\n\t\t})}`;\n\t\tif (typeof console !== 'undefined') {\n\t\t\tconsole.warn(message); // eslint-disable-line no-console\n\t\t}\n\t\ttry {\n\t\t\t// Throw error to enable tracing the callstack.\n\t\t\t// eslint-disable-next-line fp/no-throw\n\t\t\tthrow new Error(message);\n\t\t} catch (event) {} // eslint-disable-line no-empty\n\t};\n\n\t// eslint-disable-next-line fp/no-rest-parameters\n\tlowPriorityWarning = (condition, originalMessage, ...args) => {\n\t\tif (!condition && originalMessage) {\n\t\t\tprintWarning(originalMessage, ...args);\n\t\t}\n\t};\n}\n\nexport default lowPriorityWarning;\n","/* eslint-disable max-lines */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport assign from 'lodash.assign';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport Dialog from '../utilities/dialog';\nimport CalendarWrapper from './private/calendar-wrapper';\nimport InputIcon from '../icon/input-icon';\nimport Input from '../input';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\nimport EventUtil from '../../utilities/event';\nimport KEYS from '../../utilities/key-code';\nimport lowPriorityWarning from '../../utilities/warning/low-priority-warning';\n\nimport { DATE_PICKER } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `nextMonth`: Label for button to go to the next month _Tested with snapshot testing._\n\t * * `openCalendar`: Call to action label for calendar dialog trigger _Tested with snapshot testing._\n\t * * `previousMonth`: Label for button to go to the previous month _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tnextMonth: PropTypes.string,\n\t\topenCalendar: PropTypes.string,\n\t\tpreviousMonth: PropTypes.string,\n\t\tyear: PropTypes.string,\n\t}),\n\t/**\n\t * Aligns the right or left side of the menu with the respective side of the trigger. _Tested with snapshot testing._\n\t */\n\talign: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * CSS classes to be added to tag with `slds-datepicker`. If you are looking for the outer DOM node (slds-dropdown-trigger), please review `triggerClassName`. _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Disable input and calendar. _Tested with Mocha framework._\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * This function callback receives a data object with a key of `date`. Write your own validation and return `true` if the date should be disabled, otherwise please return `false`. The value of `date` is the day rendered in the calendar with the current local time and timezone.\n\t */\n\tdateDisabled: PropTypes.func,\n\t/**\n\t * Date formatting function that formats the `value` prop (`value` is an ECMAScript `Date()` object) and returns a string to be rendered as the `input` value. Please use an external library such as [MomentJS](https://github.com/moment/moment/) for date formatting and internationalization. _Tested with snapshot testing._\n\t * The default `formatter` function is:\n\t * ```\n\t * formatter(date) {\n\t *   return date\n\t *    ? `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n\t *    : '';\n\t * }\n\t * ```\n\t */\n\tformatter: PropTypes.func,\n\t/**\n\t * Value of input that gets passed to `parser` prop on initial render. This prop is only present for uncontrolled use of Datepicker which is _highly discouraged_. A better name for this prop would be `defaultFormatedValue`. Please use the `value` prop instead. _Not tested._\n\t */\n\tformattedValue: PropTypes.string,\n\t/**\n\t * Prevents the dropdown from changing position based on the viewport/window. If set to true your dropdowns can extend outside the viewport _and_ overflow outside of a scrolling parent. If this happens, you might want to consider making the dropdowns contents scrollable to fit the menu on the screen. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t */\n\thasStaticAlignment: PropTypes.bool,\n\t/**\n\t * HTML id for component _Tested with snapshot testing._\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `abbreviatedWeekDays`: Three letter abbreviations of the days of the week, starting on Sunday. _Tested with snapshot testing._\n\t * * `months`: Names of the months. _Tested with snapshot testing._\n\t * * `label`: This label appears above the input.\n\t * * `placeholder`: Placeholder text for input. _Tested with snapshot testing._\n\t * * `today`: Label of shortcut to jump to today within the calendar. This is also used for assistive text on today's date. _Tested with snapshot testing._\n\t * * `weekDays`: Full names of the seven days of the week, starting on Sunday. _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\tabbreviatedWeekDays: PropTypes.array,\n\t\tlabel: PropTypes.string,\n\t\tmonths: PropTypes.array,\n\t\tplaceholder: PropTypes.string,\n\t\ttoday: PropTypes.string,\n\t\tweekDays: PropTypes.array,\n\t}),\n\t/**\n\t * An [Input](http://react.lightningdesignsystem.com/components/inputs/) component. The props from this `Input` component will be merged and override any default props. See [Component composition with prop spread](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#component-composition-with-prop-spread) for more information on this methodology.\n\t */\n\tinput: PropTypes.node,\n\t/**\n\t * Forces the dropdown to be open or closed. See controlled/uncontrolled callback/prop pattern for more on suggested use view [Concepts and Best Practices](https://github.com/salesforce-ux/design-system-react/blob/master/CONTRIBUTING.md#concepts-and-best-practices)\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Makes Monday the first day of the week. _Tested with snapshot testing._\n\t */\n\tisIsoWeekday: PropTypes.bool,\n\t/**\n\t * Please select one of the following:\n\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t */\n\tmenuPosition: PropTypes.oneOf([\n\t\t'absolute',\n\t\t'overflowBoundaryElement',\n\t\t'relative',\n\t]),\n\t/**\n\t * Triggered when the user wants to focus on a new day with the keyboard. If the target node is a day it will return the keyboard event a data object with the shape: `{date: [Date object]}`. Event will be `null` when new month is re-rendered.  _Tested with Mocha framework._\n\t */\n\tonCalendarFocus: PropTypes.func,\n\t/**\n\t * Triggered when the date changes. `onChange` can be used for form validation if needed. It receives an event and a data object in the shape: `{date: [Date object], formattedDate: [string], timezoneOffset: [number]}`. `data.date` is Coordinated Universal Time (UTC), but the days of the calendar are in local time of the user. The `timezoneOffset` is the difference, in minutes, between UTC and the local time. Please note that this means that the offset is positive if the local timezone is behind UTC and negative if it is ahead. `timezoneOffset` is in minutes, for hours divide by `60`. _Tested with Mocha framework._\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Triggered when the calendar is closed. _Tested with Mocha framework._\n\t */\n\tonClose: PropTypes.func,\n\t/**\n\t * Triggered when the calendar has opened. _Tested with Mocha framework._\n\t */\n\tonOpen: PropTypes.func,\n\t/**\n\t * Function called when the calendar dialog would like hide. This will turn the calendar dialog into into a controlled component. Please use with `isOpen`. _Tested with Mocha framework._\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t * Function called when the calendar dialog would like show. This will turn the calendar dialog into into a controlled component. Please use with `isOpen`. _Tested with Mocha framework._\n\t */\n\tonRequestOpen: PropTypes.func,\n\t/**\n\t * Custom function to parse date string from the `input` value, which must return an ECMAScript `Date()` object.  Please use an external library such as [MomentJS](https://github.com/moment/moment/) for date parsing and internationalization. The default `parser` passes the input value to ECMAScript `Date()` and _prays_ for a miracle. **Do not use the default parsing function in production.** _Tested with snapshot testing._\n\t * The default `parser function is:\n\t * ```\n\t * parser(str) {\n\t *   return new Date(str);\n\t * }\n\t * ```\n\t */\n\tparser: PropTypes.func,\n\t/**\n\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012). _Tested with snapshot testing._\n\t */\n\trelativeYearFrom: PropTypes.number,\n\t/**\n\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012). _Tested with snapshot testing._\n\t */\n\trelativeYearTo: PropTypes.number,\n\t/**\n\t * CSS classes to be added to tag with `slds-datepicker-trigger`. This is typically a wrapping `div` around the input. _Tested with snapshot testing._\n\t */\n\ttriggerClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Sets date with a `Date` ECMAScript object. _Tested with snapshot testing._\n\t */\n\tvalue: PropTypes.instanceOf(Date),\n};\n\nconst defaultProps = {\n\talign: 'left',\n\tassistiveText: {\n\t\tnextMonth: 'Next month',\n\t\topenCalendar: 'Open Calendar',\n\t\tpreviousMonth: 'Previous month',\n\t\tyear: 'Year',\n\t},\n\tformatter(date) {\n\t\treturn date\n\t\t\t? `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n\t\t\t: '';\n\t},\n\tlabels: {\n\t\tabbreviatedWeekDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n\t\tmonths: [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December',\n\t\t],\n\t\tplaceholder: 'Pick a Date',\n\t\ttoday: 'Today',\n\t\tweekDays: [\n\t\t\t'Sunday',\n\t\t\t'Monday',\n\t\t\t'Tuesday',\n\t\t\t'Wednesday',\n\t\t\t'Thursday',\n\t\t\t'Friday',\n\t\t\t'Saturday',\n\t\t],\n\t},\n\tmenuPosition: 'absolute',\n\tparser(str) {\n\t\tlowPriorityWarning(\n\t\t\tfalse,\n\t\t\t`Please use an external library for date parsing and internationalization like MomentJS (https://github.com/moment/moment/) instead of the default parser.`\n\t\t);\n\t\treturn new Date(str);\n\t},\n\trelativeYearFrom: -10,\n\trelativeYearTo: 10,\n\tdateDisabled: () => false,\n};\n\n/**\n * A date picker is a non-text input form element. You can select a single date from a popup calendar. Please use an external library such as [MomentJS](https://github.com/moment/moment/) for date formatting and parsing and internationalization. You will want to use your date library within the `parser` and `formatter` callbacks.\n *\n * The calendar is rendered with time/dates based on local browser time of the client browser. All dates are in the local user's timezones and time. Another way to put it is if a user selects a date, they are actually selecting midnight in their current time on their current day and not mightnight in UTC. If `Datepicker` is paired with a time and timezone input, you may want to convert dates provided by this component to UTC and then combine the date with your time and timezone input.\n *\n * Pairing with any other component besides an `input` is untested.\n *\n * This component is wrapped in a [higher order component to listen for clicks outside itself](https://github.com/kentor/react-click-outside) and thus requires use of `ReactDOM`.\n */\nclass Datepicker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Please remove `strValue` on the next breaking change.\n\t\tconst formattedValue = props.formattedValue || props.strValue; // eslint-disable-line react/prop-types\n\t\tconst dateString = props.formatter(props.value);\n\t\tconst initDate = props.value ? dateString : formattedValue;\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tisOpenFromIcon: false,\n\t\t\tvalue: props.value,\n\t\t\tformattedValue: initDate || '',\n\t\t\tinputValue: initDate || '',\n\t\t};\n\n\t\tthis.generatedId = shortid.generate();\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(DATE_PICKER, props, componentDoc);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.value && this.props.value) {\n\t\t\tconst currentDate = this.props.value.getTime();\n\t\t\tconst nextDate = nextProps.value.getTime();\n\n\t\t\tif (currentDate !== nextDate) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: nextProps.value,\n\t\t\t\t\tformattedValue: this.props.formatter(nextProps.value),\n\t\t\t\t\tinputValue: this.props.formatter(nextProps.value),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDatePicker = ({ labels, assistiveText }) => {\n\t\tconst date = this.state.formattedValue\n\t\t\t? this.parseDate(this.state.formattedValue)\n\t\t\t: this.state.value;\n\n\t\treturn (\n\t\t\t<CalendarWrapper\n\t\t\t\t// Please remove `abbrWeekDayLabels` on the next breaking change.\n\t\t\t\tabbreviatedWeekDayLabels={\n\t\t\t\t\tthis.props.abbreviatedWeekDayLabels || // eslint-disable-line react/prop-types\n\t\t\t\t\tthis.props.abbrWeekDayLabels || // eslint-disable-line react/prop-types\n\t\t\t\t\tlabels.abbreviatedWeekDays\n\t\t\t\t}\n\t\t\t\t/* Remove || for assistiveText at next breaking change */\n\t\t\t\tassistiveTextNextMonth={\n\t\t\t\t\tthis.props.assistiveTextNextMonth || assistiveText.nextMonth // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t\tassistiveTextPreviousMonth={\n\t\t\t\t\tthis.props.assistiveTextPreviousMonth || assistiveText.previousMonth // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t\tassistiveTextYear={assistiveText.year}\n\t\t\t\tcanFocusCalendar={this.state.isOpenFromIcon}\n\t\t\t\tid={this.getId()}\n\t\t\t\tisIsoWeekday={this.props.isIsoWeekday}\n\t\t\t\tmonthLabels={\n\t\t\t\t\tthis.props.monthLabels || labels.months // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t\tonCalendarFocus={this.props.onCalendarFocus}\n\t\t\t\tdateDisabled={this.props.dateDisabled}\n\t\t\t\tonRequestClose={this.handleRequestClose}\n\t\t\t\tonSelectDate={this.handleCalendarChange}\n\t\t\t\trelativeYearFrom={this.props.relativeYearFrom}\n\t\t\t\trelativeYearTo={this.props.relativeYearTo}\n\t\t\t\tselectedDate={date || new Date()}\n\t\t\t\tselectedDateRef={(component) => {\n\t\t\t\t\tthis.selectedDateCell = component;\n\t\t\t\t}}\n\t\t\t\ttodayLabel={\n\t\t\t\t\tthis.props.todayLabel || labels.today // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t\tweekDayLabels={\n\t\t\t\t\tthis.props.weekDayLabels || labels.weekDays // eslint-disable-line react/prop-types\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\t};\n\n\tgetDialog = ({ labels, assistiveText }) => {\n\t\t// FOR BACKWARDS COMPATIBILITY\n\t\tconst menuPosition = this.props.isInline\n\t\t\t? 'relative'\n\t\t\t: this.props.menuPosition; // eslint-disable-line react/prop-types\n\n\t\t// SLDS override\n\t\tconst style =\n\t\t\tthis.props.menuPosition !== 'relative' ? { transform: 'none' } : {};\n\n\t\treturn !this.props.disabled && this.getIsOpen() ? (\n\t\t\t<Dialog\n\t\t\t\talign={`bottom ${this.props.align}`}\n\t\t\t\tcontentsClassName={classNames(\n\t\t\t\t\t'slds-datepicker slds-dropdown',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-dropdown_right':\n\t\t\t\t\t\t\tthis.props.menuPosition === 'relative' &&\n\t\t\t\t\t\t\tthis.props.align === 'right',\n\t\t\t\t\t\t'slds-dropdown_left':\n\t\t\t\t\t\t\tthis.props.menuPosition === 'relative' &&\n\t\t\t\t\t\t\tthis.props.align === 'left',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tcontext={this.context}\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tstyle={style}\n\t\t\t\tonClose={this.handleClose}\n\t\t\t\tonOpen={this.handleOpen}\n\t\t\t\tonRequestTargetElement={() => this.inputRef}\n\t\t\t\tposition={menuPosition}\n\t\t\t\tportalMount={this.props.portalMount}\n\t\t\t>\n\t\t\t\t{this.getDatePicker({ labels, assistiveText })}\n\t\t\t</Dialog>\n\t\t) : null;\n\t};\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetIsOpen = () =>\n\t\t!!(typeof this.props.isOpen === 'boolean'\n\t\t\t? this.props.isOpen\n\t\t\t: this.state.isOpen);\n\n\tgetInputProps = ({ assistiveText, labels }) => {\n\t\t/**\n\t\t * 1. DEFAULT: Use default props or state if present.\n\t\t * 2. DEPRECATED API: Use old \"first-level\" props that have been deprecated.\n\t\t * 3. DEPRECATED API: If `children` is present, use props from single child which should be an `<Input/>`\n\t\t * 4. CURRENT API: Use composition with props spread merge from `input` prop.\n\t\t * */\n\n\t\tconst defaultInputProps = {\n\t\t\ticonRight: (\n\t\t\t\t<InputIcon\n\t\t\t\t\t// Remove || for assistiveText at next breaking change\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\ticon:\n\t\t\t\t\t\t\tthis.props.assistiveTextOpenCalendar ||\n\t\t\t\t\t\t\tassistiveText.openCalendar, // eslint-disable-line react/prop-types\n\t\t\t\t\t}}\n\t\t\t\t\taria-haspopup\n\t\t\t\t\taria-expanded={this.getIsOpen()}\n\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\tname=\"event\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.openDialogFromIcon();\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t/>\n\t\t\t),\n\t\t\tinputRef: (component) => {\n\t\t\t\tthis.setInputRef(component);\n\t\t\t},\n\t\t\tid: this.getId(),\n\t\t\tonChange: this.handleInputChange,\n\t\t\tonClick: () => {\n\t\t\t\tthis.openDialog();\n\t\t\t},\n\t\t\tonKeyDown: this.handleKeyDown,\n\t\t\tvalue: this.state.inputValue,\n\t\t};\n\n\t\t// eslint-disable react/prop-types\n\t\tconst topLevelDeprecatedComponentProps = {\n\t\t\tdisabled: this.props.disabled,\n\t\t\tlabel: this.props.label || labels.label,\n\t\t\tonBlur: this.props.onBlur,\n\t\t\tonFocus: this.props.onFocus,\n\t\t\tplaceholder: this.props.placeholder || labels.placeholder,\n\t\t\trequired: this.props.required,\n\t\t};\n\t\t// eslint-enable react/prop-types\n\n\t\tconst childrenProps = this.props.children && this.props.children.props;\n\t\tconst childrenPropInputProps = {\n\t\t\t...childrenProps,\n\t\t\tonClick: () => {\n\t\t\t\tthis.openDialog();\n\t\t\t\tif (childrenProps && childrenProps.onClick) {\n\t\t\t\t\tchildrenProps.onClick();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\tconst inputRenderProps = this.props.input && this.props.input.props;\n\n\t\treturn {\n\t\t\t...defaultInputProps,\n\t\t\t...topLevelDeprecatedComponentProps,\n\t\t\t...childrenPropInputProps,\n\t\t\t...inputRenderProps,\n\t\t};\n\t};\n\n\tsetInputRef = (component) => {\n\t\tthis.inputRef = component;\n\t\t// yes, this is a re-render triggered by a render.\n\t\t// Dialog/Popper.js cannot place the popover until\n\t\t// the trigger/target DOM node is mounted. This\n\t\t// way `findDOMNode` is not called and parent\n\t\t// DOM nodes are not queried.\n\t\tif (!this.state.inputRendered) {\n\t\t\tthis.setState({ inputRendered: true });\n\t\t}\n\t};\n\n\thandleCalendarChange = (event, { date }) => {\n\t\tthis.setState({\n\t\t\tvalue: date,\n\t\t\tformattedValue: this.props.formatter(date),\n\t\t\tinputValue: this.props.formatter(date),\n\t\t});\n\n\t\tthis.handleRequestClose();\n\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(event, {\n\t\t\t\tdate,\n\t\t\t\tformattedDate: this.props.formatter(date),\n\t\t\t\ttimezoneOffset: date.getTimezoneOffset(),\n\t\t\t});\n\t\t}\n\n\t\t// Please remove `onDateChange` on the next breaking change.\n\t\t/* eslint-disable react/prop-types */\n\t\tif (this.props.onDateChange) {\n\t\t\tthis.props.onDateChange(date, this.props.formatter(date));\n\t\t}\n\t\t/* eslint-enable react/prop-types */\n\t};\n\n\thandleClickOutside = () => {\n\t\tthis.handleRequestClose();\n\t};\n\n\thandleClose = () => {\n\t\tif (this.props.onClose) {\n\t\t\tthis.props.onClose();\n\t\t}\n\t};\n\n\thandleInputChange = (event) => {\n\t\tthis.setState({\n\t\t\tformattedValue: event.target.value,\n\t\t\tinputValue: event.target.value,\n\t\t});\n\n\t\tconst date = this.props.parser(event.target.value);\n\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(event, {\n\t\t\t\tdate,\n\t\t\t\tformattedDate: event.target.value,\n\t\t\t\ttimezoneOffset: date.getTimezoneOffset(),\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKeyDown = (event) => {\n\t\t// Don't open if user is selecting text\n\t\tif (\n\t\t\tevent.keyCode &&\n\t\t\t!event.shiftKey &&\n\t\t\t(event.keyCode === KEYS.DOWN || event.keyCode === KEYS.UP)\n\t\t) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tthis.setState({ isOpen: true });\n\t\t}\n\n\t\tif (event.keyCode === KEYS.ESCAPE || event.keyCode === KEYS.ENTER) {\n\t\t\tEventUtil.trapEvent(event);\n\t\t\tthis.setState({ isOpen: false });\n\t\t}\n\n\t\t// Please remove `onKeyDown` on the next breaking change.\n\t\t/* eslint-disable react/prop-types */\n\t\tif (this.props.onKeyDown) {\n\t\t\tthis.props.onKeyDown(event, {});\n\t\t}\n\t\t/* eslint-enable react/prop-types */\n\t};\n\n\thandleOpen = (event, { portal }) => {\n\t\tif (this.props.onOpen) {\n\t\t\tthis.props.onOpen(event, { portal });\n\t\t}\n\n\t\tif (this.selectedDateCell && this.state.isOpenFromIcon) {\n\t\t\tthis.selectedDateCell.focus();\n\t\t}\n\t};\n\n\thandleRequestClose = () => {\n\t\tif (this.props.onRequestClose) {\n\t\t\tthis.props.onRequestClose();\n\t\t}\n\n\t\tif (this.getIsOpen()) {\n\t\t\tthis.setState({ isOpen: false, isOpenFromIcon: false });\n\n\t\t\tif (this.inputRef) {\n\t\t\t\tthis.inputRef.focus();\n\t\t\t}\n\t\t}\n\t};\n\n\topenDialogFromIcon = () => {\n\t\tthis.setState({ isOpenFromIcon: true });\n\t\tthis.openDialog(true);\n\t};\n\n\topenDialog = (isRequestFromIcon = false) => {\n\t\tif (!isRequestFromIcon) {\n\t\t\tthis.setState({ isOpenFromIcon: false });\n\t\t}\n\t\tif (this.props.onRequestOpen) {\n\t\t\tthis.props.onRequestOpen();\n\t\t} else {\n\t\t\tthis.setState({ isOpen: true });\n\t\t}\n\t};\n\n\tparseDate = (formattedValue) => {\n\t\tlet parsedDate = this.props.parser(formattedValue);\n\t\tif (\n\t\t\tObject.prototype.toString.call(parsedDate) !== '[object Date]' ||\n\t\t\tisNaN(parsedDate.getTime())\n\t\t) {\n\t\t\tparsedDate = new Date();\n\t\t}\n\t\treturn parsedDate;\n\t};\n\n\trender() {\n\t\t// Merge objects of strings with their default object\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\n\t\tconst inputProps = this.getInputProps({ assistiveText, labels });\n\n\t\t// `children` prop is a deprecated API. Future breaking change should limit Datepicker to only `Input` usage and not a random child node.\n\t\tconst inputToRender = this.props.children ? (\n\t\t\tReact.cloneElement(this.props.children, {\n\t\t\t\t...inputProps,\n\t\t\t})\n\t\t) : (\n\t\t\t<Input {...inputProps} />\n\t\t);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-dropdown-trigger',\n\t\t\t\t\t'slds-dropdown-trigger_click',\n\t\t\t\t\t'ignore-react-onclickoutside',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-is-open': this.getIsOpen(),\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.triggerClassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{inputToRender}\n\t\t\t\t{this.getDialog({ labels, assistiveText })}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDatepicker.contextTypes = {\n\ticonPath: PropTypes.string,\n};\n\nDatepicker.displayName = DATE_PICKER;\nDatepicker.propTypes = propTypes;\nDatepicker.defaultProps = defaultProps;\n\nexport default Datepicker;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### onClickOutside\n// Listen for clicks that occur somewhere in the document, outside of the element itself\nimport onClickOutside from 'react-onclickoutside';\nimport Datepicker from './date-picker';\n\nexport default onClickOutside(Datepicker);\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n/* eslint-disable import/no-mutable-exports */\n/* eslint-disable max-len */\n\nimport deprecatedEventParameter from '../../utilities/warning/deprecated-event-parameter';\nimport getComponentDocFn from '../../utilities/get-component-doc';\nimport onlyOneOfProperties from '../../utilities/warning/only-one-of-properties';\nimport sunsetProperty from '../../utilities/warning/sunset-property';\n\nlet checkProps = function checkPropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tcheckProps = function checkPropsFunction(COMPONENT, props, jsonDoc) {\n\t\tconst createDocUrl = getComponentDocFn(jsonDoc);\n\n\t\tsunsetProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.label,\n\t\t\t'label',\n\t\t\t`Use \\`labels.label\\` instead.${createDocUrl('labels')}`\n\t\t);\n\n\t\tdeprecatedEventParameter(\n\t\t\tCOMPONENT,\n\t\t\t{\n\t\t\t\toldEventParameterOrder: props.oldEventParameterOrder,\n\t\t\t\tpropAsString: 'onChange',\n\t\t\t\tpropAsValue: props.onChange,\n\t\t\t},\n\t\t\t`\\`components/forms/checkbox\\` is deprecated. \\`components/checkbox\\` should be used. When this path update is made \\`onChange\\` event parameters will change from \\`onChange(value, event, { value }) to \\`onChange(event, { value }). Please update your event parameters when you change paths.\\` If you are using the CommonJS named import, \\`Checkbox\\` events will break at v1.0 and this warning will be present until then. Please review https://github.com/salesforce/design-system-react/releases when you upgrade. ${createDocUrl(\n\t\t\t\t'onChange'\n\t\t\t)}`\n\t\t);\n\n\t\tif (props.variant === 'toggle' && props.indeterminate === true) {\n\t\t\tonlyOneOfProperties(\n\t\t\t\tCOMPONENT,\n\t\t\t\t{\n\t\t\t\t\tvariant: props.variant,\n\t\t\t\t\tindeterminate: props.indeterminate,\n\t\t\t\t},\n\t\t\t\t`Currently SLDS does not support the \\`indeterminate\\` state in Checkbox Toggle. See SLDS documentation about [Checkbox Toggle](https://lightningdesignsystem.com/components/forms/#flavor-checkbox-toggle-checkbox-toggle) for more information. ${createDocUrl(\n\t\t\t\t\t'variant'\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport default checkProps;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Checkbox Component\n\n// Implements the [Checkbox design pattern](https://www.lightningdesignsystem.com/components/forms/#checkbox) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ### Event Helpers\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\nimport { CHECKBOX } from '../../utilities/constants';\nimport Icon from '../icon';\n\nimport getAriaProps from '../../utilities/get-aria-props';\n\nconst propTypes = {\n\t/**\n\t * An HTML ID that is shared with ARIA-supported devices with the\n\t * `aria-controls` attribute in order to relate the input with\n\t * another region of the page. An example would be a select box\n\t * that shows or hides a panel.\n\t */\n\t'aria-controls': PropTypes.string,\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them. This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need.\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * The aria-labelledby attribute establishes relationships between objects and their label(s), and its value should be one or more element IDs, which refer to elements that have the text needed for labeling. List multiple element IDs in a space delimited fashion.\n\t */\n\t'aria-labelledby': PropTypes.string,\n\t/**\n\t * `aria-owns` indicate that an element depends on the current one when the relation can't be determined by the hierarchy structure.\n\t */\n\t'aria-owns': PropTypes.string,\n\t/**\n\t * The `aria-required` attribute is used to indicate that user input is required on an element before a form can be submitted.\n\t */\n\t'aria-required': PropTypes.bool,\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `heading`: This is used as a visually hidden label if, no `labels.heading` is provided.\n\t * * `label`: This is used as a visually hidden label if, no `labels.label` is provided.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\theading: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * The Checkbox should be a controlled component, and will always be in the state specified. If checked is not defined, the state of the uncontrolled native `input` component will be used.\n\t */\n\tchecked: PropTypes.bool,\n\t/**\n\t * This is the initial value of an uncontrolled form element and is present only\n\t * to provide compatibility with hybrid framework applications that are not\n\t * entirely React. It should only be used in an application without centralized\n\t * state (Redux, Flux). \"Controlled components\" with centralized state is highly recommended. See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n\t */\n\tdefaultChecked: PropTypes.bool,\n\t/**\n\t * Class names to be added to the outer container of the Checkbox.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Disables the Checkbox and prevents clicking it.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Message to display when the Checkbox is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation and ARIA support. This ID is added to the `input` element\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * The Checkbox will be indeterminate if its state can not be figured out or is partially checked. Once a checkbox is indeterminate, a click should cause it to be checked. Since a user cannot put a checkbox into an indeterminate state, it is assumed you are controlling the value of `checked` with the parent, also, and that this is a controlled component. **Note:** `indeterminate` proptype does nothing in the `toggle` variant, as [SLDS does not support it](https://lightningdesignsystem.com/components/forms/#flavor-checkbox-toggle-checkbox-toggle).\n\t */\n\tindeterminate: PropTypes.bool,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `heading`: Heading for the visual picker variant\n\t * * `label`: Label for the _enabled_ state of the Toggle variant. Defaults to \"Enabled\".\n\t * * `toggleDisabled`: Label for the _disabled_ state of the Toggle variant. Defaults to \"Disabled\". Note that this uses SLDS language, and meaning, of \"Enabled\" and \"Disabled\"; referring to the state of whatever the checkbox is _toggling_, not whether the checkbox itself is enabled or disabled.\n\t * * `toggleEnabled`: Label for the _enabled_ state of the Toggle variant. Defaults to \"Enabled\".\n\t */\n\tlabels: PropTypes.shape({\n\t\theading: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t\ttoggleDisabled: PropTypes.string,\n\t\ttoggleEnabled: PropTypes.string,\n\t}),\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * This event fires when the Checkbox looses focus. It passes in `{ event }`.\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * This event fires when the Checkbox changes. Passes in `event, { checked }`. This used to be `checked, event, { checked }`.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * This event fires when the Checkbox is focused. It passes in `{ event }`.\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * This event fires when a key is pressed down. It passes in `{ event }`.\n\t */\n\tonKeyDown: PropTypes.func,\n\t/**\n\t * This event fires when a character is typed. See [this article](http://www.bloggingdeveloper.com/post/KeyPress-KeyDown-KeyUp-The-Difference-Between-Javascript-Key-Events.aspx) for more information. It passes in `{ event }`.\n\t */\n\tonKeyPress: PropTypes.func,\n\t/**\n\t * This event fires when a pressed key is released. It passes in `{ event }`.\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Displays the value of the input, but does not allow changes.\n\t */\n\treadOnly: PropTypes.bool,\n\t/**\n\t * Highlights the Checkbox as a required field (does not perform any validation).\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * The aria-role of the checkbox.\n\t */\n\trole: PropTypes.string,\n\t/**\n\t * Which UX pattern of checkbox? The default is `base` while other option is `toggle`. (**Note:** `toggle` variant does not support the `indeterminate` feature, because [SLDS does not support it](https://lightningdesignsystem.com/components/forms/#flavor-checkbox-toggle-checkbox-toggle).)\n\t */\n\tvariant: PropTypes.oneOf(['base', 'toggle', 'button-group', 'visual-picker']),\n\t/**\n\t * Determines whether visual picker is coverable when selected (only for visual picker variant)\n\t */\n\tcoverable: PropTypes.bool,\n\t/**\n\t * Determines whether the visual picker should be vertical or horizontal (only for visual picker variant)\n\t */\n\tvertical: PropTypes.bool,\n\t/**\n\t * Allows icon to shown with checkbox (only for non-coverable visual picker variant)\n\t */\n\tonRenderVisualPicker: PropTypes.func,\n\t/**\n\t * Allows icon to shown if checkbox is not selected (only for visual picker variant)\n\t */\n\tonRenderVisualPickerSelected: PropTypes.func,\n\t/**\n\t * Allows icon to shown if checkbox is not selected (only for visual picker variant)\n\t */\n\tonRenderVisualPickerNotSelected: PropTypes.func,\n\t/**\n\t * Size of checkbox in case of visual composer variant\n\t */\n\tsize: PropTypes.oneOf(['medium', 'large']),\n};\n\nconst defaultProps = {\n\tassistiveText: {},\n\tlabels: {\n\t\ttoggleDisabled: 'Disabled',\n\t\ttoggleEnabled: 'Enabled',\n\t},\n\tvariant: 'base',\n};\n\n/**\n * The ability to style checkboxes with CSS varies across browsers. Using this component ensures checkboxes look the same everywhere.\n */\nclass Checkbox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tcheckProps(CHECKBOX, this.props, componentDoc);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetErrorId = () =>\n\t\tthis.props.errorText ? `${this.getId()}-error-text` : undefined;\n\n\tgetAriaDescribedBy = ({ idArray = [] } = {}) =>\n\t\tidArray\n\t\t\t.concat(this.props['aria-describedby'], this.getErrorId())\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ') || undefined;\n\n\thandleChange = (event) => {\n\t\tconst { checked, indeterminate, onChange } = this.props;\n\n\t\tif (typeof onChange === 'function') {\n\t\t\t// `target.checked` is present twice to maintain backwards compatibility. Please remove first parameter `value` on the next breaking change or when `forms/checkbox` is removed.\n\t\t\tif (this.props.oldEventParameterOrder) {\n\t\t\t\tonChange(event.target.checked, event, {\n\t\t\t\t\tchecked: indeterminate ? true : !checked,\n\t\t\t\t\tindeterminate: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// NEW API\n\t\t\t\tonChange(event, {\n\t\t\t\t\tchecked: indeterminate ? true : !checked,\n\t\t\t\t\tindeterminate: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tif (event.keyCode) {\n\t\t\tif (event.keyCode === KEYS.ENTER || event.keyCode === KEYS.SPACE) {\n\t\t\t\tEventUtil.trapImmediate(event);\n\t\t\t\tthis.handleChange(event);\n\t\t\t}\n\t\t}\n\t};\n\n\trenderButtonGroupVariant = (props, ariaProps, assistiveText, labels) => (\n\t\t<span className=\"slds-button slds-checkbox_button\">\n\t\t\t<input\n\t\t\t\tdisabled={props.disabled}\n\t\t\t\t/* A form element should not have both checked and defaultChecked props. */\n\t\t\t\t{...(props.checked !== undefined\n\t\t\t\t\t? { checked: props.checked }\n\t\t\t\t\t: { defaultChecked: props.defaultChecked })}\n\t\t\t\tid={this.getId()}\n\t\t\t\tname={props.name}\n\t\t\t\tonBlur={props.onBlur}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonFocus={props.onFocus}\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\tref={(component) => {\n\t\t\t\t\tthis.input = component;\n\t\t\t\t}}\n\t\t\t\trole={props.role}\n\t\t\t\trequired={props.required}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\t{...ariaProps}\n\t\t\t\taria-describedby={this.getAriaDescribedBy()}\n\t\t\t/>\n\t\t\t<label className=\"slds-checkbox_button__label\" htmlFor={this.getId()}>\n\t\t\t\t<span className=\"slds-checkbox_faux\">{labels.label}</span>\n\t\t\t\t{assistiveText.label ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.label}</span>\n\t\t\t\t) : null}\n\t\t\t</label>\n\t\t</span>\n\t);\n\n\trenderBaseVariant = (props, ariaProps, assistiveText, labels) => (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-form-element',\n\t\t\t\t{\n\t\t\t\t\t'is-required': props.required,\n\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t},\n\t\t\t\tprops.className\n\t\t\t)}\n\t\t>\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<span className=\"slds-checkbox\">\n\t\t\t\t\t{props.required ? (\n\t\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t\t{'*'}\n\t\t\t\t\t\t</abbr>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t\t/* A form element should not have both checked and defaultChecked props. */\n\t\t\t\t\t\t{...(props.checked !== undefined\n\t\t\t\t\t\t\t? { checked: props.checked }\n\t\t\t\t\t\t\t: { defaultChecked: props.defaultChecked })}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tname={props.name}\n\t\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonFocus={props.onFocus}\n\t\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\t\tref={(component) => {\n\t\t\t\t\t\t\tif (component) {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\t\t\t\tcomponent.indeterminate = props.indeterminate;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.input = component;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trole={props.role}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t{...ariaProps}\n\t\t\t\t\t\taria-describedby={this.getAriaDescribedBy()}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"slds-checkbox__label\"\n\t\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t\t\tid={props.labelId}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-checkbox_faux\" />\n\t\t\t\t\t\t{labels.label ? (\n\t\t\t\t\t\t\t<span className=\"slds-form-element__label\">{labels.label}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{assistiveText.label ? (\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.label}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</label>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{props.errorText ? (\n\t\t\t\t<div className=\"slds-form-element__help\" id={this.getErrorId()}>\n\t\t\t\t\t{props.errorText}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n\n\trenderToggleVariant = (props, ariaProps, assistiveText, labels) => (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-form-element',\n\t\t\t\t{\n\t\t\t\t\t'is-required': props.required,\n\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t},\n\t\t\t\tprops.className\n\t\t\t)}\n\t\t>\n\t\t\t<label className=\"slds-checkbox_toggle slds-grid\" htmlFor={this.getId()}>\n\t\t\t\t{props.required ? (\n\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t{'*'}\n\t\t\t\t\t</abbr>\n\t\t\t\t) : null}\n\t\t\t\t{labels.label ? (\n\t\t\t\t\t<span className=\"slds-form-element__label slds-m-bottom_none\">\n\t\t\t\t\t\t{labels.label}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t\t{assistiveText.label ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.label}</span>\n\t\t\t\t) : null}\n\t\t\t\t<input\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t/* A form element should not have both checked and defaultChecked props. */\n\t\t\t\t\t{...(props.checked !== undefined\n\t\t\t\t\t\t? { checked: props.checked }\n\t\t\t\t\t\t: { defaultChecked: props.defaultChecked })}\n\t\t\t\t\tname={props.name}\n\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonFocus={props.onFocus}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tref={(component) => {\n\t\t\t\t\t\tthis.input = component;\n\t\t\t\t\t}}\n\t\t\t\t\trole={props.role}\n\t\t\t\t\trequired={props.required}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t{...ariaProps}\n\t\t\t\t\taria-describedby={this.getAriaDescribedBy({\n\t\t\t\t\t\tidArray: [`${this.getId()}-desc`],\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t\t<span\n\t\t\t\t\tid={`${this.getId()}-desc`}\n\t\t\t\t\tclassName=\"slds-checkbox_faux_container\"\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-checkbox_faux\" />\n\t\t\t\t\t<span className=\"slds-checkbox_on\">{labels.toggleEnabled}</span>\n\t\t\t\t\t<span className=\"slds-checkbox_off\">{labels.toggleDisabled}</span>\n\t\t\t\t</span>\n\t\t\t</label>\n\t\t\t{props.errorText ? (\n\t\t\t\t<div className=\"slds-form-element__help\" id={this.getErrorId()}>\n\t\t\t\t\t{props.errorText}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n\n\trenderVisualPickerVariant = (props, ariaProps, assistiveText) => (\n\t\t<span\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-visual-picker',\n\t\t\t\t`slds-visual-picker_${this.props.size}`,\n\t\t\t\tthis.props.vertical ? 'slds-visual-picker_vertical' : null\n\t\t\t)}\n\t\t>\n\t\t\t<input\n\t\t\t\tdisabled={props.disabled}\n\t\t\t\t/* A form element should not have both checked and defaultChecked props. */\n\t\t\t\t{...(props.checked !== undefined\n\t\t\t\t\t? { checked: props.checked }\n\t\t\t\t\t: { defaultChecked: props.defaultChecked })}\n\t\t\t\tid={this.getId()}\n\t\t\t\tname={props.name}\n\t\t\t\tonBlur={props.onBlur}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonFocus={props.onFocus}\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\tref={(component) => {\n\t\t\t\t\tthis.input = component;\n\t\t\t\t}}\n\t\t\t\trole={props.role}\n\t\t\t\trequired={props.required}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\t{...ariaProps}\n\t\t\t\taria-describedby={this.getAriaDescribedBy()}\n\t\t\t/>\n\t\t\t<label className=\"slds-checkbox_button__label\" htmlFor={this.getId()}>\n\t\t\t\t{this.props.coverable ? (\n\t\t\t\t\t<div className=\"slds-visual-picker__figure slds-visual-picker__icon slds-align_absolute-center\">\n\t\t\t\t\t\t<span className=\"slds-is-selected\">\n\t\t\t\t\t\t\t{this.props.onRenderVisualPickerSelected()}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"slds-is-not-selected\">\n\t\t\t\t\t\t\t{this.props.onRenderVisualPickerNotSelected()}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<span className=\"slds-visual-picker__figure slds-visual-picker__text slds-align_absolute-center\">\n\t\t\t\t\t\t{this.props.onRenderVisualPicker()}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t\t{!this.props.vertical ? (\n\t\t\t\t\t<span className=\"slds-visual-picker__body\">\n\t\t\t\t\t\t{this.props.labels.heading ? (\n\t\t\t\t\t\t\t<span className=\"slds-text-heading_small\">\n\t\t\t\t\t\t\t\t{this.props.labels.heading}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<span className=\"slds-text-title\">{this.props.labels.label}</span>\n\t\t\t\t\t\t{assistiveText.label || assistiveText.heading ? (\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{assistiveText.label || assistiveText.heading}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t\t{!this.props.coverable ? (\n\t\t\t\t\t<span className=\"slds-icon_container slds-visual-picker__text-check\">\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\tname=\"check\"\n\t\t\t\t\t\t\tcolorVariant=\"base\"\n\t\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t</label>\n\t\t</span>\n\t);\n\n\trender() {\n\t\tconst ariaProps = getAriaProps(this.props);\n\n\t\tif (this.props.variant === 'toggle') {\n\t\t\tariaProps['aria-describedby'] = `${this.getId()}-desc`;\n\t\t}\n\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t/* Remove backward compatibility at next breaking change */\n\t\t\t...(typeof this.props.assistiveText === 'string'\n\t\t\t\t? { label: this.props.assistiveText }\n\t\t\t\t: {}),\n\t\t\t...(typeof this.props.assistiveText === 'object'\n\t\t\t\t? this.props.assistiveText\n\t\t\t\t: {}),\n\t\t};\n\t\tconst labels = {\n\t\t\t...defaultProps.labels,\n\t\t\t/* Remove backward compatibility at next breaking change */\n\t\t\t...(this.props.label ? { label: this.props.label } : {}),\n\t\t\t...this.props.labels,\n\t\t};\n\n\t\tconst subRenders = {\n\t\t\tbase: this.renderBaseVariant,\n\t\t\t'button-group': this.renderButtonGroupVariant,\n\t\t\ttoggle: this.renderToggleVariant,\n\t\t\t'visual-picker': this.renderVisualPickerVariant,\n\t\t};\n\t\tconst variantExists = subRenders[this.props.variant];\n\n\t\treturn variantExists\n\t\t\t? subRenders[this.props.variant](\n\t\t\t\t\tthis.props,\n\t\t\t\t\tariaProps,\n\t\t\t\t\tassistiveText,\n\t\t\t\t\tlabels\n\t\t\t\t)\n\t\t\t: subRenders.base(this.props, ariaProps, assistiveText, labels);\n\t}\n}\n\nCheckbox.displayName = CHECKBOX;\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\n\nexport default Checkbox;\n"],"sourceRoot":""}