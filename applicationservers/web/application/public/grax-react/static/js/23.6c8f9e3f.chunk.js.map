{"version":3,"sources":["components/GRAXEnvSetting.jsx","components/GRAXCloudConfigurationForm.jsx","settings/GRAXCloudConfigurationFormSettings.js","components/SLDSSection.jsx"],"names":["GRAXEnvSettingCombobox","lazy","GRAXEnvSettingSwitch","GRAXEnvSettingInput","GRAXEnvSetting","props","getComponentToRender","label","type","defaultValue","key","id","setting","onChange","v","onChangeTrigger","helpTextTooltip","getHelpTextTooltip","Date","now","toString","state","inputValue","selection","selectedOption","name","_","startCase","camelCase","value","this","onBlur","getLabelFromName","helpText","align","content","fallback","size","variant","getLabel","getType","getDefaultValue","React","PureComponent","BonsaiElasticProvider","title","className","onGetConfig","onChangeConfig","readOnly","onClick","onTest","Component","AWSElasticProvider","htmlFor","disabled","ElasticCoProvider","AzureStorageProvider","AWSStorageProvider","assistiveText","labels","defaultChecked","GoogleStorageProvider","MinioStorageProvider","GRAXCloudConfigurationForm","testElasticHandler","configuration","setState","isTesting","$","ajax","url","baseUrl","contentType","data","JSON","stringify","elasticEnvConfig","elastic","skipFail","success","res","console","log","alert","ElasticSearch","bind","error","xhr","status","err","testStorageHandler","storage","length","storageEnvConfig","aws","onNameChangeHandler","e","persist","target","triggerConfigurationChange","onElasticProviderChangeHander","set","provider","onStorageProviderChangeHandler","currentValue","get","newValue","onElasticUrlChangeHandler","f","targetKey","hasOwnProperty","onSourceControlChangeHandler","sourceControlEnabled","checked","sourceControlProvider","isLoading","metadataBackupIndex","cloneDeep","Fragment","startsWith","map","METADATA_BACKUP_SETTINGS_BY_PROVIDER","i","SYNC_ANALYTICS_AND_MARKETING_CLOUD_SETTINGS","TIME_MACHINE_SETTINGS","module","exports","github","gitlab","SLDSSection","isOpen","undefined","isCollapsible","handleToggle","onToggle","preventDefault","join","category","children"],"mappings":"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","file":"static/js/23.6c8f9e3f.chunk.js","sourcesContent":["import React, { Suspense, lazy } from \"react\";\nimport _ from \"lodash\";\nimport { Tooltip, Spinner } from \"@salesforce/design-system-react\";\n\nconst GRAXEnvSettingCombobox = lazy(() => import(\"./GRAXEnvSettingCombobox\"));\nconst GRAXEnvSettingSwitch = lazy(() => import(\"./GRAXEnvSettingSwitch\"));\nconst GRAXEnvSettingInput = lazy(() => import(\"./GRAXEnvSettingInput\"));\n\nexport default class GRAXEnvSetting extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    if (this.props.id) {\n      this.id = this.props.id;\n    } else {\n      this.id = Date.now().toString();\n    }\n\n    this.state = {\n      inputValue: \"\",\n      selection: null,\n      selectedOption: null\n    };\n  }\n\n  getLabelFromName(name) {\n    return _.startCase(_.camelCase(name));\n  }\n\n  onChangeTrigger(value) {\n    const onChange = this.props.onChange || this.props.onBlur || (() => {});\n\n    onChange(value);\n  }\n\n  getType() {\n    return this.props.setting.type || \"text\";\n  }\n\n  getLabel() {\n    if (this.props.setting.label) {\n      return this.props.setting.label;\n    }\n\n    return this.getLabelFromName(this.props.setting.name);\n  }\n\n  getDefaultValue() {\n    return this.props.setting.defaultValue || this.props.defaultValue;\n  }\n\n  getHelpTextTooltip() {\n    if (this.props.setting.helpText) {\n      return (\n        <Tooltip\n          key={this.id + \"-helptext\"}\n          id={this.id + \"-helptext\"}\n          align=\"top left\"\n          content={this.props.setting.helpText}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  getComponentToRender = ({ label, type, defaultValue }) => {\n    if (type === \"combobox\") {\n      return (\n        <GRAXEnvSettingCombobox\n          key={this.id}\n          id={this.id}\n          label={label}\n          setting={this.props.setting}\n          onChange={v => this.onChangeTrigger(v)}\n          defaultValue={defaultValue}\n        />\n      );\n    }\n\n    if (type === \"boolean\") {\n      return (\n        <GRAXEnvSettingSwitch\n          key={this.id}\n          id={this.id}\n          label={label}\n          setting={this.props.setting}\n          helpTextTooltip={this.getHelpTextTooltip()}\n          onChange={v => this.onChangeTrigger(v)}\n          defaultValue={defaultValue}\n        />\n      );\n    }\n\n    return (\n      <GRAXEnvSettingInput\n        key={this.id}\n        id={this.id}\n        type={type}\n        label={label}\n        setting={this.props.setting}\n        helpTextTooltip={this.getHelpTextTooltip()}\n        onChange={v => this.onChangeTrigger(v)}\n        defaultValue={defaultValue}\n      />\n    );\n  };\n\n  render() {\n    if (this.props.setting == null || this.props.id == null) return null;\n\n    return (\n      <Suspense fallback={<Spinner size=\"small\" variant=\"brand\" />}>\n        {this.getComponentToRender({\n          label: this.getLabel(),\n          type: this.getType(),\n          defaultValue: this.getDefaultValue()\n        })}\n      </Suspense>\n    );\n  }\n}\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  Spinner,\n  Button,\n  Input,\n  Checkbox,\n  Radio,\n  RadioButtonGroup\n} from \"@salesforce/design-system-react\";\n\nimport SLDSSection from \"./SLDSSection\";\nimport GRAXEnvSetting from \"./GRAXEnvSetting\";\nimport { $, baseUrl } from \"../lib/grax-data-lake\";\n\nimport {\n  METADATA_BACKUP_SETTINGS_BY_PROVIDER,\n  SYNC_ANALYTICS_AND_MARKETING_CLOUD_SETTINGS,\n  TIME_MACHINE_SETTINGS\n} from \"../settings/GRAXCloudConfigurationFormSettings\";\n\nclass BonsaiElasticProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"Bonsai Elastic Information\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n          <div className=\"slds-col\">\n            <Input\n              id=\"bonsai-url\"\n              label=\"Bonsai URL\"\n              defaultValue={this.props.onGetConfig(\"url\")}\n              onBlur={this.props.onChangeConfig(\"url\")}\n            />\n          </div>\n\n          <div className=\"slds-col\">\n            <Input id=\"bonsai-plan\" label=\"Bonsai Plan\" readOnly />\n          </div>\n        </div>\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nclass AWSElasticProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"AWS Elastic Information\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n          <div className=\"slds-col\">\n            <Input id=\"aws-elastic-endpoint-name\" label=\"Endpoint Name\" />\n\n            <div className=\"slds-form-element\">\n              <label className=\"slds-form-element__label\" htmlFor=\"aws-elastic-s3-region\">\n                S3 Region\n              </label>\n              <div className=\"slds-form-element__control\">\n                <div className=\"slds-select_container\">\n                  <select\n                    className=\"slds-select\"\n                    id=\"aws-elastic-s3-region\"\n                    value={this.props.onGetConfig(\"region\")}\n                    onChange={this.props.onChangeConfig(\"region\")}\n                  >\n                    <option value=\"\" disabled>\n                      -- Select --\n                    </option>\n                    <option value=\"us-east-1\">US East (Virginia) - us-east-1</option>\n                    <option value=\"us-east-2\">US East (Ohio) - us-east-2</option>\n                    <option value=\"us-west-1\">US West (N. California) - us-west-1</option>\n                    <option value=\"us-west-2\">US West (Oregon) - us-west-2</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"slds-col\">\n            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n              <div className=\"slds-col\">\n                <Input\n                  id=\"aws-elastic-accesskeyid\"\n                  label=\"Access Key ID\"\n                  defaultValue={this.props.onGetConfig(\"accessKey\")}\n                  onBlur={this.props.onChangeConfig(\"accessKey\")}\n                />\n              </div>\n\n              <div className=\"slds-col\">\n                <Input\n                  id=\"asw-elastic-s3-bucket-name\"\n                  label=\"S3 Bucket Name\"\n                  defaultValue={this.props.onGetConfig(\"bucket\")}\n                  onBlur={this.props.onChangeConfig(\"bucket\")}\n                />\n              </div>\n            </div>\n\n            <Input\n              id=\"asw-elastic-secret-accesskey\"\n              label=\"Secret Access Key\"\n              defaultValue={this.props.onGetConfig(\"secretAccessKey\")}\n              onBlur={this.props.onChangeConfig(\"secretAccessKey\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nclass ElasticCoProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"Elastic.co Information\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n          <div className=\"slds-col\">\n            <Input\n              id=\"elasticco-user\"\n              label=\"Elastic Username\"\n              defaultValue={this.props.onGetConfig(\"user\")}\n              onBlur={this.props.onChangeConfig(\"user\")}\n            />\n\n            <Input\n              id=\"elasticco-url\"\n              label=\"Elastic URL\"\n              defaultValue={this.props.onGetConfig(\"url\")}\n              onBlur={this.props.onChangeConfig(\"url\")}\n            />\n          </div>\n\n          <div className=\"slds-col\">\n            <Input\n              id=\"elasticco-password\"\n              label=\"Elastic Password\"\n              defaultValue={this.props.onGetConfig(\"password\")}\n              onBlur={this.props.onChangeConfig(\"password\")}\n            />\n\n            <Input\n              id=\"elasticco-port\"\n              type=\"number\"\n              label=\"Elastic Port\"\n              defaultValue={this.props.onGetConfig(\"port\")}\n              onBlur={this.props.onChangeConfig(\"port\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nclass AzureStorageProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"Azure Blob Storage\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n          <div className=\"slds-col\">\n            <Input\n              id=\"azure-storage-account-name\"\n              label=\"Azure Storage Account Name\"\n              defaultValue={this.props.onGetConfig(\"storageAccountName\")}\n              onBlur={this.props.onChangeConfig(\"storageAccountName\")}\n            />\n            <Input\n              id=\"azure-container-name\"\n              label=\"Azure Container Name\"\n              defaultValue={this.props.onGetConfig(\"containerName\")}\n              onBlur={this.props.onChangeConfig(\"containerName\")}\n            />\n          </div>\n\n          <div className=\"slds-col\">\n            <Input\n              id=\"azure-storage-account-access-key\"\n              label=\"Storage Account Access Key\"\n              defaultValue={this.props.onGetConfig(\"accountAccessKey\")}\n              onBlur={this.props.onChangeConfig(\"accountAccessKey\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nclass AWSStorageProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"S3 Bucket\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n          <div className=\"slds-col\">\n            <Input\n              id=\"storage-s3-bucket-name\"\n              label=\"S3 Bucket Name\"\n              defaultValue={this.props.onGetConfig(\"bucket\")}\n              onBlur={this.props.onChangeConfig(\"bucket\")}\n            />\n\n            <div className=\"slds-form-element\">\n              <label className=\"slds-form-element__label\" htmlFor=\"storage-s3-region\">\n                S3 Region\n              </label>\n              <div className=\"slds-form-element__control\">\n                <div className=\"slds-select_container\">\n                  <select\n                    className=\"slds-select\"\n                    id=\"storage-s3-region\"\n                    value={this.props.onGetConfig(\"region\")}\n                    onBlur={this.props.onChangeConfig(\"region\")}\n                  >\n                    <option value=\"\" disabled>\n                      -- Select --\n                    </option>\n                    <option value=\"us-east-1\">US East (Virginia) - us-east-1</option>\n                    <option value=\"us-east-2\">US East (Ohio) - us-east-2</option>\n                    <option value=\"us-west-1\">US West (N. California) - us-west-1</option>\n                    <option value=\"us-west-2\">US West (Oregon) - us-west-2</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <Input\n              id=\"storage-s3.assume-role-arn\"\n              label=\"Assume Role / ARN Name\"\n              defaultValue={this.props.onGetConfig(\"s3AssumeRoleArn\")}\n              onBlur={this.props.onChangeConfig(\"s3AssumeRoleArn\")}\n            />\n\n            <Checkbox\n              assistiveText={{\n                label: \"Assume Role Enabled\"\n              }}\n              id=\"checkbox-storage-s3-assume-role\"\n              labels={{\n                label: \"Assume Role Enabled\"\n              }}\n              defaultChecked={this.props.onGetConfig(\"s3AssumeRoleEnabled\")}\n              onChange={this.props.onChangeConfig(\"s3AssumeRoleEnabled\", \"checked\")}\n            />\n          </div>\n\n          <div className=\"slds-col\">\n            <Input\n              id=\"storage-s3-access-key\"\n              label=\"Access Key ID\"\n              defaultValue={this.props.onGetConfig(\"accessKey\")}\n              onBlur={this.props.onChangeConfig(\"accessKey\")}\n            />\n            <Input\n              id=\"storage-s3-secret-access-key\"\n              label=\"Secret Access Key\"\n              defaultValue={this.props.onGetConfig(\"secretAccessKey\")}\n              onBlur={this.props.onChangeConfig(\"secretAccessKey\")}\n            />\n            <Input\n              id=\"storage-s3-refresh-token\"\n              label=\"Refresh Token / Expiry Time (Hours)\"\n              defaultValue={this.props.onGetConfig(\"s3AssumeRoleRefreshCredsInHour\")}\n              onBlur={this.props.onChangeConfig(\"s3AssumeRoleRefreshCredsInHour\")}\n            />\n          </div>\n        </div>\n\n        {this.props.onGetConfig(\"provider\") === \"aws-ecs\" ? (\n          <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start slds-p-top_medium\">\n            <div className=\"slds-col\">\n              <Input\n                id=\"aws-ecs-endpoint\"\n                label=\"Endpoint\"\n                defaultValue={this.props.onGetConfig(\"dellEmcEcsEndpoint\")}\n                onBlur={this.props.onChangeConfig(\"dellEmcEcsEndpoint\")}\n              />\n\n              <Checkbox\n                assistiveText={{\n                  label: \"Enabled\"\n                }}\n                id=\"checkbox-aws-ecs-enabled\"\n                labels={{\n                  label: \"Enabled\"\n                }}\n                defaultChecked={this.props.onGetConfig(\"dellEmcEcsEnabled\")}\n                onChange={this.props.onChangeConfig(\"dellEmcEcsEnabled\", \"checked\")}\n              />\n            </div>\n          </div>\n        ) : null}\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nclass GoogleStorageProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"Google Cloud Provider\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n          <div className=\"slds-col\">\n            <Input\n              id=\"google-client-email\"\n              type=\"email\"\n              label=\"Google Client E-Mail\"\n              defaultValue={this.props.onGetConfig(\"googleClienteMail\")}\n              onBlur={this.props.onChangeConfig(\"googleClienteMail\")}\n            />\n\n            <Input\n              id=\"google-storage-project-id\"\n              type=\"number\"\n              label=\"Google Project Id\"\n              defaultValue={this.props.onGetConfig(\"googleProjectId\")}\n              onBlur={this.props.onChangeConfig(\"googleProjectId\")}\n            />\n\n            <Input\n              id=\"google-private-key-id\"\n              label=\"Google Private Key Id\"\n              defaultValue={this.props.onGetConfig(\"googlePrivateKeyId\")}\n              onBlur={this.props.onChangeConfig(\"googlePrivateKeyId\")}\n            />\n          </div>\n\n          <div className=\"slds-col\">\n            <Input\n              id=\"google-client-id\"\n              label=\"Google Client Id\"\n              defaultValue={this.props.onGetConfig(\"googleClientId\")}\n              onBlur={this.props.onChangeConfig(\"googleClientId\")}\n            />\n\n            <Input\n              id=\"google-bucket-name\"\n              label=\"Google Bucket Name\"\n              defaultValue={this.props.onGetConfig(\"googleBucketName\")}\n              onBlur={this.props.onChangeConfig(\"googleBucketName\")}\n            />\n\n            <Input\n              id=\"google-private-key\"\n              label=\"Google Private Key\"\n              defaultValue={this.props.onGetConfig(\"googlePrivateKey\")}\n              onBlur={this.props.onChangeConfig(\"googlePrivateKey\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nclass MinioStorageProvider extends React.Component {\n  render() {\n    return (\n      <SLDSSection title=\"Minio Object Storage\" className=\"slds-p-top_large\">\n        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n          <div className=\"slds-col\">\n            <Input\n              id=\"minio-endpoint\"\n              type=\"text\"\n              label=\"Minio Endpoint\"\n              defaultValue={this.props.onGetConfig(\"minioEndPoint\")}\n              onBlur={this.props.onChangeConfig(\"minioEndPoint\")}\n            />\n\n            <Input\n              id=\"minio-access-key\"\n              type=\"text\"\n              label=\"Minio Access Key\"\n              defaultValue={this.props.onGetConfig(\"minioAccessKey\")}\n              onBlur={this.props.onChangeConfig(\"minioAccessKey\")}\n            />\n\n            <Input\n              id=\"minio-bucket-name\"\n              label=\"Minio Bucket Name\"\n              defaultValue={this.props.onGetConfig(\"minioBucketName\")}\n              onBlur={this.props.onChangeConfig(\"minioBucketName\")}\n            />\n          </div>\n\n          <div className=\"slds-col\">\n            <Input\n              id=\"minio-port\"\n              label=\"Minio Port\"\n              type=\"number\"\n              defaultValue={this.props.onGetConfig(\"minioPort\")}\n              onBlur={this.props.onChangeConfig(\"minioPort\")}\n            />\n\n            <Input\n              id=\"minio-secret-key\"\n              label=\"Minio Secret Key\"\n              defaultValue={this.props.onGetConfig(\"minioSecretKey\")}\n              onBlur={this.props.onChangeConfig(\"miniminioSecretKeyoPort\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"slds-p-top_medium\">\n          <Button label=\"Test\" variant=\"brand\" onClick={this.props.onTest} />\n        </div>\n      </SLDSSection>\n    );\n  }\n}\n\nexport default class GRAXCloudConfigurationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      isTesting: false,\n      error: null,\n      configuration: {},\n      metadataBackupIndex: 0\n    };\n\n    this.triggerConfigurationChange = this.triggerConfigurationChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      title: this.props.title,\n      configuration: _.cloneDeep(this.props.configuration),\n      isLoading: false\n    });\n  }\n\n  triggerConfigurationChange() {\n    if (this.props.onChange) {\n      this.props.onChange(this.state.title, this.state.configuration);\n    }\n  }\n\n  testElasticHandler = () => {\n    const configuration = this.state.configuration;\n\n    /*if (\n      configuration == null ||\n      configuration.elastic == null ||\n      configuration.elastic.length === 0\n    ) {\n      alert(\"Incomplete data\");\n    }*/\n\n    this.setState({\n      isTesting: true\n    });\n\n    $.ajax({\n      type: \"POST\",\n      url: baseUrl + \"/graxproxy/api/elastichealthcheck\",\n      contentType: \"application/json; charset=utf-8\",\n      data: JSON.stringify({\n        elasticEnvConfig: configuration.elastic[0] || {}\n      }),\n      skipFail: true,\n      success: function(res) {\n        console.log(res);\n\n        this.setState({\n          isTesting: false\n        });\n\n        alert(res.data.ElasticSearch);\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(xhr, status, err);\n\n        this.setState({\n          isTesting: false\n        });\n\n        alert(\"Error!\");\n      }.bind(this)\n    });\n  };\n\n  testStorageHandler = () => {\n    const configuration = this.state.configuration;\n\n    if (\n      configuration == null ||\n      configuration.storage == null ||\n      configuration.storage.length === 0\n    ) {\n      alert(\"Incomplete data\");\n    }\n\n    this.setState({\n      isTesting: true\n    });\n\n    $.ajax({\n      type: \"POST\",\n      url: baseUrl + \"/graxproxy/api/storageproviderhealthcheck\",\n      contentType: \"application/json; charset=utf-8\",\n      data: JSON.stringify({\n        storageEnvConfig: configuration.storage[0] || {}\n      }),\n      skipFail: true,\n      success: function(res) {\n        console.log(res);\n\n        this.setState({\n          isTesting: false\n        });\n\n        alert(res.data.aws); // TODO: check Azure storage\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(xhr, status, err);\n\n        this.setState({\n          isTesting: false\n        });\n\n        alert(\"Error! status: \" + status);\n      }.bind(this)\n    });\n  };\n\n  onNameChangeHandler = e => {\n    e.persist();\n\n    this.setState(\n      {\n        title: e.target.value\n      },\n      () => {\n        this.triggerConfigurationChange();\n      }\n    );\n  };\n\n  onElasticProviderChangeHander = e => {\n    e.persist();\n\n    const configuration = this.state.configuration;\n\n    _.set(configuration, \"elastic[0]\", {\n      provider: e.target.value\n    });\n\n    this.setState({\n      configuration\n    });\n\n    this.triggerConfigurationChange();\n  };\n\n  onStorageProviderChangeHandler = e => {\n    e.persist();\n\n    const configuration = this.state.configuration;\n\n    const currentValue = _.get(configuration, \"storage[0].provider\", \"\");\n    const newValue = e.target.value;\n\n    if (currentValue === \"aws\" && newValue === \"aws-ecs\") {\n      _.set(configuration, \"storage[0].provider\", newValue);\n    } else {\n      _.set(configuration, \"storage[0]\", {\n        provider: newValue\n      });\n    }\n\n    this.setState({\n      configuration\n    });\n\n    this.triggerConfigurationChange();\n  };\n\n  onElasticUrlChangeHandler = e => {\n    e.persist();\n\n    const configuration = this.state.configuration;\n\n    _.set(configuration, \"elastic[0].url\", e.target.value);\n\n    this.setState({\n      configuration\n    });\n\n    this.triggerConfigurationChange();\n  };\n\n  onGetConfig = type => {\n    return (key, defaultValue = null) => {\n      return _.get(this.state.configuration, [type, \"0\", key], defaultValue);\n    };\n  };\n\n  onChangeConfig = type => {\n    return (f, targetKey = \"value\") => {\n      return e => {\n        if (e != null && e.hasOwnProperty(\"originalEvent\")) e.persist();\n\n        const configuration = this.state.configuration;\n\n        _.set(configuration, [type, \"0\", f], e.target[targetKey]);\n\n        this.setState({\n          configuration\n        });\n\n        this.triggerConfigurationChange();\n      };\n    };\n  };\n\n  onSourceControlChangeHandler = sourceControlEnabled => {\n    this.onChangeConfig(\"metadataBackup\")(\"sourceControlEnabled\", \"checked\")({\n      target: { checked: sourceControlEnabled }\n    });\n\n    const sourceControlProvider = this.onGetConfig(\"metadataBackup\")(\"sourceControlProvider\");\n\n    if (sourceControlEnabled && !sourceControlProvider) {\n      this.onChangeConfig(\"metadataBackup\")(\"sourceControlProvider\")({\n        target: { value: \"github\" }\n      });\n    }\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return <Spinner size=\"large\" variant=\"brand\" />;\n    }\n\n    return (\n      <React.Fragment>\n        {this.state.isTesting ? <Spinner size=\"large\" variant=\"brand\" /> : null}\n\n        <div className=\"slds-p-around_medium\">\n          <SLDSSection title=\"General Information\">\n            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n              <div className=\"slds-col slds-size_1-of-2\">\n                <Input\n                  id=\"configuration-title\"\n                  label=\"Configuration Title\"\n                  defaultValue={this.state.title}\n                  onBlur={this.onNameChangeHandler}\n                />\n              </div>\n            </div>\n\n            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center slds-p-top_medium\">\n              <div className=\"slds-col\">\n                <div className=\"slds-form-element\">\n                  <label className=\"slds-form-element__label\" htmlFor=\"elastic-search-provider\">\n                    Elastic Search Provider\n                  </label>\n                  <div className=\"slds-form-element__control\">\n                    <div className=\"slds-select_container\">\n                      <select\n                        className=\"slds-select\"\n                        id=\"elastic-search-provider\"\n                        value={this.onGetConfig(\"elastic\")(\"provider\")}\n                        onChange={e => this.onElasticProviderChangeHander(e)}\n                      >\n                        <option value=\"\" disabled>\n                          -- Select --\n                        </option>\n                        <option value=\"bonsai\">Bonsai Elastic Search</option>\n                        <option value=\"aws\">AWS Elastic Search</option>\n                        <option value=\"elastic.co\">Elastic.co</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"slds-col\">\n                <div className=\"slds-form-element\">\n                  <label className=\"slds-form-element__label\" htmlFor=\"cloud-storage-provider\">\n                    Cloud Storage Provider\n                  </label>\n                  <div className=\"slds-form-element__control\">\n                    <div className=\"slds-select_container\">\n                      <select\n                        className=\"slds-select\"\n                        id=\"cloud-storage-provider\"\n                        value={this.onGetConfig(\"storage\")(\"provider\")}\n                        onChange={this.onStorageProviderChangeHandler}\n                      >\n                        <option value=\"\" disabled>\n                          -- Select --\n                        </option>\n                        <option value=\"aws\">AWS S3 Storage</option>\n                        <option value=\"aws-ecs\">AWS ECS</option>\n                        <option value=\"azure\">Azure BLOB Storage</option>\n                        <option value=\"google\">Google Cloud Provider</option>\n                        <option value=\"minio\">MinIO</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </SLDSSection>\n\n          {_.get(this.state.configuration, \"elastic[0].provider\") === \"bonsai\" ? (\n            <BonsaiElasticProvider\n              onChangeConfig={this.onChangeConfig(\"elastic\")}\n              onGetConfig={this.onGetConfig(\"elastic\")}\n              onTest={this.testElasticHandler}\n            />\n          ) : null}\n\n          {_.get(this.state.configuration, \"elastic[0].provider\") === \"aws\" ? (\n            <AWSElasticProvider\n              onChangeConfig={this.onChangeConfig(\"elastic\")}\n              onGetConfig={this.onGetConfig(\"elastic\")}\n              onTest={this.testElasticHandler}\n            />\n          ) : null}\n\n          {_.get(this.state.configuration, \"elastic[0].provider\") === \"elastic.co\" ? (\n            <ElasticCoProvider\n              onChangeConfig={this.onChangeConfig(\"elastic\")}\n              onGetConfig={this.onGetConfig(\"elastic\")}\n              onTest={this.testElasticHandler}\n            />\n          ) : null}\n\n          {_.get(this.state.configuration, \"storage[0].provider\") === \"azure\" ? (\n            <AzureStorageProvider\n              onChangeConfig={this.onChangeConfig(\"storage\")}\n              onGetConfig={this.onGetConfig(\"storage\")}\n              onTest={this.testStorageHandler}\n            />\n          ) : null}\n\n          {_.get(this.state.configuration, \"storage[0].provider\", \"\").startsWith(\"aws\") ? (\n            <AWSStorageProvider\n              onChangeConfig={this.onChangeConfig(\"storage\")}\n              onGetConfig={this.onGetConfig(\"storage\")}\n              onTest={this.testStorageHandler}\n            />\n          ) : null}\n\n          {_.get(this.state.configuration, \"storage[0].provider\") === \"google\" ? (\n            <GoogleStorageProvider\n              onChangeConfig={this.onChangeConfig(\"storage\")}\n              onGetConfig={this.onGetConfig(\"storage\")}\n              onTest={this.testStorageHandler}\n            />\n          ) : null}\n\n          {_.get(this.state.configuration, \"storage[0].provider\") === \"minio\" ? (\n            <MinioStorageProvider\n              onChangeConfig={this.onChangeConfig(\"storage\")}\n              onGetConfig={this.onGetConfig(\"storage\")}\n              onTest={this.testStorageHandler}\n            />\n          ) : null}\n\n          {/*<SLDSSection title=\"Marketing Cloud\" className=\"slds-p-top_large\">\n                        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n                            <div className=\"slds-col\">\n                                <Input id=\"marketing-cloud-sftp-username\" label=\"SFTP Username\" />\n                                <Input id=\"marketing-cloud-sftp-password\" label=\"SFTP Password\" />\n                            </div>\n\n                            <div className=\"slds-col\">\n                                <Input id=\"marketing-cloud-sftp-host\" label=\"SFTP Host\" />\n                            </div>\n                        </div>\n\n                        <div className=\"slds-p-top_medium\">\n                            <Button label=\"Test\" variant=\"brand\" />\n                        </div>\n                    </SLDSSection>*/}\n\n          <SLDSSection title=\"Metadata Backup\" className=\"slds-p-top_large\">\n            <GRAXEnvSetting\n              id=\"SALESFORCE_GIT_INTEGRATION\"\n              setting={{\n                name: \"SALESFORCE_GIT_INTEGRATION\",\n                type: \"boolean\",\n                id: \"sourceControlEnabled\",\n                helpText: 'Set to \"true\" to backup SF metadata'\n              }}\n              defaultValue={this.onGetConfig(\"metadataBackup\")(\"sourceControlEnabled\")}\n              onChange={this.onSourceControlChangeHandler}\n            />\n\n            {this.onGetConfig(\"metadataBackup\")(\"sourceControlEnabled\") ? (\n              <React.Fragment>\n                <RadioButtonGroup\n                  labels={{\n                    label: \"Provider\"\n                  }}\n                  onChange={this.onChangeConfig(\"metadataBackup\")(\"sourceControlProvider\")}\n                  className=\"slds-m-top_small\"\n                >\n                  <Radio\n                    id=\"metadata-backup-sourceControlProvider-github\"\n                    label=\"Github\"\n                    value=\"github\"\n                    checked={\n                      this.onGetConfig(\"metadataBackup\")(\"sourceControlProvider\") === \"github\"\n                    }\n                    variant=\"button-group\"\n                  />\n\n                  <Radio\n                    id=\"metadata-backup-sourceControlProvider-gitlab\"\n                    label=\"GitLab\"\n                    value=\"gitlab\"\n                    checked={\n                      this.onGetConfig(\"metadataBackup\")(\"sourceControlProvider\") === \"gitlab\"\n                    }\n                    variant=\"button-group\"\n                  />\n                </RadioButtonGroup>\n\n                {_.map(\n                  METADATA_BACKUP_SETTINGS_BY_PROVIDER[\n                    this.onGetConfig(\"metadataBackup\")(\"sourceControlProvider\")\n                  ],\n                  (setting, i) => {\n                    const key = \"grax-env-setting-\" + setting.id;\n\n                    return (\n                      <GRAXEnvSetting\n                        id={key}\n                        key={key}\n                        setting={setting}\n                        defaultValue={this.onGetConfig(\"metadataBackup\")(setting.id)}\n                        onChange={value =>\n                          this.onChangeConfig(\"metadataBackup\")(setting.id)({ target: { value } })\n                        }\n                      />\n                    );\n                  }\n                )}\n              </React.Fragment>\n            ) : null}\n          </SLDSSection>\n\n          <SLDSSection title=\"Sync Analytics & Marketing Cloud\" className=\"slds-p-top_large\">\n            {_.map(SYNC_ANALYTICS_AND_MARKETING_CLOUD_SETTINGS, (setting, i) => {\n              const key = \"grax-env-setting-\" + (setting.id || setting.name);\n\n              return (\n                <GRAXEnvSetting\n                  id={key}\n                  key={key}\n                  setting={setting}\n                  defaultValue={this.onGetConfig(\"syncAnalytics\")(setting.id)}\n                  onChange={value =>\n                    this.onChangeConfig(\"syncAnalytics\")(setting.id)({ target: { value } })\n                  }\n                />\n              );\n            })}\n          </SLDSSection>\n\n          <SLDSSection title=\"Time Machine\" className=\"slds-p-top_large\">\n            {_.map(TIME_MACHINE_SETTINGS, (setting, i) => {\n              const key = \"grax-env-setting-\" + (setting.id || setting.name);\n\n              return (\n                <GRAXEnvSetting\n                  id={key}\n                  key={key}\n                  setting={setting}\n                  defaultValue={this.onGetConfig(\"timemachine\")(setting.id)}\n                  onChange={value =>\n                    this.onChangeConfig(\"timemachine\")(setting.id)({ target: { value } })\n                  }\n                />\n              );\n            })}\n          </SLDSSection>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","module.exports = {\n  METADATA_BACKUP_SETTINGS_BY_PROVIDER: {\n    github: [\n      {\n        name: \"SALESFORCE_GIT_REPOSITORY_NAME\",\n        type: \"text\",\n        id: \"gitRepositoryName\",\n        helpText: \"Enter the name of your Github repository name\"\n      },\n      {\n        name: \"GIT_REPOSITORY_AUTHORIZATION_TOKEN\",\n        type: \"text\",\n        id: \"gitRepoAuthorizationToken\",\n        helpText: \"Enter the authorization token from your Github repository\"\n      },\n      {\n        name: \"GIT_USER_ID\",\n        type: \"text\",\n        id: \"gitUserId\",\n        helpText: \"Enter the your Github repository User ID\"\n      }\n    ],\n    gitlab: [\n      {\n        name: \"SALESFORCE_GIT_REPOSITORY_NAME\",\n        type: \"text\",\n        id: \"gitRepositoryName\"\n      },\n      {\n        name: \"GIT_REPOSITORY_AUTHORIZATION_TOKEN\",\n        type: \"text\",\n        id: \"gitRepoAuthorizationToken\",\n        helpText: \"Enter the authorization token from your GitLab repository\"\n      }\n    ]\n  },\n  SYNC_ANALYTICS_AND_MARKETING_CLOUD_SETTINGS: [\n    {\n      id: \"marketingCloudHost\",\n      name: \"MC_HOST\",\n      type: \"text\"\n    },\n    {\n      id: \"marketingCloudUser\",\n      name: \"MC_USERNAME\",\n      type: \"text\"\n    },\n    {\n      id: \"marketingCloudPassword\",\n      name: \"MC_PASSWORD\", // NEED ENCRYPTATION\n      type: \"password\"\n    },\n    {\n      id: \"marketingCloudPort\",\n      name: \"MC_PORT\",\n      type: \"text\"\n    },\n    {\n      id: \"syncBatchSize\",\n      name: \"ANALYTICS_BATCH_SIZE\",\n      type: \"number\"\n    },\n    {\n      id: \"syncQueryFile\",\n      name: \"ANALYTICS_QUERY_FILE\",\n      type: \"text\"\n    }\n  ],\n  TIME_MACHINE_SETTINGS: [\n    {\n      id: \"queryFile\",\n      name: \"TIMEMACHINE_RESTORE_QUERY_FILE\",\n      type: \"text\"\n    }\n  ]\n};\n","import React from 'react';\nimport { Icon } from '@salesforce/design-system-react';\n\nexport default class SLDSSection extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: props.isOpen === true ? true : false || props.isCollapsible === undefined\n        };\n\n        this.handleToggle = this.handleToggle.bind(this);\n    }\n\n    handleToggle(e) {\n        var isOpen = !this.state.isOpen;\n\n        this.setState({\n            isOpen: isOpen\n        });\n\n        if(this.props.onToggle) {\n            this.props.onToggle(isOpen);\n        }\n\n        e.preventDefault();\n    }\n\n    render() {\n        var title = <span className={'slds-truncate' + (!this.props.isCollapsible ? ' slds-p-horizontal_small' : '')} title={this.props.title}>{this.props.title}</span>;\n\n        return (\n            <div id={this.props.id || this.props.key} className={['slds-section', this.state.isOpen && 'slds-is-open', this.props.className].join(' ')}>\n                <h3 className=\"slds-section__title slds-theme_shade\">\n                    {this.props.isCollapsible ? <button className=\"slds-button slds-section__title-action\" onClick={this.handleToggle}>\n                        <Icon\n                            assistiveText={{ label: this.props.title }}\n                            category=\"utility\"\n                            name=\"switch\"\n                            size=\"x-small\"\n                            className=\"slds-section__title-action-icon slds-button__icon slds-button__icon_left\"\n                        />\n                        {title}\n                    </button> : title}\n                </h3>\n                {this.state.isOpen && <div className=\"slds-section__content\">\n                    {this.props.children}\n                </div>}\n            </div>\n        );\n    }\n}"],"sourceRoot":""}