{"version":3,"sources":["lib/grax-data-lake.js","components/GRAXRestoreTabs.jsx"],"names":["isDev","baseUrl","token","window","__grax__","_csrf","orgid","pageParams","userid","GetParams","params","undefined","action","$","param","ajaxSetup","beforeSend","xhr","settings","method","setRequestHeader","authorization","type","test","this","crossDomain","withCredentials","skipFail","fail","jqXHR","textStatus","errorThrown","console","error","status","showError","statusText","responseText","GRAXRestore","lazy","GRAXRestoreMapping","GRAXRestoreTabs","props","state","isLoading","customMapping","ajax","url","data","success","parseJSON","e","setState","bind","err","toString","size","variant","appName","fallback","onMappingChange","id","label","React","Component"],"mappings":"yGAAA,sQAmBO,IAAMA,GAAQ,EAIRC,EAAUD,EAFJ,4CAEyB,GAE/BE,EAAQC,OAAOC,SAASF,MACxBG,EAAQF,OAAOC,SAASC,MACxBC,EAAQH,OAAOC,SAASE,MAIxBC,GAHSJ,OAAOC,SAASI,OAGZL,OAAOC,SAASG,YAAc,IAEjD,SAASE,EAAUC,GAMxB,OALe,OAAXA,QAA8BC,IAAXD,IAAsBA,EAAS,IAEhC,OAAlBA,EAAOE,aAAqCD,IAAlBD,EAAOE,QAA0C,KAAlBF,EAAOE,SAClEF,EAAOE,OAAS,QAEX,IAAMC,IAAEC,MAAMJ,GAOvBG,IAAEE,UAAU,CACVC,WAAY,SAASC,EAAKC,GAL5B,IAAwBC,EAMpBF,EAAIG,iBAAiB,YAAad,GAEF,MAA5BC,EAAWc,cACbJ,EAAIG,iBAAiB,gBAAiBb,EAAWc,eAEjDJ,EAAIG,iBAAiB,gBAAiB,UAAYlB,GAXhCiB,EAcAD,EAASI,KAZxB,6BAA6BC,KAAKJ,IAYAK,KAAKC,aAC1CR,EAAIG,iBAAiB,cAAef,GAGtCY,EAAIS,iBAAkB,GAEI,IAAtBR,EAASS,UACXV,EAAIW,MAAK,SAACC,EAAOC,EAAYC,GAC3BC,QAAQC,MAAMJ,GAEO,MAAjBA,EAAMK,QAAkC,cAAhBH,GAC1B5B,OAAOgC,UAAUN,EAAMO,WAAa,KAAOP,EAAMQ,qB,kMC3DrDC,EAAcC,gBAAK,kBAAM,uDACzBC,EAAqBD,gBAAK,kBAAM,wDAEjBE,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXX,MAAO,KACPY,cAAe,MANJ,E,iFAWfhC,IAAEiC,KAAK,CACHxB,KAAM,MAENyB,IAAK9C,IAAU,4CAA8CQ,YAAU,CAACG,OAAO,SAC/EoC,KAAM,GACNC,QAAS,SAASD,GACd,IAAIH,EAAgBG,EAEpB,IACIH,EAAgBhC,IAAEqC,UAAUF,GAC9B,MAAMG,IAER3B,KAAK4B,SAAS,CACVP,cAAeA,EACfD,WAAW,KAEjBS,KAAK7B,MACPS,MAAO,SAAShB,EAAKiB,EAAQoB,GACzBtB,QAAQC,MAAMhB,EAAKiB,EAAQoB,GAE3B9B,KAAK4B,SAAS,CACVnB,MAAsB,MAAfhB,EAAIiB,OAAiB,KAAOoB,EAAIC,WACvCV,cAA8B,MAAf5B,EAAIiB,OAAiB,GAAK,KACzCU,WAAW,KAEjBS,KAAK7B,U,+BAIL,IAAD,OACL,OAAGA,KAAKmB,MAAMC,UAEN,kBAAC,IAAD,CAASY,KAAK,QAAQC,QAAQ,UAIZ,YAAvBjC,KAAKkB,MAAMgB,QAEN,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,CAASH,KAAK,QAAQC,QAAQ,WAC9C,kBAACjB,EAAD,CAAoBK,cAAerB,KAAKmB,MAAME,cAAee,gBAAiB,SAACf,GAC3E,EAAKO,SAAS,CACVP,cAAeA,QAQ/B,kBAAC,IAAD,CAAMY,QAASjC,KAAKkB,MAAMe,QAASI,GAAG,qBACV,YAAvBrC,KAAKkB,MAAMgB,QACR,kBAAC,IAAD,CAAWI,MAAM,WACb,kBAAC,WAAD,CAAUH,SAAU,kBAAC,IAAD,CAASH,KAAK,QAAQC,QAAQ,WAC9C,kBAACnB,EAAD,CAAaO,cAAerB,KAAKmB,MAAME,kBAG/C,U,GApEyBkB,IAAMC","file":"static/js/18.99ef045a.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\n/* --------------------------------------------------------------------------\n * This file is subject to the terms and conditions defined in\n * file https://github.com/HardingPoint/GRAXForSFDC/blob/master/LICENSE,\n * which is part of this source code package.\n * --------------------------------------------------------------------------\n *          Copyright (c) 2017-2018 Harding Point\n *                  All rights reserved\n * --------------------------------------------------------------------------\n * Support:\tSupport@Grax.io\n * Website:\thttps://grax.io\n * Github:\thttps://github.com/HardingPoint/grax-application\n * License:\thttps://github.com/HardingPoint/grax-application/blob/master/LICENSE\n * --------------------------------------------------------------------------*/\n\nimport $ from \"jquery\";\n\n// export const isDev = window.location.port !== '80';\n\nexport const isDev = false;\n\nconst devBaseUrl = \"https://grax-datalake-demo2.herokuapp.com\";\n\nexport const baseUrl = isDev ? devBaseUrl : \"\";\n\nexport const token = window.__grax__.token;\nexport const _csrf = window.__grax__._csrf;\nexport const orgid = window.__grax__.orgid;\nexport const userid = window.__grax__.userid;\nexport const sessionid = null;\nexport const endpoint = null;\nexport const pageParams = window.__grax__.pageParams || {};\n\nexport function GetParams(params) {\n  if (params === null || params === undefined) params = {};\n\n  if (params.action === null || params.action === undefined || params.action === \"\")\n    params.action = \"load\";\n\n  return \"?\" + $.param(params);\n}\n\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);\n}\n$.ajaxSetup({\n  beforeSend: function(xhr, settings) {\n    xhr.setRequestHeader(\"sfdcorgid\", orgid);\n\n    if (pageParams.authorization != null) {\n      xhr.setRequestHeader(\"Authorization\", pageParams.authorization);\n    } else {\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n    }\n\n    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n      xhr.setRequestHeader(\"X-CSRFToken\", _csrf);\n    }\n\n    xhr.withCredentials = true;\n\n    if (settings.skipFail !== true) {\n      xhr.fail((jqXHR, textStatus, errorThrown) => {\n        console.error(jqXHR);\n\n        if (jqXHR.status !== 404 && errorThrown !== \"Not Found\") {\n          window.showError(jqXHR.statusText + \": \" + jqXHR.responseText);\n        }\n      });\n    }\n  }\n});\n\nexport { $ };\n","///* global $ */\nimport React, { Suspense, lazy } from 'react';\nimport { Tabs, TabsPanel, Spinner } from '@salesforce/design-system-react';\n\nimport {baseUrl, GetParams} from '../lib/grax-data-lake';\n\nimport $ from 'jquery';\n\nconst GRAXRestore = lazy(() => import('./GRAXRestore'));\nconst GRAXRestoreMapping = lazy(() => import('./GRAXRestoreMapping'));\n\nexport default class GRAXRestoreTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            error: null,\n            customMapping: null\n        };\n    }\n\n    componentDidMount() {\n        $.ajax({\n            type: 'GET',\n            //dataType: 'jsonp',\n            url: baseUrl + '/grax-app/grax-data-lake/getCustomMapping' + GetParams({action:'load'}),\n            data: {},\n            success: function(data) {\n                var customMapping = data;\n\n                try {\n                    customMapping = $.parseJSON(data);\n                } catch(e){}\n\n                this.setState({\n                    customMapping: customMapping,\n                    isLoading: false\n                });\n            }.bind(this),\n            error: function(xhr, status, err) {\n                console.error(xhr, status, err);\n\n                this.setState({\n                    error: xhr.status === 404 ? null : err.toString(),\n                    customMapping: xhr.status === 404 ? {} : null,\n                    isLoading: false\n                });\n            }.bind(this)\n        });\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return (\n                <Spinner size=\"large\" variant=\"brand\" />\n            );\n        }\n\n        if(this.props.appName === 'mapping') {\n            return (\n                <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                    <GRAXRestoreMapping customMapping={this.state.customMapping} onMappingChange={(customMapping) => {\n                        this.setState({\n                            customMapping: customMapping\n                        });\n                    }} />\n                </Suspense>\n            );\n        }\n\n        return (\n            <Tabs variant={this.props.variant} id=\"grax-restore-tabs\">\n                {this.props.appName === 'restore' ? (\n                    <TabsPanel label=\"Restore\">\n                        <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                            <GRAXRestore customMapping={this.state.customMapping} />\n                        </Suspense>\n                    </TabsPanel>\n                ) : null}\n            </Tabs>\n        );\n    }\n}"],"sourceRoot":""}