{"version":3,"sources":["components/GRAXCloudConfigurationForm.jsx","../node_modules/@salesforce/design-system-react/module/components/radio-group/index.js","../node_modules/@salesforce/design-system-react/module/components/radio-button-group/index.js","components/SLDSSection.jsx"],"names":["MISC_ADMIN_SETTINGS","name","type","helpText","METADATA_BACKUP_SETTINGS_BY_PROVIDER","github","id","gitlab","GRAXEnvSetting","_React$PureComponent","Object","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","apply","arguments","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","_","startCase","camelCase","props","setting","extraProps","label","getLabelFromName","helpTextTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_7__","align","content","defaultValue","onChange","onBlur","pickBy","defaultChecked","Boolean","identity","className","htmlFor","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_8__","assign","assistiveText","variant","fieldLevelHelpTooltip","e","target","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_9__","React","PureComponent","GRAXCloudConfigurationForm","_this","call","state","isLoading","isTesting","error","configuration","metadataBackupIndex","triggerConfigurationChange","bind","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","setState","title","cloneDeep","elastic","length","alert","$","ajax","url","baseUrl","contentType","data","JSON","stringify","envConfiguration","success","res","console","log","ElasticSearch","xhr","status","err","storage","aws","_this2","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_10__","size","Fragment","_SLDSSection__WEBPACK_IMPORTED_MODULE_14__","get","set","disabled","readOnly","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_11__","onClick","testElasticHandler","testStorageHandler","labels","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_12__","_salesforce_design_system_react__WEBPACK_IMPORTED_MODULE_13__","checked","map","i","Component","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","propTypes","prop_types_default","shape","string","children","node","isRequired","oneOfType","array","object","func","bool","required","errorId","oneOf","defaultProps","radio_group_RadioGroup","_React$Component","RadioGroup","instance","Constructor","TypeError","_classCallCheck","protoProps","staticProps","subClass","superClass","create","_inherits","react_default","generatedName","shortid_default","generate","generatedErrorId","hasError","lodash_assign_default","Children","child","cloneElement","getName","aria-describedby","getErrorId","classnames_default","slds-has-error","style","displayName","constants","radio_group","_extends","source","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","radio_button_group_propTypes","radio_button_group_RadioButtonGroup","rest","__webpack_exports__","SLDSSection","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","isOpen","undefined","isCollapsible","handleToggle","_Users_brianna_LA_consulting_harding_point_grax_applicationservers_web_application_graxreact_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onToggle","preventDefault","join","category"],"mappings":"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","file":"static/js/4.850eff6d.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner, Button, Input, Checkbox, Tooltip, Radio, RadioButtonGroup } from '@salesforce/design-system-react';\n\nimport SLDSSection from './SLDSSection';\n\nimport {$, baseUrl} from '../lib/grax-data-lake';\n\nimport _ from 'lodash';\n\nconst MISC_ADMIN_SETTINGS = [\n    {\n        name: 'ASYNCH_TIMER',\n        // label: 'Aaynch Timer',\n        type: 'number',\n        // defaultValue: 5,\n        helpText: 'Frequency in which the Asyn job, which processes Attachments and Content Documents, will run (in minutes).'\n    },\n    {\n        name: 'DATABASE_URL',\n        type: 'text'\n    },\n    {\n        name: 'DEBUGGING',\n        type: 'text'\n    },\n    {\n        name: 'ENGAGEMENTGRAPH_APITOKEN',\n        type: 'text'\n    },\n    {\n        name: 'ENGAGEMENTGRAPH_APIURL',\n        type: 'text'\n    },\n    {\n        name: 'ENGAGEMENTGRAPH_APIVERSION',\n        type: 'text'\n    },\n    {\n        name: 'ENGAGEMENTGRAPH_GATEWAYTOKEN',\n        type: 'text'\n    },\n    {\n        name: 'ENGAGEMENTGRAPH_LICENSETOKEN',\n        type: 'text'\n    },\n    {\n        name: 'ENGAGEMENTGRAPH_URL',\n        type: 'text'\n    },\n    {\n        name: 'GRAX_AUDITTRAIL_OFF',\n        type: 'boolean'\n    },\n    {\n        name: 'GRAX_S3_OFF',\n        type: 'boolean'\n    }\n];\n\nconst METADATA_BACKUP_SETTINGS_BY_PROVIDER = {\n    github: [\n        {\n            name: 'SALESFORCE_GIT_REPOSITORY_NAME',\n            type: 'text',\n            id: 'gitRepositoryName',\n            helpText: 'Enter the name of your Github repository name'\n        },\n        {\n            name: 'GIT_REPOSITORY_AUTHORIZATION_TOKEN',\n            type: 'text',\n            id: 'gitRepoAuthorizationToken',\n            helpText: 'Enter the authorization token from your Github repository'\n        },\n        {\n            name: 'GIT_USER_ID',\n            type: 'text',\n            id: 'gitUserId',\n            helpText: 'Enter the your Github repository User ID'\n        }\n    ],\n    gitlab: [\n        {\n            name: 'SALESFORCE_GIT_REPOSITORY_NAME',\n            type: 'text',\n            id: 'gitRepositoryName'\n        }\n    ]\n};\n\nexport class GRAXEnvSetting extends React.PureComponent {\n    getLabelFromName(name) {\n        return _.startCase(_.camelCase(name));\n    }\n\n    render() {\n        if(this.props.setting == null || this.props.id == null) return;\n\n        var key = this.props.id;\n        var label = this.props.setting.label || this.getLabelFromName(this.props.setting.name);\n        var type = this.props.setting.type || 'text';\n        var helpTextTooltip = this.props.setting.helpText != null ? (\n            <Tooltip\n                key={key + '-helptext'}\n                id={key + '-helptext'}\n                align=\"top left\"\n                content={this.props.setting.helpText}\n            />\n        ) : null;\n\n        var defaultValue = this.props.setting.defaultValue || this.props.defaultValue;\n\n        var extraProps;\n\n        var onChange = this.props.onChange || this.props.onBlur;\n\n        if(type === 'boolean') {\n            extraProps = _.pickBy({\n                defaultChecked: Boolean(defaultValue),\n                onChange: onChange ? (value) => {\n                    onChange(value);\n                } : null\n            }, _.identity);\n\n            return (\n                <div className=\"slds-form-element\">\n                    <label className=\"slds-form-element__label\" htmlFor={key}>{label}</label>\n                    {helpTextTooltip}\n                    <div className=\"slds-form-element__control\">\n                        <Checkbox\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\t/*labels={{\n\t\t\t\t\t\t\t\tlabel\n                            }}*/\n                            variant=\"toggle\"\n\t\t\t\t\t\t\t{...extraProps}\n\t\t\t\t\t\t/>\n                    </div>\n                </div>\n            );\n        }\n\n        extraProps = _.pickBy({\n            defaultValue: defaultValue,\n            fieldLevelHelpTooltip: helpTextTooltip,\n            onBlur: onChange ? (e) => {\n                onChange(e.target.value);\n            } : null\n        }, _.identity);\n\n        return (\n            <Input\n                key={key}\n                id={key}\n                label={label}\n                type={type}\n                {...extraProps}\n            />\n        );\n    }\n}\n\n\nexport default class GRAXCloudConfigurationForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            isTesting: false,\n            error: null,\n            configuration: {},\n            metadataBackupIndex: 0\n        };\n\n        this.triggerConfigurationChange = this.triggerConfigurationChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            title: this.props.title,\n            configuration: _.cloneDeep(this.props.configuration),\n            isLoading: false\n        });\n    }\n\n    triggerConfigurationChange() {\n        if(this.props.onChange) {\n            this.props.onChange(this.state.title, this.state.configuration);\n        }\n    }\n\n    testElasticHandler() {\n        var configuration = this.state.configuration;\n\n        if(configuration == null || configuration.elastic == null || configuration.elastic.length === 0) {\n            alert('Incomplete data');\n        }\n\n        this.setState({\n            isTesting: true\n        });\n\n        $.ajax({\n            type: 'POST',\n            url: baseUrl + '/graxproxy/api/elastichealthcheck',\n            contentType: \"application/json; charset=utf-8\",\n            data: JSON.stringify({\n                envConfiguration: {\n                    elastic: configuration.elastic[0] || {}\n                }\n            }),\n            success: function(res) {\n                console.log(res);\n\n                this.setState({\n                    isTesting: false\n                });\n\n                alert(res.data.ElasticSearch);\n            }.bind(this),\n            error: function(xhr, status, err) {\n                console.error(xhr, status, err);\n\n                this.setState({\n                    isTesting: false\n                });\n\n                alert('Error!');\n            }.bind(this)\n        });\n    }\n\n    testStorageHandler() {\n        var configuration = this.state.configuration;\n\n        if(configuration == null || configuration.storage == null || configuration.storage.length === 0) {\n            alert('Incomplete data');\n        }\n\n        this.setState({\n            isTesting: true\n        });\n\n        $.ajax({\n            type: 'POST',\n            url: baseUrl + '/graxproxy/api/storageproviderhealthcheck',\n            contentType: \"application/json; charset=utf-8\",\n            data: JSON.stringify({\n                envConfiguration: {\n                    storage: configuration.storage[0] || {}\n                }\n            }),\n            success: function(res) {\n                console.log(res);\n\n                this.setState({\n                    isTesting: false\n                });\n\n                alert(res.data.aws); // TODO: check Azure storage\n            }.bind(this),\n            error: function(xhr, status, err) {\n                console.error(xhr, status, err);\n\n                this.setState({\n                    isTesting: false\n                });\n\n                alert('Error! status: ' + status);\n            }.bind(this)\n        });\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return (\n                <Spinner size=\"large\" variant=\"brand\" />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {this.state.isTesting ? <Spinner size=\"large\" variant=\"brand\" /> : null}\n\n                <div className=\"slds-p-around_medium\">\n                    <SLDSSection title=\"General Information\">\n                        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n                            <div className=\"slds-col slds-size_1-of-2\">\n                                <Input id=\"configuration-title\" label=\"Configuration Title\" defaultValue={this.state.title} onBlur={(e) => {\n                                    // this.state.title = e.target.value;\n                                    \n                                    this.setState({\n                                        title: e.target.value\n                                    }, () => {\n                                        this.triggerConfigurationChange();\n                                    });\n                                }} />\n                            </div>\n                        </div>\n\n                        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center slds-p-top_medium\">\n                            <div className=\"slds-col\">\n                                <div className=\"slds-form-element\">\n                                    <label className=\"slds-form-element__label\" htmlFor=\"elastic-search-provider\">Elastic Search Provider</label>\n                                    <div className=\"slds-form-element__control\">\n                                        <div className=\"slds-select_container\">\n                                            <select className=\"slds-select\" id=\"elastic-search-provider\" value={_.get(this.state.configuration, 'elastic[0].provider', '')} onChange={(e) => {\n                                                _.set(this.state.configuration, 'elastic[0].provider', e.target.value);\n\n                                                this.setState({\n                                                    configuration: this.state.configuration\n                                                });\n\n                                                this.triggerConfigurationChange();\n                                            }}>\n                                                <option value=\"\" disabled>-- Select --</option>\n                                                <option value=\"bonsai\">Bonsai Elastic Search</option>\n                                                <option value=\"aws\">AWS Elastic Search</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"slds-col\">\n                                <div className=\"slds-form-element\">\n                                    <label className=\"slds-form-element__label\" htmlFor=\"cloud-storage-provider\">Cloud Storage Provider</label>\n                                    <div className=\"slds-form-element__control\">\n                                        <div className=\"slds-select_container\">\n                                            <select className=\"slds-select\" id=\"cloud-storage-provider\" value={_.get(this.state.configuration, 'storage[0].provider', '')} onChange={(e) => {\n                                                _.set(this.state.configuration, 'storage[0].provider', e.target.value);\n\n                                                this.setState({\n                                                    configuration: this.state.configuration\n                                                });\n\n                                                this.triggerConfigurationChange();\n                                            }}>\n                                                <option value=\"\" disabled>-- Select --</option>\n                                                <option value=\"aws\">AWS S3 Storage</option>\n                                                <option value=\"azure\">Azure BLOB Storage</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </SLDSSection>\n\n                    {_.get(this.state.configuration, 'elastic[0].provider') === 'bonsai' ? (\n                        <SLDSSection title=\"Bonsai Elastic Information\" className=\"slds-p-top_large\">\n                            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n                                <div className=\"slds-col\">\n                                    <Input id=\"bonsai-url\" label=\"Bonsai URL\" defaultValue={_.get(this.state.configuration, 'elastic[0].url')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'elastic[0].url', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                </div>\n\n                                <div className=\"slds-col\">\n                                    <Input id=\"bonsai-plan\" label=\"Bonsai Plan\" readOnly />\n                                </div>\n                            </div>\n\n                            <div className=\"slds-p-top_medium\">\n                                <Button label=\"Test\" variant=\"brand\" onClick={() => {\n                                    this.testElasticHandler();\n                                }} />\n                            </div>\n                        </SLDSSection>\n                    ) : null}\n\n                    {_.get(this.state.configuration, 'elastic[0].provider') === 'aws' ? (\n                        <SLDSSection title=\"AWS Elastic Information\" className=\"slds-p-top_large\">\n                            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n                                <div className=\"slds-col\">\n                                    <Input id=\"aws-elastic-endpoint-name\" label=\"Endpoint Name\" />\n\n                                    <div className=\"slds-form-element\">\n                                        <label className=\"slds-form-element__label\" htmlFor=\"aws-elastic-s3-region\">S3 Region</label>\n                                        <div className=\"slds-form-element__control\">\n                                            <div className=\"slds-select_container\">\n                                                <select className=\"slds-select\" id=\"aws-elastic-s3-region\">\n                                                    <option value=\"\" disabled>-- Select --</option>\n                                                    <option value=\"us-east-1\">US East (Virginia) - us-east-1</option>\n                                                    <option value=\"us-east-2\">US East (Ohio) - us-east-2</option>\n                                                    <option value=\"us-west-1\">US West (N. California) - us-west-1</option>\n                                                    <option value=\"us-west-2\">US West (Oregon) - us-west-2</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"slds-col\">\n                                    <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-center\">\n                                        <div className=\"slds-col\">\n                                            <Input id=\"aws-elastic-accesskeyid\" label=\"Access Key ID\" defaultValue={_.get(this.state.configuration, 'elastic[0].accessKey')} onBlur={(e) => {\n                                                _.set(this.state.configuration, 'elastic[0].accessKey', e.target.value);\n\n                                                this.setState({\n                                                    configuration: this.state.configuration\n                                                });\n\n                                                this.triggerConfigurationChange();\n                                            }} />\n                                        </div>\n\n                                        <div className=\"slds-col\">\n                                            <Input id=\"asw-elastic-s3-bucket-name\" label=\"S3 Bucket Name\" value=\"sfdc-grax-storage\" readOnly />\n                                        </div>\n                                    </div>\n\n                                    <Input id=\"asw-elastic-secret-accesskey\" label=\"Secret Access Key\" defaultValue={_.get(this.state.configuration, 'elastic[0].secretAccessKey')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'elastic[0].secretAccessKey', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                </div>\n                            </div>\n\n                            <div className=\"slds-p-top_medium\">\n                                <Button label=\"Test\" variant=\"brand\" onClick={() => {\n                                    this.testElasticHandler();\n                                }} />\n                            </div>\n                        </SLDSSection>\n                    ) : null}\n\n                    {_.get(this.state.configuration, 'storage[0].provider') === 'azure' ? (\n                        <SLDSSection title=\"Azure Blob Storage\" className=\"slds-p-top_large\">\n                            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n                                <div className=\"slds-col\">\n                                    <Input id=\"azure-storage-account-name\" label=\"Azure Storage Account Name\" defaultValue={_.get(this.state.configuration, 'storage[0].storageAccountName')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'storage[0].storageAccountName', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                    <Input id=\"azure-container-name\" label=\"Azure Container Name\" defaultValue={_.get(this.state.configuration, 'storage[0].containerName')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'storage[0].containerName', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                </div>\n\n                                <div className=\"slds-col\">\n                                    <Input id=\"azure-storage-account-access-key\" label=\"Storage Account Access Key\" defaultValue={_.get(this.state.configuration, 'storage[0].storageAccessKey')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'storage[0].storageAccessKey', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                </div>\n                            </div>\n\n                            <div className=\"slds-p-top_medium\">\n                                <Button label=\"Test\" variant=\"brand\" onClick={() => {\n                                    this.testStorageHandler();\n                                }} />\n                            </div>\n                        </SLDSSection>\n                    ) : null}\n\n                    {_.get(this.state.configuration, 'storage[0].provider') === 'aws' ? (\n                        <SLDSSection title=\"S3 Bucket\" className=\"slds-p-top_large\">\n                            <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n                                <div className=\"slds-col\">\n                                    <Input id=\"storage-s3-bucket-name\" label=\"S3 Bucket Name\" defaultValue={_.get(this.state.configuration, 'storage[0].bucket')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'storage[0].bucket', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n\n                                    <div className=\"slds-form-element\">\n                                        <label className=\"slds-form-element__label\" htmlFor=\"storage-s3-region\">S3 Region</label>\n                                        <div className=\"slds-form-element__control\">\n                                            <div className=\"slds-select_container\">\n                                                <select className=\"slds-select\" id=\"storage-s3-region\" value={_.get(this.state.configuration, 'storage[0].region', '')} onChange={(e) => {\n                                                        _.set(this.state.configuration, 'storage[0].region', e.target.value);\n\n                                                        this.setState({\n                                                            configuration: this.state.configuration\n                                                        });\n\n                                                        this.triggerConfigurationChange();\n                                                    }}>\n                                                    <option value=\"\" disabled>-- Select --</option>\n                                                    <option value=\"us-east-1\">US East (Virginia) - us-east-1</option>\n                                                    <option value=\"us-east-2\">US East (Ohio) - us-east-2</option>\n                                                    <option value=\"us-west-1\">US West (N. California) - us-west-1</option>\n                                                    <option value=\"us-west-2\">US West (Oregon) - us-west-2</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <Input id=\"storage-s3.assume-role-arn\" label=\"Assume Role / ARN Name\" />\n\n                                    <Checkbox\n                                        assistiveText={{\n                                            label: 'Assume Role Enabled',\n                                        }}\n                                        id=\"checkbox-storage-s3-assume-role\"\n                                        labels={{\n                                            label: 'Assume Role Enabled',\n                                        }}\n                                        onChange={(e) => {\n                                            console.log('onChange ', e.target);\n                                        }}\n                                    />\n                                </div>\n\n                                <div className=\"slds-col\">\n                                    <Input id=\"storage-s3-access-key\" label=\"Access Key ID\" defaultValue={_.get(this.state.configuration, 'storage[0].accessKey')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'storage[0].accessKey', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                    <Input id=\"storage-s3-secret-access-key\" label=\"Secret Access Key\" defaultValue={_.get(this.state.configuration, 'storage[0].secretAccessKey')} onBlur={(e) => {\n                                        _.set(this.state.configuration, 'storage[0].secretAccessKey', e.target.value);\n\n                                        this.setState({\n                                            configuration: this.state.configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }} />\n                                    <Input id=\"storage-s3-refresh-token\" label=\"Refresh Token / Expiry Time (Hours)\" />\n                                </div>\n                            </div>\n\n                            <Button label=\"Test\" variant=\"brand\" onClick={() => {\n                                this.testStorageHandler();\n                            }} />\n                        </SLDSSection>\n                    ) : null}\n\n                    {/*<SLDSSection title=\"Marketing Cloud\" className=\"slds-p-top_large\">\n                        <div className=\"slds-grid slds-gutters_direct slds-grid_vertical-align-start\">\n                            <div className=\"slds-col\">\n                                <Input id=\"marketing-cloud-sftp-username\" label=\"SFTP Username\" />\n                                <Input id=\"marketing-cloud-sftp-password\" label=\"SFTP Password\" />\n                            </div>\n\n                            <div className=\"slds-col\">\n                                <Input id=\"marketing-cloud-sftp-host\" label=\"SFTP Host\" />\n                            </div>\n                        </div>\n\n                        <div className=\"slds-p-top_medium\">\n                            <Button label=\"Test\" variant=\"brand\" />\n                        </div>\n                    </SLDSSection>*/}\n\n                    <SLDSSection title=\"Metadata Backup\" className=\"slds-p-top_large\">\n                        <GRAXEnvSetting id=\"SALESFORCE_GIT_INTEGRATION\" setting={{\n                            name: 'SALESFORCE_GIT_INTEGRATION',\n                            type: 'boolean',\n                            id: 'sourceControlEnabled',\n                            helpText: 'Set to \"true\" to backup SF metadata'\n                        }} onChange={(value) => {\n                            var configuration = this.state.configuration;\n                                    \n                            _.set(configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlEnabled'], value);\n\n                            if(value && _.get(configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlProvider']) == null) {\n                                _.set(configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlProvider'], 'github');\n                            }\n\n                            this.setState({\n                                configuration: configuration\n                            });\n\n                            this.triggerConfigurationChange();\n                        }} defaultValue={_.get(this.state.configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlEnabled'])} />\n\n                        {_.get(this.state.configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlEnabled'], false) ? (\n                            <React.Fragment>\n                                {/*_.map(METADATA_BACKUP_SETTINGS, (setting, i) => {\n                                    var key = 'grax-env-setting-' + (setting.id || setting.name)\n\n                                    return (\n                                        <GRAXEnvSetting id={key} key={key} setting={setting} onBlur={(value) => {\n                                            var configuration = this.state.configuration;\n                                    \n                                            _.set(configuration, ['metadataBackup', '0', setting.id || setting.name], value);\n\n                                            this.setState({\n                                                configuration: configuration\n                                            });\n\n                                            this.triggerConfigurationChange();\n                                        }} />\n                                    );\n                                })*/}\n\n                                <RadioButtonGroup\n                                    labels={{\n                                        label: 'Provider'\n                                    }}\n                                    onChange={(e) => {\n                                        var configuration = this.state.configuration;\n                                    \n                                        _.set(configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlProvider'], e.target.value);\n\n                                        this.setState({\n                                            configuration: configuration\n                                        });\n\n                                        this.triggerConfigurationChange();\n                                    }}\n                                    className=\"slds-m-top_small\"\n                                >\n                                    <Radio\n                                        id=\"metadata-backup-sourceControlProvider-github\"\n                                        label=\"Github\"\n                                        value=\"github\"\n                                        checked={_.get(this.state.configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlProvider']) === 'github'}\n                                        variant=\"button-group\"\n                                    />\n\n                                    <Radio\n                                        id=\"metadata-backup-sourceControlProvider-gitlab\"\n                                        label=\"GitLab\"\n                                        value=\"gitlab\"\n                                        checked={_.get(this.state.configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlProvider']) === 'gitlab'}\n                                        variant=\"button-group\"\n                                    />\n                                </RadioButtonGroup>\n\n                                {_.map(METADATA_BACKUP_SETTINGS_BY_PROVIDER[_.get(this.state.configuration, ['metadataBackup', this.state.metadataBackupIndex, 'sourceControlProvider'])], (setting, i) => {\n                                    var key = 'grax-env-setting-' + (setting.id || setting.name)\n\n                                    return (\n                                        <GRAXEnvSetting id={key} key={key} setting={setting} defaultValue={_.get(this.state.configuration, ['metadataBackup', this.state.metadataBackupIndex, setting.id || setting.name])} onChange={(value) => {\n                                            var configuration = this.state.configuration;\n                                    \n                                            _.set(configuration, ['metadataBackup', '0', setting.id || setting.name], value);\n\n                                            this.setState({\n                                                configuration: configuration\n                                            });\n\n                                            this.triggerConfigurationChange();\n                                        }} />\n                                    );\n                                })}\n\n                            </React.Fragment>\n                        ) : null}\n                    </SLDSSection>\n\n                    <SLDSSection title=\"Misc. Admin Settings\" className=\"slds-p-top_large\">\n                        {_.map(MISC_ADMIN_SETTINGS, (setting, i) => {\n                            var key = 'grax-env-setting-' + (setting.id || setting.name)\n\n                            return (\n                                <GRAXEnvSetting id={key} key={key} setting={setting} onBlur={(e) => {\n                                    console.log(e);\n                                }} />\n                            );\n                        })}\n                    </SLDSSection>\n                </div>\n            </React.Fragment>\n        )\n    }\n}","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Radio Group design pattern](https://lightningdesignsystem.com/components/radio-group/) in React.\n// Based on SLDS v2.5.0\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shortid from 'shortid';\nimport assign from 'lodash.assign';\nimport { RADIO_GROUP } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `label`: This label appears in the legend.\n   */\n  assistiveText: PropTypes.shape({\n    label: PropTypes.string\n  }),\n\n  /**\n   * Children are expected to be Radio components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Custom CSS classes added to the node.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `error`: Message to display when any of Checkboxes are in an error state.\n   * * `label`: This label appears above the radio group.\n   */\n  labels: PropTypes.shape({\n    error: PropTypes.string,\n    label: PropTypes.string\n  }),\n\n  /**\n   * This event fires when the radio selection changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Disable all radio inputs.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Adds an indicator that this field is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The name of this radio group.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The ID of the error message, for linking to radio inputs with aria-describedby.\n   */\n  errorId: PropTypes.string,\n\n  /**\n   * Variants of radio groups such as Radio Button Group\n   */\n  variant: PropTypes.oneOf(['base', 'button-group'])\n};\nvar defaultProps = {\n  assistiveText: {},\n  labels: {},\n  variant: 'base'\n};\n/**\n * A styled select list that can have a single entry checked at any one time.\n * The RadioGroup component wraps [Radio](/components/radios) components, which should be used as children.\n */\n\nvar RadioGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RadioGroup, _React$Component);\n\n  function RadioGroup() {\n    _classCallCheck(this, RadioGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadioGroup).apply(this, arguments));\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.generatedName = shortid.generate();\n      this.generatedErrorId = shortid.generate();\n    }\n  }, {\n    key: \"getErrorId\",\n    value: function getErrorId() {\n      if (this.hasError()) {\n        return this.props.errorId || this.generatedErrorId;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.props.name || this.generatedName;\n    }\n  }, {\n    key: \"hasError\",\n    value: function hasError() {\n      return !!this.labels.error;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this; // Merge objects of strings with their default object\n\n\n      this.labels = this.props.labels ? assign({}, defaultProps.labels, this.props.labels) : defaultProps.labels;\n      var children = React.Children.map(this.props.children, function (child) {\n        return React.cloneElement(child, {\n          name: _this.getName(),\n          onChange: _this.props.onChange,\n          'aria-describedby': _this.getErrorId(),\n          disabled: _this.props.disabled\n        });\n      });\n      return React.createElement(\"fieldset\", {\n        className: classNames('slds-form-element', {\n          'slds-has-error': this.labels.error\n        })\n      }, React.createElement(\"legend\", {\n        className: classNames('slds-form-element__legend', 'slds-form-element__label', this.props.assistiveText.label ? 'slds-assistive-text' : '')\n      }, this.props.required ? React.createElement(\"abbr\", {\n        className: \"slds-required\",\n        title: \"required\"\n      }, '*') : null, this.props.assistiveText.label ? this.props.assistiveText.label : this.labels.label), React.createElement(\"div\", {\n        className: classNames('slds-form-element__control', this.props.className)\n      }, this.props.variant === 'button-group' ? React.createElement(\"div\", {\n        style: this.props.style,\n        className: \"slds-radio_button-group\"\n      }, children) : children, this.labels.error ? React.createElement(\"div\", {\n        id: this.getErrorId(),\n        className: \"slds-form-element__help\"\n      }, this.labels.error) : null));\n    }\n  }]);\n\n  return RadioGroup;\n}(React.Component);\n\nRadioGroup.displayName = RADIO_GROUP;\nRadioGroup.propTypes = propTypes;\nRadioGroup.defaultProps = defaultProps;\nexport default RadioGroup;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n// Implements the [Radio Button Group design pattern](https://lightningdesignsystem.com/components/radio-button-group/) in React.\n// Based on SLDS v2.5.0\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioGroup from '../radio-group';\nimport { RADIO_BUTTON_GROUP } from '../../utilities/constants';\nvar propTypes = {\n  /**\n   * **Assistive text for accessibility**\n   * * `label`: This label appears in the legend.\n   */\n  assistiveText: PropTypes.shape({\n    label: PropTypes.string\n  }),\n\n  /**\n   * Children are expected to be Radio components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Custom CSS classes added to `slds-radio_button-group` node.\n   */\n  className: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n\n  /**\n   * **Text labels for internationalization**\n   * This object is merged with the default props object on every render.\n   * * `error`: Message to display when any of Checkboxes are in an error state.\n   * * `label`: This label appears above the button group.\n   */\n  labels: PropTypes.shape({\n    error: PropTypes.string,\n    label: PropTypes.string\n  }),\n\n  /**\n   * This event fires when the radio selection changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Disable all radio inputs.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Adds an indicator that this field is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The name of this radio group.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The ID of the error message, for linking to radio inputs with aria-describedby.\n   */\n  errorId: PropTypes.string\n};\nvar defaultProps = {\n  labels: {},\n  assistiveText: {}\n};\n/**\n * A styled select list that can have a single entry checked at any one time.\n * The RadioButtonGroup component wraps [Radio](/components/radios) components, which should be used as children.\n */\n\nvar RadioButtonGroup = function RadioButtonGroup(props) {\n  // Separate props we care about in order to pass others along passively to the dropdown component\n  var variant = props.variant,\n      rest = _objectWithoutProperties(props, [\"variant\"]);\n\n  return React.createElement(RadioGroup, _extends({\n    variant: \"button-group\"\n  }, rest));\n};\n\nRadioButtonGroup.displayName = RADIO_BUTTON_GROUP;\nRadioButtonGroup.propTypes = propTypes;\nRadioButtonGroup.defaultProps = defaultProps;\nexport default RadioButtonGroup;","import React from 'react';\nimport { Icon } from '@salesforce/design-system-react';\n\nexport default class SLDSSection extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: props.isOpen === true ? true : false || props.isCollapsible === undefined\n        };\n\n        this.handleToggle = this.handleToggle.bind(this);\n    }\n\n    handleToggle(e) {\n        var isOpen = !this.state.isOpen;\n\n        this.setState({\n            isOpen: isOpen\n        });\n\n        if(this.props.onToggle) {\n            this.props.onToggle(isOpen);\n        }\n\n        e.preventDefault();\n    }\n\n    render() {\n        var title = <span className={'slds-truncate' + (!this.props.isCollapsible ? ' slds-p-horizontal_small' : '')} title={this.props.title}>{this.props.title}</span>;\n\n        return (\n            <div id={this.props.id || this.props.key} className={['slds-section', this.state.isOpen && 'slds-is-open', this.props.className].join(' ')}>\n                <h3 className=\"slds-section__title slds-theme_shade\">\n                    {this.props.isCollapsible ? <button className=\"slds-button slds-section__title-action\" onClick={this.handleToggle}>\n                        <Icon\n                            assistiveText={{ label: this.props.title }}\n                            category=\"utility\"\n                            name=\"switch\"\n                            size=\"x-small\"\n                            className=\"slds-section__title-action-icon slds-button__icon slds-button__icon_left\"\n                        />\n                        {title}\n                    </button> : title}\n                </h3>\n                {this.state.isOpen && <div className=\"slds-section__content\">\n                    {this.props.children}\n                </div>}\n            </div>\n        );\n    }\n}"],"sourceRoot":""}