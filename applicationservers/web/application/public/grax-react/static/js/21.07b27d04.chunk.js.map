{"version":3,"sources":["components/GRAXRestoreTabs.jsx"],"names":["GRAXRestore","lazy","GRAXRestoreMapping","GRAXRestoreTabs","props","state","isLoading","error","customMapping","$","ajax","type","url","baseUrl","GetParams","action","data","success","parseJSON","e","this","setState","bind","xhr","status","err","console","toString","size","variant","appName","fallback","onMappingChange","id","label","React","Component"],"mappings":"uQAQMA,EAAcC,gBAAK,kBAAM,uDACzBC,EAAqBD,gBAAK,kBAAM,wDAEjBE,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAO,KACPC,cAAe,MANJ,E,iFAWfC,IAAEC,KAAK,CACHC,KAAM,MAENC,IAAKC,IAAU,4CAA8CC,YAAU,CAACC,OAAO,SAC/EC,KAAM,GACNC,QAAS,SAASD,GACd,IAAIR,EAAgBQ,EAEpB,IACIR,EAAgBC,IAAES,UAAUF,GAC9B,MAAMG,IAERC,KAAKC,SAAS,CACVb,cAAeA,EACfF,WAAW,KAEjBgB,KAAKF,MACPb,MAAO,SAASgB,EAAKC,EAAQC,GACzBC,QAAQnB,MAAMgB,EAAKC,EAAQC,GAE3BL,KAAKC,SAAS,CACVd,MAAsB,MAAfgB,EAAIC,OAAiB,KAAOC,EAAIE,WACvCnB,cAA8B,MAAfe,EAAIC,OAAiB,GAAK,KACzClB,WAAW,KAEjBgB,KAAKF,U,+BAIL,IAAD,OACL,OAAGA,KAAKf,MAAMC,UAEN,kBAAC,IAAD,CAASsB,KAAK,QAAQC,QAAQ,UAIZ,YAAvBT,KAAKhB,MAAM0B,QAEN,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,CAASH,KAAK,QAAQC,QAAQ,WAC9C,kBAAC3B,EAAD,CAAoBM,cAAeY,KAAKf,MAAMG,cAAewB,gBAAiB,SAACxB,GAC3E,EAAKa,SAAS,CACVb,cAAeA,QAQ/B,kBAAC,IAAD,CAAMqB,QAAST,KAAKhB,MAAMyB,QAASI,GAAG,qBACV,YAAvBb,KAAKhB,MAAM0B,QACR,kBAAC,IAAD,CAAWI,MAAM,WACb,kBAAC,WAAD,CAAUH,SAAU,kBAAC,IAAD,CAASH,KAAK,QAAQC,QAAQ,WAC9C,kBAAC7B,EAAD,CAAaQ,cAAeY,KAAKf,MAAMG,kBAG/C,U,GApEyB2B,IAAMC","file":"static/js/21.07b27d04.chunk.js","sourcesContent":["///* global $ */\nimport React, { Suspense, lazy } from 'react';\nimport { Tabs, TabsPanel, Spinner } from '@salesforce/design-system-react';\n\nimport {baseUrl, GetParams} from '../lib/grax-data-lake';\n\nimport $ from 'jquery';\n\nconst GRAXRestore = lazy(() => import('./GRAXRestore'));\nconst GRAXRestoreMapping = lazy(() => import('./GRAXRestoreMapping'));\n\nexport default class GRAXRestoreTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            error: null,\n            customMapping: null\n        };\n    }\n\n    componentDidMount() {\n        $.ajax({\n            type: 'GET',\n            //dataType: 'jsonp',\n            url: baseUrl + '/grax-app/grax-data-lake/getCustomMapping' + GetParams({action:'load'}),\n            data: {},\n            success: function(data) {\n                var customMapping = data;\n\n                try {\n                    customMapping = $.parseJSON(data);\n                } catch(e){}\n\n                this.setState({\n                    customMapping: customMapping,\n                    isLoading: false\n                });\n            }.bind(this),\n            error: function(xhr, status, err) {\n                console.error(xhr, status, err);\n\n                this.setState({\n                    error: xhr.status === 404 ? null : err.toString(),\n                    customMapping: xhr.status === 404 ? {} : null,\n                    isLoading: false\n                });\n            }.bind(this)\n        });\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return (\n                <Spinner size=\"large\" variant=\"brand\" />\n            );\n        }\n\n        if(this.props.appName === 'mapping') {\n            return (\n                <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                    <GRAXRestoreMapping customMapping={this.state.customMapping} onMappingChange={(customMapping) => {\n                        this.setState({\n                            customMapping: customMapping\n                        });\n                    }} />\n                </Suspense>\n            );\n        }\n\n        return (\n            <Tabs variant={this.props.variant} id=\"grax-restore-tabs\">\n                {this.props.appName === 'restore' ? (\n                    <TabsPanel label=\"Restore\">\n                        <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                            <GRAXRestore customMapping={this.state.customMapping} />\n                        </Suspense>\n                    </TabsPanel>\n                ) : null}\n            </Tabs>\n        );\n    }\n}"],"sourceRoot":""}