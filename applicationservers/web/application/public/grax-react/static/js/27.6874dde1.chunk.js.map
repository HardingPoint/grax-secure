{"version":3,"sources":["components/GRAXRestoreTabs.jsx","lib/grax-data-lake.js"],"names":["GRAXRestore","lazy","GRAXRestoreMapping","GRAXRestoreTabs","props","state","isLoading","error","customMapping","$","ajax","type","url","baseUrl","GetParams","action","data","success","parseJSON","e","this","setState","bind","xhr","status","err","console","toString","size","variant","appName","fallback","onMappingChange","id","label","React","Component","isDev","token","window","__grax__","_csrf","orgid","pageParams","userid","params","undefined","param","ajaxSetup","beforeSend","settings","method","setRequestHeader","authorization","test","crossDomain","withCredentials","skipFail","fail","jqXHR","textStatus","errorThrown","showError","statusText","responseText"],"mappings":"oQAQMA,EAAcC,gBAAK,kBAAM,6EACzBC,EAAqBD,gBAAK,kBAAM,6EAEjBE,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,EACXC,MAAO,KACPC,cAAe,MANJ,E,iFAWfC,IAAEC,KAAK,CACHC,KAAM,MAENC,IAAKC,IAAU,4CAA8CC,YAAU,CAACC,OAAO,SAC/EC,KAAM,GACNC,QAAS,SAASD,GACd,IAAIR,EAAgBQ,EAEpB,IACIR,EAAgBC,IAAES,UAAUF,GAC9B,MAAMG,IAERC,KAAKC,SAAS,CACVb,cAAeA,EACfF,WAAW,KAEjBgB,KAAKF,MACPb,MAAO,SAASgB,EAAKC,EAAQC,GACzBC,QAAQnB,MAAMgB,EAAKC,EAAQC,GAE3BL,KAAKC,SAAS,CACVd,MAAsB,MAAfgB,EAAIC,OAAiB,KAAOC,EAAIE,WACvCnB,cAA8B,MAAfe,EAAIC,OAAiB,GAAK,KACzClB,WAAW,KAEjBgB,KAAKF,U,+BAIL,IAAD,OACL,OAAGA,KAAKf,MAAMC,UAEN,kBAAC,IAAD,CAASsB,KAAK,QAAQC,QAAQ,UAIZ,YAAvBT,KAAKhB,MAAM0B,QAEN,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,CAASH,KAAK,QAAQC,QAAQ,WAC9C,kBAAC3B,EAAD,CAAoBM,cAAeY,KAAKf,MAAMG,cAAewB,gBAAiB,SAACxB,GAC3E,EAAKa,SAAS,CACVb,cAAeA,QAQ/B,kBAAC,IAAD,CAAMqB,QAAST,KAAKhB,MAAMyB,QAASI,GAAG,qBACV,YAAvBb,KAAKhB,MAAM0B,QACR,kBAAC,IAAD,CAAWI,MAAM,WACb,kBAAC,WAAD,CAAUH,SAAU,kBAAC,IAAD,CAASH,KAAK,QAAQC,QAAQ,WAC9C,kBAAC7B,EAAD,CAAaQ,cAAeY,KAAKf,MAAMG,kBAG/C,U,GApEyB2B,IAAMC,Y,gCCXnD,qQAmBO,IAAMC,GAAQ,EAIRxB,EAAUwB,EAFJ,4CAEyB,GAE/BC,EAAQC,OAAOC,SAASF,MACxBG,EAAQF,OAAOC,SAASC,MACxBC,EAAQH,OAAOC,SAASE,MAIxBC,GAHSJ,OAAOC,SAASI,OAGZL,OAAOC,SAASG,YAAc,IAEjD,SAAS7B,EAAU+B,GAMxB,OALe,OAAXA,QAA8BC,IAAXD,IAAsBA,EAAS,IAEhC,OAAlBA,EAAO9B,aAAqC+B,IAAlBD,EAAO9B,QAA0C,KAAlB8B,EAAO9B,SAClE8B,EAAO9B,OAAS,QAEX,IAAMN,IAAEsC,MAAMF,GAOvBpC,IAAEuC,UAAU,CACVC,WAAY,SAAS1B,EAAK2B,GAL5B,IAAwBC,EAMpB5B,EAAI6B,iBAAiB,YAAaV,GAEF,MAA5BC,EAAWU,cACb9B,EAAI6B,iBAAiB,gBAAiBT,EAAWU,eAEjD9B,EAAI6B,iBAAiB,gBAAiB,UAAYd,GAXhCa,EAcAD,EAASvC,KAZxB,6BAA6B2C,KAAKH,IAYA/B,KAAKmC,aAC1ChC,EAAI6B,iBAAiB,cAAeX,GAGtClB,EAAIiC,iBAAkB,GAEI,IAAtBN,EAASO,UACXlC,EAAImC,MAAK,SAACC,EAAOC,EAAYC,GAC3BnC,QAAQnB,MAAMoD,GAEO,MAAjBA,EAAMnC,QAAkC,cAAhBqC,GAC1BtB,OAAOuB,UAAUH,EAAMI,WAAa,KAAOJ,EAAMK","file":"static/js/27.6874dde1.chunk.js","sourcesContent":["///* global $ */\nimport React, { Suspense, lazy } from 'react';\nimport { Tabs, TabsPanel, Spinner } from '@salesforce/design-system-react';\n\nimport {baseUrl, GetParams} from '../lib/grax-data-lake';\n\nimport $ from 'jquery';\n\nconst GRAXRestore = lazy(() => import('./GRAXRestore'));\nconst GRAXRestoreMapping = lazy(() => import('./GRAXRestoreMapping'));\n\nexport default class GRAXRestoreTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            error: null,\n            customMapping: null\n        };\n    }\n\n    componentDidMount() {\n        $.ajax({\n            type: 'GET',\n            //dataType: 'jsonp',\n            url: baseUrl + '/grax-app/grax-data-lake/getCustomMapping' + GetParams({action:'load'}),\n            data: {},\n            success: function(data) {\n                var customMapping = data;\n\n                try {\n                    customMapping = $.parseJSON(data);\n                } catch(e){}\n\n                this.setState({\n                    customMapping: customMapping,\n                    isLoading: false\n                });\n            }.bind(this),\n            error: function(xhr, status, err) {\n                console.error(xhr, status, err);\n\n                this.setState({\n                    error: xhr.status === 404 ? null : err.toString(),\n                    customMapping: xhr.status === 404 ? {} : null,\n                    isLoading: false\n                });\n            }.bind(this)\n        });\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return (\n                <Spinner size=\"large\" variant=\"brand\" />\n            );\n        }\n\n        if(this.props.appName === 'mapping') {\n            return (\n                <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                    <GRAXRestoreMapping customMapping={this.state.customMapping} onMappingChange={(customMapping) => {\n                        this.setState({\n                            customMapping: customMapping\n                        });\n                    }} />\n                </Suspense>\n            );\n        }\n\n        return (\n            <Tabs variant={this.props.variant} id=\"grax-restore-tabs\">\n                {this.props.appName === 'restore' ? (\n                    <TabsPanel label=\"Restore\">\n                        <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                            <GRAXRestore customMapping={this.state.customMapping} />\n                        </Suspense>\n                    </TabsPanel>\n                ) : null}\n            </Tabs>\n        );\n    }\n}","/* eslint-disable no-useless-escape */\n/* --------------------------------------------------------------------------\n * This file is subject to the terms and conditions defined in\n * file https://github.com/HardingPoint/GRAXForSFDC/blob/master/LICENSE,\n * which is part of this source code package.\n * --------------------------------------------------------------------------\n *          Copyright (c) 2017-2018 Harding Point\n *                  All rights reserved\n * --------------------------------------------------------------------------\n * Support:\tSupport@Grax.io\n * Website:\thttps://grax.io\n * Github:\thttps://github.com/HardingPoint/grax-application\n * License:\thttps://github.com/HardingPoint/grax-application/blob/master/LICENSE\n * --------------------------------------------------------------------------*/\n\nimport $ from \"jquery\";\n\n// export const isDev = window.location.port !== '80';\n\nexport const isDev = false;\n\nconst devBaseUrl = \"https://grax-datalake-demo2.herokuapp.com\";\n\nexport const baseUrl = isDev ? devBaseUrl : \"\";\n\nexport const token = window.__grax__.token;\nexport const _csrf = window.__grax__._csrf;\nexport const orgid = window.__grax__.orgid;\nexport const userid = window.__grax__.userid;\nexport const sessionid = null;\nexport const endpoint = null;\nexport const pageParams = window.__grax__.pageParams || {};\n\nexport function GetParams(params) {\n  if (params === null || params === undefined) params = {};\n\n  if (params.action === null || params.action === undefined || params.action === \"\")\n    params.action = \"load\";\n\n  return \"?\" + $.param(params);\n}\n\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);\n}\n$.ajaxSetup({\n  beforeSend: function(xhr, settings) {\n    xhr.setRequestHeader(\"sfdcorgid\", orgid);\n\n    if (pageParams.authorization != null) {\n      xhr.setRequestHeader(\"Authorization\", pageParams.authorization);\n    } else {\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n    }\n\n    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n      xhr.setRequestHeader(\"X-CSRFToken\", _csrf);\n    }\n\n    xhr.withCredentials = true;\n\n    if (settings.skipFail !== true) {\n      xhr.fail((jqXHR, textStatus, errorThrown) => {\n        console.error(jqXHR);\n\n        if (jqXHR.status !== 404 && errorThrown !== \"Not Found\") {\n          window.showError(jqXHR.statusText + \": \" + jqXHR.responseText);\n        }\n      });\n    }\n  }\n});\n\nexport { $ };\n"],"sourceRoot":""}