{"version":3,"sources":["../../../../.tmp-es/components/vertical-navigation/check-props.js","../../../../../.tmp-es/components/vertical-navigation/private/item.jsx","../../../../.tmp-es/components/vertical-navigation/index.jsx","../../../../.tmp-es/components/brand-band/index.jsx","lib/configurationUtils.js","components/GRAXCloud.jsx","lib/grax-data-lake.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../.tmp-es/utilities/class-names.js"],"names":["Item","props","className","classNames","isSelected","data-id","href","aria-describedby","onClick","event","isFunction","item","handleClick","id","PropTypes","label","url","string","categoryId","onSelect","func","VerticalNavigation","categories","selectedId","shortid","checkProps","rootId","this","map","category","key","React","Component","VERTICAL_NAVIGATION","BrandBand","style","background","height","position","width","zIndex","children","image","backgroundSize","size","styleContainer","theme","getDataSourceOrgIds","environments","orgs","Object","keys","forEach","configName","dataSources","dataSource","organizationId","push","GRAXCloudConfigurationsDataTable","lazy","ACTIONS","GRAXCLOUD_MENU","items","console","log","isDev","GRAXCloud","state","isLoading","error","configurations","actionHandler","bind","action","params","$","ajax","type","baseUrl","data","success","parseJSON","e","setState","xhr","status","err","isNonError","toString","contentType","JSON","stringify","variant","Fragment","fallback","globalConfigurations","_","get","onChange","globalEnvironmentDefaults","dataSourceOrgIds","isValidId","indexOf","filter","value","endsWith","reduce","result","cleannedValue","Array","isArray","cleanIds","displayName","token","window","__grax__","_csrf","orgid","pageParams","userid","GetParams","undefined","param","ajaxSetup","beforeSend","settings","method","setRequestHeader","authorization","test","crossDomain","withCredentials","skipFail","fail","jqXHR","textStatus","errorThrown","showError","statusText","responseText","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/17.a9f2d58b.chunk.js","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n/* eslint-disable import/no-mutable-exports */\n\nimport deprecatedProperty from '../../utilities/warning/deprecated-property';\n\nlet checkProps = function checkPropsFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tcheckProps = function checkPropsFunction(COMPONENT, props) {\n\t\tdeprecatedProperty(\n\t\t\tCOMPONENT,\n\t\t\tprops.variant,\n\t\t\t'variant',\n\t\t\tundefined,\n\t\t\t'Shade variant is deprecated as there is no background supported currently. Vertical Navigation now uses a default shade.'\n\t\t);\n\t};\n}\n\nexport default checkProps;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\nimport { VERTICAL_NAVIGATION_ITEM } from '../../../utilities/constants';\n\nconst handleClick = (event, props) => {\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect(event, {\n\t\t\titem: props.item,\n\t\t});\n\t}\n};\n\nconst Item = (props) => (\n\t<li\n\t\tclassName={classNames('slds-nav-vertical__item', {\n\t\t\t'slds-is-active': props.isSelected,\n\t\t})}\n\t>\n\t\t<a\n\t\t\tdata-id={props.item.id}\n\t\t\thref={props.item.url || 'javascript:void(0);'} // eslint-disable-line no-script-url\n\t\t\tclassName=\"slds-nav-vertical__action\"\n\t\t\taria-describedby={props.categoryId}\n\t\t\tonClick={(event) => {\n\t\t\t\thandleClick(event, props);\n\t\t\t}}\n\t\t>\n\t\t\t{props.item.label}\n\t\t</a>\n\t</li>\n);\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nItem.displayName = VERTICAL_NAVIGATION_ITEM;\n\n// ### Prop Types\nItem.propTypes = {\n\t/**\n\t * Item to be rendered.\n\t */\n\titem: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tlabel: PropTypes.string.isRequired,\n\t\turl: PropTypes.string,\n\t}),\n\t/**\n\t * Whether item is selected or not.\n\t */\n\tisSelected: PropTypes.bool,\n\t/**\n\t * ID of the category this item belongs to.\n\t */\n\tcategoryId: PropTypes.string.isRequired,\n\t/**\n\t * Function that will run whenever an item is selected.\n\t */\n\tonSelect: PropTypes.func,\n};\n\nItem.defaultProps = {\n\tisSelected: false,\n};\n\nexport default Item;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Vertical Navigation design pattern](https://lightningdesignsystem.com/components/vertical-navigation/) in React.\n// Based on SLDS v2.2.1\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\nimport componentDoc from './component.json';\nimport checkProps from './check-props';\n\nimport { VERTICAL_NAVIGATION } from '../../utilities/constants';\n\n// Child components\nimport Item from './private/item';\n\n/**\n * Vertical Navigation represents a list of links that either take the user to another page or parts of the page the user is in.\n */\nclass VerticalNavigation extends React.Component {\n\tstatic displayName = VERTICAL_NAVIGATION;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * HTML id for component. _Tested with snapshot testing._\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * CSS class names to be added to the container element. _Tested with snapshot testing._\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Array of categories. The required shape is: `{id: string, label: string, items: array}`. The required shape of an item is `{id: string, label: string, url: string}`. All item ids are expected to be unique. _Tested with snapshot testing._\n\t\t */\n\t\tcategories: PropTypes.array,\n\t\t/**\n\t\t * The ID of the item that is currently selected. Defaults to the ID of the first item. _Tested with Mocha framework._\n\t\t */\n\t\tselectedId: PropTypes.string,\n\t\t/**\n\t\t * Triggered when the selection changes. It receives an event and an item object in the shape: `event, {item: [object] }`. _Tested with Mocha framework._\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = shortid.generate();\n\t\tcheckProps(VERTICAL_NAVIGATION, props, componentDoc);\n\t}\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\tgetSelectedId = () => {\n\t\tconst { categories } = this.props;\n\t\tlet selectedId;\n\t\tif (this.props.selectedId) {\n\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\tselectedId = this.props.selectedId;\n\t\t} else if (\n\t\t\tcategories.length > 0 &&\n\t\t\tcategories[0].items &&\n\t\t\tcategories[0].items.length > 0\n\t\t) {\n\t\t\tselectedId = categories[0].items[0].id;\n\t\t}\n\t\treturn selectedId;\n\t};\n\n\trender() {\n\t\tconst rootId = this.getId();\n\t\treturn (\n\t\t\t<nav\n\t\t\t\tid={rootId}\n\t\t\t\tclassName={classNames('slds-nav-vertical', this.props.className)}\n\t\t\t>\n\t\t\t\t{this.props.categories.map((category) => {\n\t\t\t\t\tconst categoryId = `${rootId}-${category.id}`;\n\t\t\t\t\tconst selectedId = this.getSelectedId();\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={`${categoryId}-header`}\n\t\t\t\t\t\t\tclassName=\"slds-nav-vertical__section\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h2 id={categoryId} className=\"slds-nav-vertical__title\">\n\t\t\t\t\t\t\t\t{category.label}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<ul key={categoryId}>\n\t\t\t\t\t\t\t\t{category.items.map((item) => (\n\t\t\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\t\tisSelected={item.id === selectedId}\n\t\t\t\t\t\t\t\t\t\tcategoryId={categoryId}\n\t\t\t\t\t\t\t\t\t\tonSelect={this.props.onSelect}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default VerticalNavigation;\n","/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Brand Band Component\n\n// Implements the [Brand Band design pattern](https://latest-216.lightningdesignsystem.com/components/brand-band/) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// A simple javascript utility for conditionally joining classNames together.\nimport classNames from '../../utilities/class-names';\n\n// ## Constants\nimport { BRAND_BAND } from '../../utilities/constants';\n\n/**\n * The brand band provides theming capability that adds personality and improves information density and contrast.\n *\n * NOTE: you may find that themes other than 'default' fail to load the appropriate styling in your application.\n * If this occurs the cause is very likely to be CSP settings on the server hosting your application protecting against style injections.\n * Changing these settings is not recommended. Instead, add the following styles to any stylesheet provided by the server itself (such as an external stylesheet):\n *\n * When using 'lightning-theme':\n * .slds-brand-band.dsr-brand-band_lightning-blue:before {\n *     background-image: url(/assets/images/themes/oneSalesforce/banner-brand-default.png), linear-gradient(to top, rgba(175, 197, 222, 0) 0, #1B5F9E);\n * }\n * .slds-brand-band.dsr-brand-band_lightning-blue:after {\n *     background-image: linear-gradient(to bottom, rgba(175, 197, 222, 0) 60%, #AFC5DE);\n * }\n *\n * For more information on the problem, [see this Stack Overflow question](https://stackoverflow.com/questions/17766817/refused-to-apply-inline-style-because-it-violates-the-following-content-security)\n */\nclass BrandBand extends React.Component {\n\tstatic injectLightningBlueStyles() {\n\t\treturn (\n\t\t\t<style>{`.slds-brand-band.dsr-brand-band_lightning-blue:before {\n\tbackground-image: url(/assets/images/themes/oneSalesforce/banner-brand-default.png), linear-gradient(to top, rgba(175, 197, 222, 0) 0, #1B5F9E);\n}\n.slds-brand-band.dsr-brand-band_lightning-blue:after {\n\tbackground-image: linear-gradient(to bottom, rgba(175, 197, 222, 0) 60%, #AFC5DE);\n}`}</style>\n\t\t);\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\tconst { props } = this;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'rgb(176, 196, 223)',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tzIndex: 1,\n\t\t\t\t\t...props.styleContainer,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{BrandBand.injectLightningBlueStyles()}\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-brand-band',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-brand-band_small': props.size === 'small',\n\t\t\t\t\t\t\t'slds-brand-band_medium': props.size === 'medium',\n\t\t\t\t\t\t\t'slds-brand-band_large': props.size === 'large',\n\t\t\t\t\t\t\t'slds-brand-band_cover': props.backgroundSize === 'cover',\n\t\t\t\t\t\t\t'slds-brand-band_none': props.image === 'none',\n\n\t\t\t\t\t\t\t'dsr-brand-band_lightning-blue': true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprops.className\n\t\t\t\t\t)}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tstyle={props.style}\n\t\t\t\t>\n\t\t\t\t\t{props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nBrandBand.displayName = BRAND_BAND;\n\nBrandBand.propTypes = {\n\t/**\n\t * Primary application grid layout or a white background component such as a `Card` should be passed into this component.\n\t */\n\tchildren: PropTypes.node,\n\n\t/**\n\t * CSS classes that are applied to the component\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\n\t/**\n\t * Id of component, if desired. If not provided an id is automatically generated\n\t */\n\tid: PropTypes.string,\n\n\t/**\n\t * Image of the brand band\n\t */\n\timage: PropTypes.oneOf(['default', 'none']),\n\n\t/**\n\t * Background size of the brand band. Default is 'contain'\n\t */\n\tbackgroundSize: PropTypes.oneOf(['contain', 'cover']),\n\t/**\n\t * Size of the brand band. Default is 'medium'\n\t */\n\tsize: PropTypes.oneOf(['small', 'medium', 'large']),\n\n\t/**\n\t * Custom styles to be passed to the component\n\t */\n\tstyle: PropTypes.object,\n\n\t/**\n\t * Custom styles to be passed to the component container\n\t */\n\tstyleContainer: PropTypes.object,\n\n\t/**\n\t * Different brand band styling.\n\t * NOTE: using 'lightning-blue' may result in incorrect styling depending on server CSP settings. See opening component documentation above for details.\n\t */\n\ttheme: PropTypes.oneOf(['default', 'lightning-blue']),\n};\n\nBrandBand.defaultProps = {\n\tbackgroundSize: 'contain',\n\timage: 'default',\n\tsize: 'medium',\n\ttheme: 'default',\n};\n\nexport default BrandBand;\n","export const cleanIds = ({ globalEnvironmentDefaults = {}, dataSourceOrgIds = [] }) => {\n  const isValidId = id => dataSourceOrgIds.indexOf(id) !== -1;\n\n  const idKeyFilter = value =>\n    value.endsWith(\"OrganizationId\") || value.endsWith(\"OrganizationIds\");\n\n  const defaultIdKeys = Object.keys(globalEnvironmentDefaults).filter(idKeyFilter);\n\n  return defaultIdKeys.reduce((result, key) => {\n    let cleannedValue = result[key];\n\n    if (Array.isArray(cleannedValue)) {\n      cleannedValue = cleannedValue.filter(isValidId);\n    } else if (typeof cleannedValue === \"string\") {\n      cleannedValue = isValidId(cleannedValue) ? cleannedValue : null;\n    }\n\n    return {\n      ...result,\n      [key]: cleannedValue\n    };\n  }, globalEnvironmentDefaults);\n};\n\nexport const getDataSourceOrgIds = ({ environments = {} }) => {\n  const orgs = [];\n  Object.keys(environments).forEach(configName => {\n    if (environments[configName].dataSources) {\n      environments[configName].dataSources.forEach(dataSource => {\n        if (dataSource.organizationId) {\n          orgs.push(dataSource.organizationId);\n        }\n      });\n    }\n  });\n\n  return orgs;\n};","import React, { Suspense, lazy } from 'react';\nimport { Spinner, VerticalNavigation, BrandBand } from '@salesforce/design-system-react';\n\nimport {$, baseUrl, isDev} from '../lib/grax-data-lake';\n\nimport { cleanIds, getDataSourceOrgIds } from '../lib/configurationUtils';\n\nimport _ from 'lodash';\n\nconst GRAXCloudConfigurationsDataTable = lazy(() => import('./GRAXCloudConfigurationsDataTable'));\n\nconst ACTIONS = {\n    LOAD_CONFIGURATIONS: 1,\n    SAVE_CONFIGURATIONS: 2\n};\n\nconst GRAXCLOUD_MENU = [\n\t{\n\t\tid: 'grax_cloud',\n\t\tlabel: 'GRAX Cloud',\n\t\titems: [\n\t\t\t//{ id: 'dashboard', label: 'Dashboard' },\n            { id: 'configurations', label: 'Configurations' },\n            //{ id: 'accounts', label: 'Accounts' },\n\t\t\t//{ id: 'users', label: 'Users' },\n\t\t\t//{ id: 'notifications', label: 'Notifications' }\n\t\t],\n\t}\n];\n\nconsole.log('isDev: ', isDev);\n\nexport default class GRAXCloud extends React.Component {\n    static displayName = 'GRAXCloudNavigation';\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            error: null,\n            configurations: {},\n\n            //selectedId: 'dashboard'\n            selectedId: 'configurations'\n        };\n\n        this.actionHandler = this.actionHandler.bind(this);\n    }\n\n    componentDidMount() {\n        this.actionHandler(ACTIONS.LOAD_CONFIGURATIONS);\n    }\n\n    actionHandler(action, params) {\n        if(action === ACTIONS.LOAD_CONFIGURATIONS) {\n            if(!isDev) {\n                $.ajax({\n                    type: 'GET',\n                    //dataType: 'jsonp',\n                    url: baseUrl + '/grax-app/grax-cloud/configurations',\n                    data: {},\n                    success: function(data) {\n                        var configurations = data || {};\n\n                        console.log(data);\n\n                        try {\n                            configurations = $.parseJSON(data);\n                        } catch(e){}\n\n                        this.setState({\n                            configurations: configurations,\n                            isLoading: false\n                        });\n                    }.bind(this),\n                    error: function(xhr, status, err) {\n                        console.error(xhr, status, err);\n\n                        var isNonError = xhr.status === 404 || xhr.status === 200;\n\n                        this.setState({\n                            error: isNonError ? null : err.toString(),\n                            configurations: isNonError ? {} : null,\n                            isLoading: false\n                        });\n                    }.bind(this)\n                });\n            }\n\n            if(isDev) {\n                this.setState({\n                    configurations: {\n                        \"globalEnvironmentDefaults\": {\n                            \"asyncAttachmentProcessorOrganizationIds\": [\n                                \"00D4test0000Z1cUAE\"\n                            ],\n                            \"asyncBulkLoadOrganizationIds\": [\n                                \"00D46test0172yZEAQ\"\n                            ],\n                            \"bulkRestoreDestinationOrganizationId\": \"00D4test0000Z1cUAE\",\n                            \"bulkRestoreSourceOrganizationId\": \"00D3test000LiLXUA0\",\n                            \"syncSalesforceEinsteinOrganizationIds\": [\n                                \"00D46test0172yZEAQ\"\n                            ],\n                            \"syncSalesforceSourceOrganizationIds\": [\n                                \"00D46test0172yZEAQ\"\n                            ],\n                            \"metadataBackupOrganizationIds\": [\n                                \"00D46test0172yZEAQ\"\n                            ],\n                            \"odataOrganizationId\": \"00D47test0172yZEAQ\"\n                        },\n                        \"environments\": {\n                            \"test\": {\n                                \"dataSources\": [\n                                    {\n                                        \"userName\": \"sfdc@example.com\",\n                                        \"password\": \"password\",\n                                        \"token\": \"token\",\n                                        \"url\": \"https://test.salesforce.com/\",\n                                        \"organizationId\": \"00D4test0000Z1cUAE\",\n                                        \"provider\": \"salesforce\",\n                                        \"name\": \"Production Source SFDC\"\n                                    },\n                                    {\n                                        \"userName\": \"sfdc@example.com\",\n                                        \"password\": \"password\",\n                                        \"token\": \"token\",\n                                        \"url\": \"https://login.salesforce.com/\",\n                                        \"organizationId\": \"00D46test0172yZEAQ\",\n                                        \"provider\": \"salesforce\",\n                                        \"name\": \"Production Destination SFDC\"\n                                    }\n                                ],\n                                \"elastic\": [\n                                    {\n                                        \"provider\": \"bonsai\",\n                                        \"name\": \"default\",\n                                        \"url\": \"https://example.com\",\n                                        \"maxbatchsize\": 300\n                                    }\n                                ],\n                                \"storage\": [\n                                    {\n                                        \"provider\": \"aws\",\n                                        \"name\": \"Production Storage\",\n                                        \"accessKey\": \"accessKey\",\n                                        \"secretAccessKey\": \"secretAccessKey\",\n                                        \"bucket\": \"bucket-name\",\n                                        \"region\": \"us-east-2\",\n                                        \"storageOff\": false\n                                    }\n                                ],\n                                \"syncAnalytics\": [\n                                    {\n                                        \"provider\": \"syncanalytics\",\n                                        \"name\": \"Sync Analytics\",\n                                        \"marketingCloudHost\": \"example.mc.host\",\n                                        \"marketingCloudUser\": \"marketingCloudUser\",\n                                        \"marketingCloudPassword\": \"mcpasswd\",\n                                        \"marketingCloudPort\": 22,\n                                        \"syncQueryFile\": \"analytics-query.json\",\n                                        \"syncSalesforceObjects\": \"exampleObject\",\n                                        \"syncBatchSize\": 100\n                                    }\n                                ],\n                                \"metadataBackup\": [\n                                    {\n                                        \"sourceControlProvider\": \"github\",\n                                        \"name\": \"Git Integration\",\n                                        \"sourceControlEnabled\": true,\n                                        \"isEnabled\": true,\n                                        \"gitRepositoryName\": \"testrepo\",\n                                        \"gitRepoAuthorizationToken\": \"testtokenabc123\",\n                                        \"gitUserId\": \"testuser\"\n                                    }\n                                ],\n                                \"bulkProcess\": [\n                                    {\n                                        \"name\": \"test\"\n                                    }\n                                ]\n                            }\n                        }\n                    },\n                    isLoading: false\n                });\n            }\n        }\n\n        if(action === ACTIONS.SAVE_CONFIGURATIONS && isDev) {\n            console.log(params.configurations);\n        }\n\n        if(action === ACTIONS.SAVE_CONFIGURATIONS && !isDev) {\n            $.ajax({\n                type: 'POST',\n                //dataType: 'jsonp',\n                url: baseUrl + '/grax-app/grax-cloud/configurations',\n                contentType: \"application/json; charset=utf-8\",\n                data: JSON.stringify(params.configurations),\n                success: function(data) {\n                    console.log(data);\n\n                    this.setState({\n                        configurations: params.configurations || {}\n                    });\n                }.bind(this),\n                error: function(xhr, status, err) {\n                    console.error(xhr, status, err);\n\n                    this.setState({\n                        error: err.toString()\n                    });\n                }.bind(this)\n            });\n        }\n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return (\n                <Spinner size=\"large\" variant=\"brand\" />\n            );\n        }\n\n        if(this.state.error != null) {\n            return (\n                <span>{this.state.error}</span>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <style>{`\n                    #grax-cloud .slds-card__body .slds-section .slds-section__title,\n                    #grax-cloud .slds-card__body .slds-section .slds-section__title-action {\n                        border-radius: 0;\n                    }\n\n                    #grax-cloud .slds-card__body .slds-section .slds-section__content {\n                        background: #fff;\n                    }\n\n                    #grax-cloud .slds-card__body .slds-section.slds-is-open {\n                        margin: 2rem 0;\n                    }\n\n                    #grax-cloud .slds-card__body .slds-section.slds-is-open .slds-section__title {\n                        border-bottom-left-radius: 0;\n                        border-bottom-right-radius: 0;\n                        background: transparent;\n                    }\n\n                    #grax-cloud .slds-brand-band.dsr-brand-band_lightning-blue:before {\n                        background-image: url(./assets/images/themes/oneSalesforce/banner-brand-default.png), linear-gradient(to top, rgba(175, 197, 222, 0) 0, #1B5F9E)!important;\n                    }\n                `}</style>\n\n                <div className=\"slds-grid\" id=\"grax-cloud\">\n                    <div className=\"slds-col slds-size_1-of-4\" style={{height: '100vh'}}>\n                        <VerticalNavigation\n                            id=\"grax-cloud-navigation\"\n                            categories={GRAXCLOUD_MENU}\n                            selectedId={this.state.selectedId}\n                            onSelect={(event, data) => {\n                                this.setState({ selectedId: data.item.id });\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"slds-col slds-size_3-of-4\">\n                    {/*<div className=\"slds-col\">*/}\n                        {/*<BrandBand\n                            className=\"custom-brand-band-class slds-p-around_medium\"\n                            id=\"brand-band-large\"\n                            size=\"large\"\n                        >*/}\n                        <BrandBand\n                            className=\"custom-brand-band-class slds-p-around_medium\"\n                            id=\"brand-band-lightning-blue\"\n                            theme=\"lightning-blue\"\n                        >\n                            {this.state.selectedId === 'configurations' ? (\n                                <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n                                    <GRAXCloudConfigurationsDataTable globalConfigurations={_.get(this.state, 'configurations.globalEnvironmentDefaults', {})} configurations={_.get(this.state, 'configurations.environments', [])} onChange={(globalEnvironmentDefaults, environments) => {\n                                        var configurations = this.state.configurations;\n\n                                        configurations.globalEnvironmentDefaults = cleanIds({\n                                          globalEnvironmentDefaults,\n                                          dataSourceOrgIds: getDataSourceOrgIds({ environments })\n                                        });\n                                        configurations.environments = environments;\n\n                                        this.actionHandler(ACTIONS.SAVE_CONFIGURATIONS, {\n                                            configurations: configurations\n                                        });\n                                    }} />\n                                </Suspense>\n                            ) : null}\n                        </BrandBand>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}","/* eslint-disable no-useless-escape */\n/* --------------------------------------------------------------------------\n * This file is subject to the terms and conditions defined in\n * file https://github.com/HardingPoint/GRAXForSFDC/blob/master/LICENSE,\n * which is part of this source code package.\n * --------------------------------------------------------------------------\n *          Copyright (c) 2017-2018 Harding Point\n *                  All rights reserved\n * --------------------------------------------------------------------------\n * Support:\tSupport@Grax.io\n * Website:\thttps://grax.io\n * Github:\thttps://github.com/HardingPoint/grax-application\n * License:\thttps://github.com/HardingPoint/grax-application/blob/master/LICENSE\n * --------------------------------------------------------------------------*/\n\nimport $ from \"jquery\";\n\n// export const isDev = window.location.port !== '80';\n\nexport const isDev = false;\n\nconst devBaseUrl = \"https://grax-datalake-demo2.herokuapp.com\";\n\nexport const baseUrl = isDev ? devBaseUrl : \"\";\n\nexport const token = window.__grax__.token;\nexport const _csrf = window.__grax__._csrf;\nexport const orgid = window.__grax__.orgid;\nexport const userid = window.__grax__.userid;\nexport const sessionid = null;\nexport const endpoint = null;\nexport const pageParams = window.__grax__.pageParams || {};\n\nexport function GetParams(params) {\n  if (params === null || params === undefined) params = {};\n\n  if (params.action === null || params.action === undefined || params.action === \"\")\n    params.action = \"load\";\n\n  return \"?\" + $.param(params);\n}\n\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);\n}\n$.ajaxSetup({\n  beforeSend: function(xhr, settings) {\n    xhr.setRequestHeader(\"sfdcorgid\", orgid);\n\n    if (pageParams.authorization != null) {\n      xhr.setRequestHeader(\"Authorization\", pageParams.authorization);\n    } else {\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n    }\n\n    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n      xhr.setRequestHeader(\"X-CSRFToken\", _csrf);\n    }\n\n    xhr.withCredentials = true;\n\n    if (settings.skipFail !== true) {\n      xhr.fail((jqXHR, textStatus, errorThrown) => {\n        console.error(jqXHR);\n\n        if (jqXHR.status !== 404 && errorThrown !== \"Not Found\") {\n          window.showError(jqXHR.statusText + \": \" + jqXHR.responseText);\n        }\n      });\n    }\n  }\n});\n\nexport { $ };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classNames from 'classnames';\n\n// eslint-disable-next-line fp/no-rest-parameters\nconst classNamesWrapper = (...rest) => {\n\tconst string = classNames(...rest);\n\treturn string === '' ? undefined : string;\n};\n\nexport default classNamesWrapper;\n"],"sourceRoot":""}