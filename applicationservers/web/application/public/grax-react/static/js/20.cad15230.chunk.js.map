{"version":3,"sources":["components/GRAXEnvSettingCombobox.jsx"],"names":["GRAXEnvSettingCombobox","props","getSelectionIds","selection","isMultiple","_","compact","map","v","id","length","options","getOptions","setting","multiple","state","inputValue","getSelection","selectedOption","this","defaultValue","variant","console","log","reduce","results","o","indexOf","push","placeholder","key","events","onChange","e","value","setState","onRequestRemoveSelectedOption","data","onSubmit","onSelect","labels","label","getPlaceholder","comboboxFilterAndLimit","getVariant","React","PureComponent"],"mappings":"uPAIqBA,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KA6DRC,gBAAkB,SAAAC,GAChB,OAAK,EAAKC,WAIHC,IAAEC,QAAQH,EAAUI,KAAI,SAAAC,GAAC,OAAIA,EAAEC,OAH7BN,EAAUO,OAAS,EAAIP,EAAU,GAAGM,GAAK,MA7DlD,EAAKE,QAAU,EAAKC,aACpB,EAAKR,aAAe,EAAKH,MAAMY,QAAQC,SACvC,EAAKC,MAAQ,CACXC,WAAY,GACZb,UAAW,EAAKc,eAChBC,eAAgB,MARD,E,0EAajB,OAAwC,MAAjCC,KAAKlB,MAAMY,QAAQD,WACtBO,KAAKlB,MAAMY,QAAQD,aACnBO,KAAKlB,MAAMY,QAAQF,SAAW,K,qCAIlC,GAA+B,MAA3BQ,KAAKlB,MAAMgB,aACb,OAAOZ,IAAEC,QAAQa,KAAKlB,MAAMY,QAAQI,gBAGtC,IAAId,EAAYgB,KAAKlB,MAAMmB,aAE3B,GAAiB,MAAbjB,EACF,MAAO,GAGT,IAAMQ,EAAUQ,KAAKR,QAQrB,MAN2B,mBAAvBQ,KAAKlB,MAAMoB,UACblB,EAAY,CAACA,IAGfmB,QAAQC,IAAI,cAAepB,GAEpBE,IAAEC,QAAQK,EAAQa,QAAO,SAACC,EAASC,GAKxC,OAJiC,IAA7BvB,EAAUwB,QAAQD,EAAEjB,KACtBgB,EAAQG,KAAKF,GAGRD,IACN,O,uCAIH,OAAIN,KAAKlB,MAAMY,QAAQgB,YACdV,KAAKlB,MAAMY,QAAQgB,YAGrB,W,mCAIP,OAAIV,KAAKlB,MAAMY,QAAQQ,QACdF,KAAKlB,MAAMY,QAAQQ,QAGrBF,KAAKf,WAAa,OAAS,mB,+BAW1B,IAAD,OACP,OACE,kBAAC,IAAD,CACE0B,IAAKX,KAAKlB,MAAMQ,GAChBA,GAAIU,KAAKlB,MAAMQ,GACfsB,OAAQ,CACNC,SAAU,SAACC,EAAD,GAAmB,IAAbC,EAAY,EAAZA,MACd,EAAKC,SAAS,CAAEnB,WAAYkB,KAE9BE,8BAA+B,SAACH,EAAGI,GACjC,EAAKF,SAAS,CACZnB,WAAY,GACZb,UAAWkC,EAAKlC,YAGlB,EAAKF,MAAM+B,SAAS,EAAK9B,gBAAgBmC,EAAKlC,WAAYkC,EAAKlC,YAEjEmC,SAAU,aACVC,SAAU,SAACN,EAAGI,GACZ,EAAKF,SAAS,CACZnB,WAAY,GACZb,UAAWkC,EAAKlC,YAGlB,EAAKF,MAAM+B,SAAS,EAAK9B,gBAAgBmC,EAAKlC,WAAYkC,EAAKlC,aAGnEqC,OAAQ,CACNC,MAAOtB,KAAKlB,MAAMwC,MAClBZ,YAAaV,KAAKuB,kBAEpB/B,QAASgC,YAAuB,CAC9B3B,WAAYG,KAAKJ,MAAMC,WACvBL,QAASQ,KAAKR,QACdR,UAAWgB,KAAKJ,MAAMZ,YAExBA,UAAWgB,KAAKJ,MAAMZ,UACtB+B,MAAOf,KAAKJ,MAAMC,WAClBK,QAASF,KAAKyB,aACd9B,SAAUK,KAAKf,iB,GA9G6ByC,IAAMC","file":"static/js/20.cad15230.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { Combobox, comboboxFilterAndLimit } from \"@salesforce/design-system-react\";\n\nexport default class GRAXEnvSettingCombobox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.options = this.getOptions();\n    this.isMultiple = !!this.props.setting.multiple;\n    this.state = {\n      inputValue: \"\",\n      selection: this.getSelection(),\n      selectedOption: null\n    };\n  }\n\n  getOptions() {\n    return this.props.setting.getOptions != null\n      ? this.props.setting.getOptions()\n      : this.props.setting.options || [];\n  }\n\n  getSelection() {\n    if (this.props.getSelection != null) {\n      return _.compact(this.props.setting.getSelection());\n    }\n\n    let selection = this.props.defaultValue;\n\n    if (selection == null) {\n      return [];\n    }\n\n    const options = this.options;\n\n    if (this.props.variant === \"inline-listbox\") {\n      selection = [selection];\n    }\n\n    console.log(\"selection: \", selection);\n\n    return _.compact(options.reduce((results, o) => {\n      if (selection.indexOf(o.id) !== -1) {\n        results.push(o);\n      }\n\n      return results;\n    }, []));\n  }\n\n  getPlaceholder() {\n    if (this.props.setting.placeholder) {\n      return this.props.setting.placeholder;\n    }\n\n    return \"Search\";\n  }\n\n  getVariant() {\n    if (this.props.setting.variant) {\n      return this.props.setting.variant;\n    }\n\n    return this.isMultiple ? \"base\" : \"inline-listbox\";\n  }\n\n  getSelectionIds = selection => {\n    if (!this.isMultiple) {\n      return selection.length > 0 ? selection[0].id : null;\n    }\n\n    return _.compact(selection.map(v => v.id));\n  };\n\n  render() {\n    return (\n      <Combobox\n        key={this.props.id}\n        id={this.props.id}\n        events={{\n          onChange: (e, { value }) => {\n            this.setState({ inputValue: value });\n          },\n          onRequestRemoveSelectedOption: (e, data) => {\n            this.setState({\n              inputValue: \"\",\n              selection: data.selection\n            });\n\n            this.props.onChange(this.getSelectionIds(data.selection), data.selection);\n          },\n          onSubmit: () => {},\n          onSelect: (e, data) => {\n            this.setState({\n              inputValue: \"\",\n              selection: data.selection\n            });\n\n            this.props.onChange(this.getSelectionIds(data.selection), data.selection);\n          }\n        }}\n        labels={{\n          label: this.props.label,\n          placeholder: this.getPlaceholder()\n        }}\n        options={comboboxFilterAndLimit({\n          inputValue: this.state.inputValue,\n          options: this.options,\n          selection: this.state.selection\n        })}\n        selection={this.state.selection}\n        value={this.state.inputValue}\n        variant={this.getVariant()}\n        multiple={this.isMultiple}\n      />\n    );\n  }\n}\n"],"sourceRoot":""}