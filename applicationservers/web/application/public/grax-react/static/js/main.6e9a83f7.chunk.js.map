{"version":3,"sources":["lib/utils.js","consts/addresses.jsx","consts/dedup/cloudMenu.js","contexts/toastContext.js","components/cloud/index.jsx","components/cloud/dedup/ScenarioPageHeaderActions.js","components/cloud/dedup/ScenariosRow.js","consts/dedup/scenarioFetchEnums.js","lib/api.js","reducers/fetchReducer.js","consts/fetchActions.js","hooks/useFetch.js","hooks/useScenarioFetch.js","hooks/useScenarios.jsx","components/cloud/dedup/Scenarios.js","consts/dedup/componentNames.jsx","hooks/useFieldsFetch.js","reducers/scenarioReducer.js","consts/dedup/scenarioActions.js","hooks/useObjectsFetch.js","hooks/useScenario.js","components/cloud/dedup/ScenarioCardActions.js","components/cloud/dedup/ScenarioGeneral.jsx","components/commons/GRAXCombobox.js","contexts/scenarioContext.js","components/cloud/dedup/MergeActions.js","components/cloud/dedup/ScenarioHeader.jsx","components/commons/Buttons.jsx","components/commons/withRepeating.js","components/cloud/dedup/FieldsAndOperators.js","hooks/useFieldsAndOperators.js","components/cloud/dedup/MatchCriterias.js","components/cloud/dedup/FilterCriterias.js","components/cloud/dedup/metadata/TreeModalBranchItem.jsx","components/cloud/dedup/metadata/TreeModalBranch.jsx","components/cloud/dedup/metadata/TreeModal.jsx","components/cloud/dedup/ScenarioCriterias.jsx","components/cloud/dedup/Scenario.js","App.js","components/cloud/dedup/duplicates/duplicatesHeader.js","components/cloud/dedup/duplicates/duplicateRow.js","hooks/useDuplicates.js","components/cloud/dedup/duplicates/DuplicateKey.js","components/cloud/dedup/duplicates/duplicateRowVertical.js","components/cloud/dedup/duplicates/duplicatesVertical.js","components/cloud/dedup/duplicates/Duplicates.js","consts/routes.js","components/cloud/configurations/EmptyLandingPage.jsx","serviceWorker.js","index.js","lib/grax-data-lake.js","components/GRAXFieldsCombobox.jsx"],"names":["availableLocales","moment","locales","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","isEmbeded","window","parent","isAppleDevice","navigator","platform","match","SF_DATETIME_REGEXP","DATETIME_FORMAT","DATE_FORMAT","userLocaleParam","location","search","tzParam","browserLocale","userLanguage","language","userLocale","join","TZ","tz","guess","console","log","locale","toLowerCase","setDefault","comboboxFilterAndLimit","inputValue","limit","options","inputValueRegExp","selection","RegExp","_","escapeRegExp","filter","option","type","label","id","splice","mutateRow","row","value","Object","assign","getUTCTimeRangeFromUserDate","date","timezone","inputFormat","outputFormat","startOf","utc","format","endOf","CONFIGURATION_PATH","DEDUP_PATH","SCENARIO_PROXY_ADDRESS","CLOUD_MENU","items","route","ToastContext","createContext","ToastContextProvider","children","useState","variant","isOpen","toast","setToast","openToast","useCallback","heading","closeToast","useMemo","Provider","Cloud","routes","exact","history","path","useHistory","selectedId","setSelectedId","className","style","height","categories","onSelect","_event","data","push","item","theme","map","index","key","render","props","component","ScenarioActions","onClick","Fragment","ScenariosRowActions","onRowAction","job_status","align","iconCategory","iconName","iconVariant","selected","buttonClassName","ScenariosViewDuplicates","href","e","preventDefault","viewDuplicates","DuplicateCounts","duplicateCounts","groups_count","records_affected","ScenarioRowLink","viewScenario","ScenarioRowFields","fields","numberOfFields","fieldNames","slice","docField","IsActiveScenario","displayName","DataTableCell","ScenariosColumns","property","instance","Axios","create","headers","authorizationtoken","licensetoken","authorization","params","sfdcorgid","interceptors","request","use","config","fetchReducer","state","action","payload","Error","useFetch","initialState","initialConfig","setConfig","useReducer","isLoading","error","status","dispatch","useEffect","undefined","url","a","async","response","useCloneScenario","scenarioId","method","useDeleteScenario","useRunDeduplication","useScenarios","useAllScenariosFetch","allScenarios","fetchAllScenarios","isDeleted","deleteScenario","isRunning","runDeduplication","isCloned","cloneScenario","useContext","createScenario","Scenarios","title","onRenderActions","bind","trail","flexGrow","noRowHover","useFieldsFetch","docPrefixedFields","setdocPrefixedFields","setObjectIndex","objectFields","fieldName","startsWith","fieldDataType","dataType","objectIndex","intialState","isEditMode","formState","filterCriteria","matchCriteria","description","object_name","is_active","scenario_action","results_table_fields","editMode","scenarioReducer","newState","resultsTableFields","field","field_name","operator","useObjectsFetch","sObjects","setSobjects","_sObjects","sObject","useScenario","useFetchScenario","fetchedScenario","fetchScenario","useCreateScenario","isNewScenario","useUpdateScenario","isUpdated","updateScenario","fetchFields","useParams","Number","scenario_id","isInteger","find","obj","onSubmit","createMode","scenarioCardActionPropTypes","PropTypes","bool","isRequired","onDelete","func","onDuplicate","DeleteScenarioPromp","onClose","disableClose","footer","onRequestClose","prompt","size","ScenarioCardActions","onRun","onViewDuplicates","setIsOpen","deleteButton","utilityButton","buttonVariant","checkmark","iconSize","actions","propType","propTypes","PropType","string","required","isActive","onChangeName","onChangeDescription","onChangeNameIsActive","ScenarioGeneral","memo","onChangeIsActive","useRef","current","nonCollapsible","onChange","target","checked","prototype","GRAXCombobox","setInputValue","setSelection","onChangeHandler","event","dataSelection","events","onRequestRemoveSelectedOption","menuItemVisibleLength","classNameMenu","DedupStoreContext","useScenarioStore","DedupStoreContextProvider","operators","stopwords","synonyms","metadata","store","scenarioActions","array","scenarioAction","MergeActions","scenario_actions","b","values","display_value","code","extractMergeActions","labels","placeholder","ScenarioHeader","RepeatingRemoveRowButton","onRemove","AddRowButton","iconPosition","withRepeating","WrappedComponent","rows","hideFooter","addRow","concat","editRow","r","repeatedWrapped","removeRow","React","isValidElement","cloneElement","renderFooter","arrayOf","shape","onChangeField","onChangeOperator","FieldsAndOperators","dropdownLabel","setDropdownLabel","setDataType","fieldOperators","setFieldOperators","applicableOperators","applicable_data_types","includes","useOperators","fieldLabel","handleFieldName","stopWord","cleanse","number","MatchCriteriaRow","setMetadata","disabledRemoveButton","rowsNum","lineHeight","matchCriteriaId","stopwords_list_id","synonyms_id","class","disabled","any","FilterCriteriaRow","setValue","onBlur","proptype","setIsEditMode","iconClassName","role","position","top","left","for","TreeModalBranch","criteria","setRows","width","tabindex","aria-label","aria-sort","scope","TreeModalBranchItem","HEADINGS","TreeModal","stopword","onChangeMatchCriteria","onChangeFilterCriteria","ScenarioCriterias","objectName","onChangeObject","onChangeFields","setCriteria","MatchCriterias","FilterCriterias","Scenario","duplicateScenario","headerActions","appName","DuplicatesHeader","tableFields","DuplicateRow","onViewRecord","isChecked","setIsChecked","aria-level","getColumn","iconPath","useDuplicates","setTableFields","tableFieldsExpanded","setTableFieldsExpanded","indexName","setIndexName","results","useFetchDuplicates","duplicates","fetchDuplicates","index_name","DuplicateKey","keyName","colspan","DuplicateRowVertical","record","colSpan","DuplicatesExpanded","hasNoHeader","aria-multiselectable","Duplicates","selectedRecord","setSelectedRecord","records","subRoutes","GRAXRestoreTabs","lazy","GRAXLogging","GRAXHistory","GRAXDelete","GRAXCloud","GRAXAudit","GRAXSummaryCharts","__grax__","appname","pathname","pop","helpLinkbyAppName","summarycharts","delete","timemachine","logging","GRAXApp","script","createElement","src","onload","setState","body","appendChild","this","aria-hidden","right","rel","fallback","columns","subtype","Component","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister","isDev","baseUrl","token","_csrf","orgid","pageParams","userid","GetParams","$","param","ajaxSetup","beforeSend","xhr","settings","setRequestHeader","test","crossDomain","withCredentials","skipFail","fail","jqXHR","textStatus","errorThrown","showError","statusText","responseText","selectedDataIndex","cookieSubfix","GRAXFieldsCombobox","isLoaded","getMappedFieldList","selectedFieldList","onLoad","JSON","stringify","_isMounted","dataIndex","ajax","success","val","selectedFieldsCookie","selectedFields","parse","sortBy","reduce","_selection","onLoadHandler","err","toString","multiple"],"mappings":"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","file":"static/js/main.6e9a83f7.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\nimport moment from 'moment';\nimport 'moment-timezone';\nimport 'moment/min/locales';\nimport _ from 'lodash';\n\nconst availableLocales = moment.locales();\n\nexport function setCookie(cname, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    var expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n};\n\nexport function getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n};\n\nvar isEmbeded = window !== window.parent;\nvar isAppleDevice = navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) ? true : false;\n\nexport {isEmbeded, isAppleDevice};\n\n/*\n2018-12-10\n1996-12-10\n2018-12-10 12:40:00\n1996-12-10 12:57:00\n1996-12-10 12:57:00-2340\n1996-12-10 12:57:00+2340\n2018-05-01T18:08:42.000+0000\n2018-12-10T12:50:00Z\n1996-12-10T12:00:00Z\n2018-12-10T12:50:35.000Z\n1996-12-10T12:00:00.000Z\n2010-12-31T23:59:59.999Z\n2002-10-10T12:00:00+05:00\n2002-10-10T07:00:00Z\n2002-10-10T00:00:00+05:00\n2002-10-09T19:00:00Z\n*/\nvar SF_DATETIME_REGEXP = /^((?:(?:19|20)\\d{2})-(?:10|11|12|0?\\d)-(?:30|31|(?:0|1|2)\\d))((?:(?:T|\\s)(?:(?:0|1|2)\\d)(?:\\:[0-5]\\d)(?::[0-5]\\d)?((?:(?:\\.\\d{3})?)?Z?(?:[+-](?:0|1|2)\\d\\:?[0-5]\\d)?))?)$/;\n\nvar DATETIME_FORMAT = 'L LT';\nvar DATE_FORMAT = 'L';\n\nexport {SF_DATETIME_REGEXP, DATETIME_FORMAT, DATE_FORMAT};\n\nvar userLocaleParam = window.location.search.match(/[\\?&]locale\\=([^&]+)/);\nvar tzParam = window.location.search.match(/[\\?&]tz\\=([^&]+)/);\n\nexport const browserLocale = window.navigator.userLanguage || window.navigator.language;\n\nexport const userLocale = userLocaleParam ? decodeURIComponent(userLocaleParam[1]).split('_').join('-') : browserLocale;\nexport const TZ = tzParam ? decodeURIComponent(tzParam[1]) : moment.tz.guess();\n\n\nconsole.log('Available localizations: ' + availableLocales.join(', '));\n\nlet locale = userLocale.toLowerCase();\n\nif(availableLocales.indexOf(locale) === -1 && userLocale.indexOf('-') !== -1) {\n    locale = locale.split('-')[0];\n}\n\nif(availableLocales.indexOf(locale) !== -1) {\n    moment.locale(locale);\n} else {\n    moment.locale('en'); // default localization\n}\n\nif(TZ) {\n    moment.tz.setDefault(TZ);\n}\n\nconsole.log('User Locale: ' + userLocale);\nconsole.log('Available Locale: ' + moment.locale());\nconsole.log('User TimeZone: ' + TZ);\n\nexport {moment}; // Export moment with additions\n\n/*\noptions={comboboxFilterAndLimit({\n    inputValue: this.state.inputValue,\n    limit: 1000,\n    options: this.state.options,\n    selection: this.state.selection\n})}\n*/\nconst comboboxFilterAndLimit = ({ inputValue, limit = 10, options, selection }) => {\n    const inputValueRegExp = new RegExp(_.escapeRegExp(inputValue), 'ig');\n\n    return _.filter(options, (option, i) => {\n        return (!inputValue || option.type === 'separator'\n                            || option.label.match(inputValueRegExp)\n                            || option.id.match(inputValueRegExp))\n                            /*&& !selection.some((sel) => sel && _.isEqual(sel, option))*/;\n    }).splice(0, limit);\n};\n\nexport const mutateRow = (row, name, value) => {\n    return Object.assign({}, row, {\n      [name]: value\n    });\n  };\n\nexport {comboboxFilterAndLimit};\n\nexport const getUTCTimeRangeFromUserDate = ({\n  date,\n  timezone = TZ,\n  inputFormat = \"YYYY-MM-DD\",\n  outputFormat = \"YYYY-MM-DDTHH:mm:ss.SSS\"\n}) => {\n  return [\n    moment.tz(date, inputFormat, timezone).startOf(\"day\").utc().format(outputFormat),\n    moment.tz(date, inputFormat, timezone).endOf(\"day\").utc().format(outputFormat)\n  ];\n};\n","//ROUTE PATHS\nexport const CLIENT_CLOUD_PATH = \"/grax-app/client/cloud\";\nexport const CONFIGURATION_PATH = `${CLIENT_CLOUD_PATH}/configurations`;\nexport const DEDUP_PATH = `${CLIENT_CLOUD_PATH}/dedup`;\n\n//END POINT ADDRESSES\nexport const DEDUP_PROXY_ADDRESS = \"/graxproxy/api/dedup\";\nexport const GRAX_DATA_LAKE_PROXY_ADDRESS = \"/grax-app/grax-data-lake\";\nexport const SCENARIO_PROXY_ADDRESS = `${DEDUP_PROXY_ADDRESS}/scenarios`;\n\n","import { DEDUP_PATH, CONFIGURATION_PATH } from \"../addresses\";\n\nconst CLOUD_MENU = [\n\t{\n\t\tid: 'grax_cloud',\n\t\tlabel: 'GRAX Cloud',\n\t\titems: [\n            { route: `${CONFIGURATION_PATH}`, id: 'configurations', label: 'Configurations' },\n            { route: `${DEDUP_PATH}/scenarios`, id: 'dedup', label: 'Dedup'}\n\t\t],\n\t}\n];\n\nexport default CLOUD_MENU","import React, { useState, createContext, useCallback, useMemo } from \"react\";\n\nexport const ToastContext = createContext();\n\nexport const ToastContextProvider = ({ children }) => {\n  const [toast, setToast] = useState({\n    variant: \"success\",\n    isOpen: false\n  });\n\n  const openToast = useCallback(\n    ({ heading }) =>\n      setToast(toast => ({\n        ...toast,\n        isOpen: true,\n        heading: [heading]\n      })),\n    []\n  );\n\n  const closeToast = useCallback(\n    () =>\n      setToast(toast => ({\n        ...toast,\n        isOpen: false\n      })),\n    []\n  );\n\n  const value = useMemo(() => toast, [toast.isOpen]);\n\n  return (\n    <ToastContext.Provider\n      value={{\n        ...value,\n        openToast,\n        closeToast\n      }}\n    >\n      {children}\n    </ToastContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport { VerticalNavigation, BrandBand } from \"@salesforce/design-system-react\";\n\nimport CLOUD_MENU from \"../../consts/dedup/cloudMenu\";\nimport { ToastContextProvider } from \"../../contexts/toastContext\";\nimport GRAXToast from \"../commons/GRAXToast\";\n\nconst Cloud = ({ routes, exact, path, isEmbeded, ...props }) => {\n  const history = useHistory();\n  const [selectedId, setSelectedId] = useState(\"configurations\");\n\n  const onSelect = ({ route, id }) => {\n    history.push(route);\n    setSelectedId(id);\n  };\n\n  return (\n    <div className=\"slds-grid\" id=\"grax-cloud\">\n      <div className=\"slds-col slds-size_1-of-4\" style={{ height: \"100vh\" }}>\n        <VerticalNavigation\n          id=\"grax-cloud-navigation\"\n          categories={CLOUD_MENU}\n          selectedId={selectedId}\n          onSelect={(_event, data) => onSelect(data.item)}\n        />\n      </div>\n      <div className=\"slds-col slds-size_3-of-4\">\n        <ToastContextProvider>\n          <BrandBand\n            className=\"custom-brand-band-class slds-p-around_medium\"\n            id=\"brand-band-lightning-blue\"\n            theme=\"lightning-blue\"\n          >\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={`cloud-sub-route-${index}`}\n                  path={route.path}\n                  exact={exact}\n                  render={props => <route.component {...props} />}\n                />\n              ))}\n            </Switch>\n          </BrandBand>\n        </ToastContextProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default Cloud;\n","import React from 'react'\n\nimport {\n    PageHeaderControl,\n    ButtonGroup,\n    Button\n} from '@salesforce/design-system-react'\n\nconst ScenarioActions = (onClick) => (\n    <React.Fragment>\n        <PageHeaderControl variant=\"list\">\n            <Button label=\"Create Scenario\" onClick={onClick} />\n        </PageHeaderControl>\n    </React.Fragment>\n)\n\nconst ScenarioControls = () => (\n    <PageHeaderControl>\n        <ButtonGroup>\n            <Button\n                iconName=\"edit\"\n                iconCategory=\"utility\"\n                variant=\"icon\"\n                iconVariant=\"border-filled\"\n            />\n            <Button\n                iconName=\"delete\"\n                iconCategory=\"utility\"\n                variant=\"icon\"\n                iconVariant=\"border-filled\"\n            />\n        </ButtonGroup>\n    </PageHeaderControl>\n)\n\n\nconst NewScenarioControls = () => (\n    <PageHeaderControl>\n        <Button\n            variant=\"brand\"\n            label=\"Save\"\n        />\n    </PageHeaderControl>\n)\n\nexport {\n    ScenarioActions,\n    ScenarioControls,\n    NewScenarioControls\n}","import React from \"react\";\n\nimport { DataTableColumn, DataTableCell, Dropdown } from \"@salesforce/design-system-react\";\n\nimport {\n  SCENARIO_FETCH_ENUMS_RUN,\n  SCENARIO_FETCH_ENUMS_DUPLICATE,\n  SCENARIO_FETCH_ENUMS_UPDATE,\n  SCENARIO_FETCH_ENUMS_DELETE\n} from \"../../../consts/dedup/scenarioFetchEnums\";\n\nconst ScenariosRowActions = ({ children, onRowAction, ...props }) => {\n  const options = [];\n  if (props.item.job_status !== \"SUCCESS\") {\n    options.push({\n      value: SCENARIO_FETCH_ENUMS_RUN,\n      label: \"Run\"\n    });\n  }\n\n  options.push(\n    { value: SCENARIO_FETCH_ENUMS_DUPLICATE, label: \"Clone\" },\n    { value: SCENARIO_FETCH_ENUMS_UPDATE, label: \"Edit\" },\n    { value: SCENARIO_FETCH_ENUMS_DELETE, label: \"Delete\" }\n  );\n\n  return (\n    <DataTableCell {...props}>\n      <Dropdown\n        align={\"right\"}\n        iconCategory=\"utility\"\n        iconName=\"down\"\n        iconVariant=\"border-filled\"\n        onSelect={selected => onRowAction(props.item.id, selected)}\n        buttonClassName=\"slds-button_icon-small\"\n        options={options}\n      />\n    </DataTableCell>\n  );\n};\n\nconst ScenariosViewDuplicates = ({ children, ...props }) => (\n  <DataTableCell {...props}>\n    {props.item.job_status === \"SUCCESS\" ? (\n      <a href={e => e.preventDefault()} onClick={() => props.viewDuplicates(props.item.id)}>\n        View Duplicates\n      </a>\n    ) : (\n      \"View Duplicates\"\n    )}\n  </DataTableCell>\n);\n\nconst DuplicateCounts = ({ children, ...props }) => {\n  let duplicateCounts = \"\";\n  if (props.item.groups_count !== null && props.item.records_affected !== null)\n    duplicateCounts = `${props.item.groups_count} of ${props.item.records_affected}`;\n  return <DataTableCell {...props}>{duplicateCounts}</DataTableCell>;\n};\n\nconst ScenarioRowLink = ({ children, ...props }) => (\n  <DataTableCell {...props}>\n    <a href={e => e.preventDefault()} onClick={() => props.viewScenario(props.item.id)}>\n      {children}\n    </a>\n  </DataTableCell>\n);\n\nconst ScenarioRowFields = ({ children, ...props }) => {\n  let fields = props.item.fields;\n  const numberOfFields = fields.length;\n  let fieldNames = \"\";\n  const fieldLimit = 2;\n\n  if (numberOfFields > 0) {\n    fieldNames = fields\n      .slice(0, fieldLimit)\n      .map(docField => docField.split(\".\")[1])\n      .join(\", \");\n\n    if (numberOfFields > 2) {\n      fieldNames += ` +${numberOfFields - fieldLimit}`;\n    }\n  }\n\n  return <DataTableCell>{fieldNames}</DataTableCell>;\n};\n\nconst IsActiveScenario = ({ children, ...props }) => (\n  <DataTableCell {...props}>{children == true ? \"Yes\" : \"No\"}</DataTableCell>\n);\n\nScenarioRowLink.displayName = DataTableCell.displayName;\nDuplicateCounts.displayName = DataTableCell.displayName;\nScenariosRowActions.displayName = DataTableCell.displayName;\nScenariosViewDuplicates.displayName = DataTableCell.displayName;\nScenarioRowFields.displayName = DataTableCell.displayName;\nIsActiveScenario.displayName = DataTableCell.displayName;\n\nconst ScenariosColumns = [\n  <DataTableColumn key=\"scenario-name\" property=\"name\" label=\"Name\">\n    <ScenarioRowLink />\n  </DataTableColumn>,\n  <DataTableColumn key=\"object-name\" property=\"object_name\" label=\"Object Name\" />,\n  <DataTableColumn key=\"fields\" property=\"fields\" label=\"Fields\">\n    <ScenarioRowFields />\n  </DataTableColumn>,\n  <DataTableColumn key=\"merge-actions\" property=\"scenario_action\" label=\"Merge Action\" />,\n  <DataTableColumn key=\"fields\" property=\"is_active\" label=\"Is Active\">\n    <IsActiveScenario />\n  </DataTableColumn>,\n  <DataTableColumn key=\"duplicate-counts\" label=\"Duplicate Counts\">\n    <DuplicateCounts />\n  </DataTableColumn>,\n  <DataTableColumn key=\"view-results\" property=\"job_status\">\n    <ScenariosViewDuplicates />\n  </DataTableColumn>,\n  <DataTableColumn key=\"row-actions\" property=\"job_status\" label=\"\">\n    <ScenariosRowActions />\n  </DataTableColumn>\n];\n\nexport { ScenariosColumns };\n","export const SCENARIO_FETCH_ENUMS_RUN = 1;\nexport const SCENARIO_FETCH_ENUMS_DUPLICATE = 2;\nexport const SCENARIO_FETCH_ENUMS_UPDATE = 3;\nexport const SCENARIO_FETCH_ENUMS_DELETE = 4;\nexport const SCENARIO_FETCH_ENUMS_RESULTS = 5;\n\n","import Axios from \"axios\";\n\n//TODO: Obtains auth criterias from .env files\n// TODO: Remove proxy from package.json for production build\n// Rav Heruko app: http://grax-dev-ravitatiko.herokuapp.com,\n// Local Server: http://localhost:5000\n\nconst defaultOptions = {\n  //baseURL: \"http://localhost:3000/\",\n\n  headers: {\n    \"x-api-key\": \"NdWcGdVWYM50L8kgeN58x4KRigO4C3EM2x64Y9ni\",\n    authorizationtoken: \"be16d9a4626a37f718b7e703b6d96e66339929979f981e27b93aaf142f198bd1\",\n    \"content-type\": \"application/json\",\n    licensetoken:\n      \"U2FsdGVkX1/FGHjMNBbmHsnxnniNJBD3Vjhr6p6o/0JKQFg2zgZeywTxMOMCfDfjVKCgTycX+70VDTDOC26pjvTVrDDqwat2ejGHwNtCSUU=\",\n    authorization:\n      \"Basic TmRXY0dkVldZTTUwTDhrZ2VONTh4NEtSaWdPNEMzRU0yeDY0WTluaTpiZTE2ZDlhNDYyNmEzN2Y3MThiN2U3MDNiNmQ5NmU2NjMzOTkyOTk3OWY5ODFlMjdiOTNhYWYxNDJmMTk4YmQx\",\n    \"cache-control\": \"no-cache\",\n    \"postman-token\": \"43a79bfa-39b6-000a-1e6c-1d695208a8f1\"\n  },\n\n  // Rav's heroku app credential and API licenses\n  /*\n  headers: {\n    \"x-api-key\": \"n3ohoPxYOE1lwC9MNlCsv22CHmJlngCG4eJJoqUw\",\n    authorizationtoken: \"b46072d5a3a7071b4cbf91f680804b8afc8fed04e209f0c655756cf26e452be3\",\n    \"content-type\": \"application/json\",\n    licensetoken:\n      \"U2FsdGVkX1/SniLKqWipdDuMlwvIVaahqtilR7rCnozbZrknlWHev48cXCcZjKX3Y4Ns0QLyXEAGy38qBrrjrE31YRWtSeVcNkv42onAkYo=\",\n    authorization:\n      \"Basic bjNvaG9QeFlPRTFsd0M5TU5sQ3N2MjJDSG1KbG5nQ0c0ZUpKb3FVdzpiNDYwNzJkNWEzYTcwNzFiNGNiZjkxZjY4MDgwNGI4YWZjOGZlZDA0ZTIwOWYwYzY1NTc1NmNmMjZlNDUyYmUz\",\n    \"cache-control\": \"no-cache\",\n    \"postman-token\": \"ddf63027-eee4-cb31-eb04-448268cf61e7\"\n  },\n    */\n  params: {\n    sfdcorgid: \"\"\n  }\n};\n\nconst instance = Axios.create(defaultOptions);\n\ninstance.interceptors.request.use(config => {\n  return config;\n});\n\nexport default instance;\n","import {\n    FETCH_SET_DATA,\n    FETCH_IS_LOADING,\n    FETCH_THROW_ERROR,\n    FETCH_SET_STATUS\n} from '../consts/fetchActions'\n\nconst fetchReducer = (state, action) => {\n    switch (action.type) {\n        case FETCH_SET_DATA:\n        case FETCH_IS_LOADING:\n        case FETCH_THROW_ERROR:\n        case FETCH_SET_STATUS: {\n            const { payload } = action;\n            return { ...state, ...payload }\n        }\n        default:\n            throw new Error();\n    }\n}\n\nexport default fetchReducer","export const FETCH_IS_LOADING = \"FETCH_IS_LOADING\";\nexport const FETCH_THROW_ERROR = \"FETCH_THROW_ERROR\";\nexport const FETCH_SET_DATA = \"FETCH_SET_DATA\";\nexport const FETCH_SET_STATUS = \"FETCH_SET_STATUS\";","import { useState, useReducer, useEffect } from \"react\";\n\nimport {\n  FETCH_SET_DATA,\n  FETCH_IS_LOADING,\n  FETCH_THROW_ERROR,\n  FETCH_SET_STATUS\n} from \"../consts/fetchActions\";\n\nimport Axios from \"../lib/api\";\nimport fetchReducer from \"../reducers/fetchReducer\";\n/* TODO: Improve API request hook  */\nconst useFetch = ({ ...initialConfig }, initialState = {}) => {\n  const [config, setConfig] = useState(initialConfig);\n  const [state, dispatch] = useReducer(fetchReducer, {\n    data: null,\n    isLoading: null,\n    error: null,\n    status: null,\n    ...initialState\n  });\n\n  useEffect(() => {\n    if (config.url === undefined) return;\n    dispatch({ type: FETCH_IS_LOADING, payload: { isLoading: true } });\n    (async () => {\n      try {\n        const response = await Axios(config);\n        dispatch({ type: FETCH_SET_DATA, payload: { data: response.data } });\n        dispatch({ type: FETCH_SET_STATUS, payload: { status: response.status } });\n      } catch (error) {\n        dispatch({ type: FETCH_THROW_ERROR, payload: { error } });\n        if (error.response !== undefined) {\n          dispatch({ type: FETCH_SET_STATUS, payload: { status: error.response.status } });\n        }\n      }\n    })();\n    dispatch({ type: FETCH_IS_LOADING, payload: { isLoading: false } });\n  }, [config]);\n\n  return [state, setConfig];\n};\n\nexport default useFetch;\n","import { SCENARIO_PROXY_ADDRESS } from \"../consts/addresses\";\nimport useFetch from \"./useFetch\";\n// TODO: retrieves sfdc org from envirotment({ sfdcorgid: \"\" })\nexport const useAllScenariosFetch = () => {\n  const [state, setConfig] = useFetch(null, { data: { data: [] } });\n  const getScenarios = () =>\n    setConfig({ url: SCENARIO_PROXY_ADDRESS, params: { sfdcorgid: \"\" } });\n  return [state, getScenarios];\n};\n\nexport const useFetchScenario = () => {\n  const [state, setConfig] = useFetch();\n  const getScenario = scenarioId => {\n    //TODO: set scenario id to number\n    // if (typeof scenarioId === \"number\")\n    setConfig({\n      url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}`,\n      //TODO: retrieve sfdcorgid from .env\n      params: { sfdcorgid: \"\" }\n    });\n  };\n  return [state, getScenario];\n};\n\nexport const useCreateScenario = () => {\n  const [state, setConfig] = useFetch();\n  const createScenario = payload =>\n    setConfig({ url: SCENARIO_PROXY_ADDRESS, method: \"POST\", data: payload });\n  return [state, createScenario];\n};\n\nexport const useUpdateScenario = () => {\n  const [state, setConfig] = useFetch();\n  const updateScenario = (scenarioId, payload) => {\n    if (typeof scenarioId === \"number\")\n      setConfig({\n        url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}`,\n        method: \"PATCH\",\n        data: payload,\n        params: { sfdcorgid: \"\" }\n      });\n  };\n  return [state, updateScenario];\n};\n\nexport const useCloneScenario = () => {\n  const [state, setConfig] = useFetch();\n  const cloneScenario = scenarioId =>\n    setConfig({ url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}`, method: \"POST\" });\n  return [state, cloneScenario];\n};\n\nexport const useDeleteScenario = () => {\n  const [state, setConfig] = useFetch();\n  const deleteScenario = scenarioId =>\n    setConfig({\n      url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}`,\n      method: \"DELETE\",\n      params: { sfdcorgid: \"\" }\n    });\n  return [state, deleteScenario];\n};\n\n//FIXME: Change name to a more meaningfull one. Conflict with get duplicates\nexport const useRunDeduplication = () => {\n  const [state, setConfig] = useFetch(null, { data: { data: [] } });\n  const runDeduplication = scenarioId =>\n    setConfig({\n      url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}/run`,\n      params: { sfdcorgid: \"\" },\n      method: \"POST\"\n    });\n  return [state, runDeduplication];\n};\n\nexport const useFetchDuplicates = () => {\n  const [state, setConfig] = useFetch(null, { data: { data: { results: [] } } });\n  const fetchDuplicates = scenarioId =>\n    setConfig({\n      url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}/results`,\n      params: { sfdcorgid: \"\" }\n    });\n  return [state, fetchDuplicates];\n};\n\nexport const useGetDuplicates = () => {\n  const [state, setConfig] = useFetch();\n  const runDeduplication = scenarioId =>\n    //FIXME: use proper sfdcorgid\n    setConfig({\n      url: `${SCENARIO_PROXY_ADDRESS}/${scenarioId}/results?sfdcorgid=\"`,\n      method: \"POST\"\n    });\n  return [state, runDeduplication];\n};\n","import { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  SCENARIO_FETCH_ENUMS_RUN,\n  SCENARIO_FETCH_ENUMS_DUPLICATE,\n  SCENARIO_FETCH_ENUMS_UPDATE,\n  SCENARIO_FETCH_ENUMS_DELETE,\n  SCENARIO_FETCH_ENUMS_RESULTS\n} from \"../consts/dedup/scenarioFetchEnums\";\nimport {\n  useAllScenariosFetch,\n  useDeleteScenario,\n  useCloneScenario,\n  useRunDeduplication\n} from \"./useScenarioFetch\";\nimport {DEDUP_PATH} from \"../consts/addresses\";\nimport { ToastContext } from \"../contexts/toastContext\";\n\nconst useScenarios = () => {\n  const [allScenarios, fetchAllScenarios] = useAllScenariosFetch();\n  const [isDeleted, deleteScenario] = useDeleteScenario();\n  const [isRunning, runDeduplication] = useRunDeduplication();\n  const [isCloned, cloneScenario] = useCloneScenario();\n  const history = useHistory();\n  const { openToast } = useContext(ToastContext);\n\n  useEffect(fetchAllScenarios, []);\n\n  useEffect(() => {\n    if (isCloned.data !== null && isCloned.data.data.id)\n      openToast({\n        heading: [\"Scenario Cloned\"]\n      });\n    else if (isDeleted.status !== null && isDeleted.status === 200) {\n      openToast({\n        heading: [\"Scenario Deleted\"]\n      });\n      fetchAllScenarios();\n    } else if (isRunning.data !== null && isRunning.data.status === \"success\") {\n      openToast({\n        heading: [\"Scenario is Running\"]\n      });\n      fetchAllScenarios();\n    }\n  }, [isCloned.data, isDeleted.data, isRunning.data]);\n\n  const createScenario = () => history.push(`${DEDUP_PATH}/scenarios/new`);\n  const viewScenario = scenarioId => history.push(`${DEDUP_PATH}/scenarios/${scenarioId}`);\n  //TODO: set propert route name /grax-app/client/duplicates/:id or /grax-app/client/results/:id ?\n  const viewDuplicates = scenarioId => history.push(`${DEDUP_PATH}/duplicates/${scenarioId}`);\n\n  const onRowAction = (scenarioId, selected) => {\n    switch (selected.value) {\n      case SCENARIO_FETCH_ENUMS_RUN:\n        //TODO: change name to run scenario\n        runDeduplication(scenarioId);\n        break;\n      //TODO: change name to view duplicates\n      case SCENARIO_FETCH_ENUMS_RESULTS:\n        //TODO retrieve scenario id\n        viewDuplicates(scenarioId);\n        break;\n      case SCENARIO_FETCH_ENUMS_DUPLICATE:\n        cloneScenario(scenarioId);\n        break;\n      case SCENARIO_FETCH_ENUMS_UPDATE:\n        viewScenario(scenarioId);\n        break;\n      case SCENARIO_FETCH_ENUMS_DELETE:\n        deleteScenario(scenarioId);\n        break;\n      default:\n    }\n  };\n\n  return [\n    allScenarios,\n    {\n      createScenario,\n      viewScenario,\n      viewDuplicates,\n      onRowAction\n    }\n  ];\n};\n\nexport default useScenarios;\n","import React from \"react\";\nimport { PageHeader, Card, DataTable } from \"@salesforce/design-system-react\";\n\nimport { DEDUP_SCENARIOS } from \"../../../consts/dedup/componentNames\";\nimport { ScenarioActions } from \"./ScenarioPageHeaderActions\";\n//TODO: Change ScenariosRow.js file name to ScenariosColumn.jsx\nimport { ScenariosColumns } from \"./ScenariosRow\";\nimport useScenarios from \"../../../hooks/useScenarios\";\n\nconst Scenarios = () => {\n  const [\n    allScenarios,\n    { onRowAction, createScenario, viewScenario, viewDuplicates }\n  ] = useScenarios();\n\n  return (\n    <React.Fragment>\n      <PageHeader\n        className=\"slds-m-bottom_large\"\n        title=\"Scenarios\"\n        variant=\"object-home\"\n        onRenderActions={ScenarioActions.bind(null, createScenario)}\n        trail={[<a href=\"javascript:void(0);\">Dedup</a>]}\n      />\n\n      <Card style={{ flexGrow: 1 }} heading=\"All Scenarios\">\n        <DataTable\n          items={allScenarios.data.data}\n          noRowHover={true}\n          viewScenario={viewScenario}\n          viewDuplicates={viewDuplicates}\n          onRowAction={onRowAction}\n        >\n          {ScenariosColumns}\n        </DataTable>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nScenarios.displayName = DEDUP_SCENARIOS;\n\nexport default Scenarios;\n","export const DEDUP_SCENARIO = \"DedupScenario\";\nexport const DEDUP_SCENARIO_FIELDS_AND_OPERATORS = \"DedupScenarioFieldsAndOperators\";\nexport const DEDUP_SCENARIO_FILTER_CRITERIAS = \"DedupScenarioFilterCriterias\";\nexport const DEDUP_SCENARIO_MATCH_CRITERIAS = \"DedupScenarioMatchCriterias\";\nexport const DEDUP_SCENARIO_GENERIAL = \"DedupScenarioGeneral\";\nexport const DEDUP_SCENARIO_MERGE_ACTIONS = \"DedupScenarioMergeActions\";\nexport const DEDUP_SCENARIOS = \"DedupScenarios\";\nexport const DEDUP_SCENARIOS_ROWS = \"DedupScenariosRows\";\nexport const DEDUP_SCENARIO_CARD_ACTIONS = \"DedupScenarioCardActions\";\nexport const DEDUP_SCENARIO_PAGE_HEADER = \"DedupScenarioPageHeader\";\n","import { useState, useEffect } from \"react\";\n\nimport { GRAX_DATA_LAKE_PROXY_ADDRESS } from \"../consts/addresses\";\nimport useFetch from \"./useFetch\";\n\nconst useFieldsFetch = () => {\n  const [docPrefixedFields, setdocPrefixedFields] = useState([]);\n  const [fields, setObjectIndex] = useFetch();\n  const fetchFields = objectIndex => {\n    if (objectIndex !== \"\") {\n      setObjectIndex({\n        url: `${GRAX_DATA_LAKE_PROXY_ADDRESS}/getDataTypeFields/${objectIndex}?action=load`,\n        params: { sfdcorgid: \"\" }\n      });\n    } else {\n      setdocPrefixedFields([]);\n    }\n  };\n\n  useEffect(() => {\n    // verify network request status\n    if (fields.data !== null) {\n      const options = [];\n      const objectFields = fields.data;\n      for (let fieldName in objectFields) {\n        if (fieldName.split(\".\").length === 1 && fieldName.startsWith(\"grax\") === false) {\n          const fieldDataType = objectFields[fieldName];\n          options.push({\n            label: fieldName,\n            //TODO: does it need check for doc. prefixed field name?\n            value: `doc.${fieldName}`,\n            dataType: fieldDataType\n          });\n        }\n      }\n      setdocPrefixedFields(options);\n    }\n  }, [fields.data]);\n\n  return [docPrefixedFields, fetchFields];\n};\n\nexport default useFieldsFetch;\n","import {\n  SCENARIO_SET_MATCH_CRITERIA,\n  SCENARIO_SET_FILTER_CRITERIA,\n  SCENARIO_SET_NAME,\n  SCENARIO_SET_DESCRIPTION,\n  SCENARIO_SET_OBJECT_NAME,\n  SCENARIO_SET_IS_ACTIVE,\n  SCENARIO_SET_SCENARIO_ACTION,\n  SCENARIO_SET_RESULTS_TABLE_FIELDS,\n  SCENARIO_SET_FIELDS,\n  SCENARIO_LOAD\n} from \"../consts/dedup/scenarioActions\";\n\nconst intialState = {\n  isEditMode: false,\n  objectIndex: \"\",\n  formState: {\n    filterCriteria: [],\n    matchCriteria: [{}],\n    sfdcorgid: \"\",\n    name: \"\",\n    description: \"\",\n    object_name: \"\",\n    is_active: true,\n    scenario_action: \"MANUAL_MERGE\",\n    fields: [],\n    results_table_fields: [],\n    records_affected: null,\n    groups_count: null\n  },\n  editMode: {}\n};\n\nconst scenarioReducer = (state, action) => {\n  switch (action.type) {\n    case SCENARIO_LOAD: {\n      const { payload } = action;\n      return {\n        ...state,\n        isEditMode: action.payload.isEditMode,\n        formState: {\n          matchCriteria: payload.matchCriteria,\n          filterCriteria: action.payload.filterCriteria,\n          name: payload.name,\n          description: payload.description,\n          object_name: payload.object_name,\n          results_table_fields: payload.results_table_fields,\n          fields: payload.fields,\n          is_active: payload.is_active,\n          scenario_action: payload.scenario_action\n        }\n      };\n    }\n    case SCENARIO_SET_MATCH_CRITERIA:\n    case SCENARIO_SET_FILTER_CRITERIA:\n    case SCENARIO_SET_NAME:\n    case SCENARIO_SET_DESCRIPTION:\n    case SCENARIO_SET_IS_ACTIVE:\n    case SCENARIO_SET_SCENARIO_ACTION: {\n      const { payload } = action;\n      let newState = { ...state, formState: { ...state.formState, ...payload } };\n\n      if (state.isEditMode === true) {\n        newState = {\n          ...newState,\n          editMode: {\n            ...state.editMode,\n            ...payload\n          }\n        };\n      }\n\n      return newState;\n    }\n    case SCENARIO_SET_RESULTS_TABLE_FIELDS: {\n      const { payload } = action;\n      const resultsTableFields = payload.fields.map(field => field.value);\n\n      let newState = {\n        ...state,\n        formState: { ...state.formState, results_table_fields: resultsTableFields }\n      };\n\n      if (state.isEditMode === true) {\n        newState = {\n          ...newState,\n          editMode: {\n            ...newState.editMode,\n            results_table_fields: resultsTableFields\n          }\n        };\n      }\n\n      return newState;\n    }\n    case SCENARIO_SET_FIELDS: {\n      const { payload } = action;\n      const fields = payload.fields.map(field => field.value);\n\n      let newState = {\n        ...state,\n        formState: { ...state.formState, fields }\n      };\n\n      if (state.isEditMode === true) {\n        newState = {\n          ...newState,\n          editMode: {\n            ...newState.editMode,\n            fields\n          }\n        };\n      }\n\n      return newState;\n    }\n    case SCENARIO_SET_OBJECT_NAME: {\n      const { payload } = action;\n      const matchCriteria = state.formState.matchCriteria.map(matchCriteria => ({\n        ...matchCriteria,\n        field_name: \"\",\n        operator: \"\"\n      }));\n      const filterCriteria = state.formState.filterCriteria.map(filterCriteria => ({\n        ...filterCriteria,\n        field_name: \"\",\n        operator: \"\"\n      }));\n      //TODO: move objectIndex from state\n      let newState = {\n        ...state,\n        objectIndex: payload.objectIndex,\n        formState: {\n          ...state.formState,\n          object_name: payload.object_name,\n          matchCriteria,\n          filterCriteria\n        }\n      };\n      if (state.isEditMode === true) {\n        newState = {\n          ...newState,\n          editMode: {\n            ...newState.editMode,\n            object_name: payload.object_name,\n            matchCriteria,\n            filterCriteria\n          }\n        };\n      }\n      return newState;\n    }\n    default:\n      throw new Error();\n  }\n};\n\nexport { scenarioReducer, intialState };\n","export const SCENARIO_SET_MATCH_CRITERIA = \"SCENARIO_SET_MATCH_CRITERIA\";\nexport const SCENARIO_SET_FILTER_CRITERIA = \"SCENARIO_SET_FILTER_CRITERIA\";\nexport const SCENARIO_SET_NAME = \"SCENARIO_SET_NAME\";\nexport const SCENARIO_SET_DESCRIPTION = \"SCENARIO_SET_DESCRIPTION\";\nexport const SCENARIO_SET_OBJECT_NAME = \"SCENARIO_SET_OBJECT_NAME\";\nexport const SCENARIO_SET_IS_ACTIVE = \"SCENARIO_SET_IS_ACTIVE\";\nexport const SCENARIO_SET_SCENARIO_ACTION = \"SCENARIO_SET_SCENARIO_ACTION\";\nexport const SCENARIO_SET_RESULTS_TABLE_FIELDS = \"SCENARIO_SET_RESULTS_TABLE_FIELDS\";\nexport const SCENARIO_SET_FIELDS = \"SCENARIO_SET_FIELDS\";\nexport const SCENARIO_LOAD = \"SCENARIO_LOAD\";\n","import { useEffect, useState } from \"react\";\nimport { GRAX_DATA_LAKE_PROXY_ADDRESS } from \"../consts/addresses\";\nimport useFetch from \"./useFetch\";\n\nconst useObjectsFetch = () => {\n  const [sObjects, setSobjects] = useState([]);\n  // TODO: fetch only salesforce standard and custom objects\n  //  joelmsanto/dedup-ui-with-dedupscenariobackend\n  const [_sObjects] = useFetch({\n    url: `${GRAX_DATA_LAKE_PROXY_ADDRESS}/getDataTypes`,\n    params: {\n      sfdcorgid: \"\"\n    }\n  });\n\n  useEffect(() => {\n    if (_sObjects.data !== null) {\n      //TODO: filter custom and standard objects\n      setSobjects(\n        _sObjects.data.filter(\n          sObject => sObject.label.startsWith(\"grax\") === false && sObject.label !== \"logs\"\n        )\n      );\n    }\n  }, [_sObjects.data]);\n\n  return sObjects;\n};\n\nexport default useObjectsFetch;\n","import { useReducer, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport {\n  useCloneScenario,\n  useCreateScenario,\n  useDeleteScenario,\n  useUpdateScenario,\n  useRunDeduplication,\n  useFetchScenario\n} from \"./useScenarioFetch\";\nimport useFieldsFetch from \"./useFieldsFetch\";\nimport { ToastContext } from \"../contexts/toastContext\";\nimport { scenarioReducer, intialState } from \"../reducers/scenarioReducer\";\nimport { SCENARIO_LOAD, SCENARIO_SET_RESULTS_TABLE_FIELDS } from \"../consts/dedup/scenarioActions\";\nimport useObjectsFetch from \"./useObjectsFetch\";\nimport { DEDUP_PATH } from \"../consts/addresses\";\n\nconst useScenario = () => {\n  const [state, dispatch] = useReducer(scenarioReducer, intialState);\n  const [fetchedScenario, fetchScenario] = useFetchScenario();\n  const [isNewScenario, createScenario] = useCreateScenario();\n  const [isDeleted, deleteScenario] = useDeleteScenario();\n  //TODO: rename useRunDeduplication to useRunScenario\n  const [isRunning, runDeduplication] = useRunDeduplication();\n  const [isCloned, cloneScenario] = useCloneScenario();\n  const [isUpdated, updateScenario] = useUpdateScenario();\n  const [docPrefixedFields, fetchFields] = useFieldsFetch();\n  const params = useParams();\n  const history = useHistory();\n  const { openToast } = useContext(ToastContext);\n  const scenarioId = Number(params.scenario_id);\n  const isEditMode = Number.isInteger(scenarioId);\n  const heading = `${isEditMode ? \"Update\" : \"Create\"} Scenario`;\n  const formState = state.formState;\n  const sObjects = useObjectsFetch();\n\n  useEffect(() => {\n    if (isEditMode === true) fetchScenario(scenarioId);\n  }, [isEditMode]);\n\n  useEffect(() => {\n    if (fetchedScenario.data !== null && fetchedScenario.error === null)\n      dispatch({\n        type: SCENARIO_LOAD,\n        payload: {\n          isEditMode,\n          ...fetchedScenario.data.data\n        }\n      });\n  }, [fetchedScenario.data]);\n\n  //TODO: move objectIndex out from reducer\n  useEffect(() => {\n    if (state.objectIndex !== \"\") fetchFields(state.objectIndex);\n  }, [state.objectIndex]);\n\n  useEffect(\n    () =>\n      dispatch({\n        type: SCENARIO_SET_RESULTS_TABLE_FIELDS,\n        payload: {\n          fields: docPrefixedFields\n        }\n      }),\n    [docPrefixedFields]\n  );\n\n  useEffect(() => {\n    const { isEditMode, formState, objectIndex } = state;\n    const { object_name } = formState;\n    if (isEditMode === true && object_name !== \"\" && objectIndex === \"\" && sObjects.length > 0) {\n      //TODO: cleanup hook after first call\n      const sObject = sObjects.find(obj => obj.label === object_name);\n      if (sObject !== undefined) fetchFields(sObject.id);\n    }\n  }, [sObjects, state.formState.object_name]);\n\n  //TODO: move scenario success and error messages toast to insolate hook\n  useEffect(() => {\n    if (isNewScenario.data !== null && isNewScenario.data.data.id) {\n      openToast({\n        heading: [\"New Scenario Created\"]\n      });\n      history.push(`${DEDUP_PATH}/scenarios/${isNewScenario.data.data.id}`);\n    } else if (isCloned.data !== null && isCloned.data.data.id) {\n      openToast({\n        heading: [\"Scenario Cloned\"]\n      });\n      history.push(`${DEDUP_PATH}//scenarios/${isCloned.data.data.id}`);\n    } else if (isDeleted.status !== null && isDeleted.status === 200) {\n      openToast({\n        heading: [\"Scenario Deleted\"]\n      });\n      history.push(`${DEDUP_PATH}/scenarios`);\n    } else if (isRunning.data !== null && isRunning.data.status === \"success\") {\n      openToast({\n        heading: [\"Scenario is Running\"]\n      });\n    }\n  }, [isNewScenario.data, isCloned.data, isDeleted, isUpdated, isRunning]);\n\n  useEffect(() => {\n    if (isUpdated.data !== null && isUpdated.error === null)\n      openToast({\n        heading: \"Scenario Updated\"\n      });\n  }, [isUpdated.data]);\n\n  const onSubmit = e => {\n    if (state.isEditMode === true) {\n      updateScenario(scenarioId, state.editMode);\n    } else {\n      const { fields, ...createMode } = state.formState;\n      createScenario(createMode);\n    }\n    e.preventDefault();\n  };\n\n  const viewDuplicates = scenarioId => history.push(`/grax-app/client/duplicates/${scenarioId}`);\n\n  return [\n    {\n      formState,\n      isEditMode,\n      docPrefixedFields,\n      scenarioId,\n      heading,\n      sObjects\n    },\n    {\n      dispatch,\n      deleteScenario,\n      cloneScenario,\n      runDeduplication,\n      viewDuplicates,\n      onSubmit\n    }\n  ];\n};\n\nexport default useScenario;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button, Modal, Dropdown } from \"@salesforce/design-system-react\";\n\nimport { DEDUP_SCENARIO_CARD_ACTIONS } from \"../../../consts/dedup/componentNames\";\nimport {\n  SCENARIO_FETCH_ENUMS_DUPLICATE,\n  SCENARIO_FETCH_ENUMS_RUN,\n  SCENARIO_FETCH_ENUMS_RESULTS\n} from \"../../../consts/dedup/scenarioFetchEnums\";\n\nconst scenarioCardActionPropTypes = {\n  isEditMode: PropTypes.bool.isRequired,\n  onDelete: PropTypes.func,\n  onDuplicate: PropTypes.func\n};\n\nconst DeleteScenarioPromp = ({ isOpen, onDelete, onClose }) => (\n  <Modal\n    disableClose\n    footer={[\n      <Button label=\"Cancel\" onClick={onClose} />,\n      <Button\n        label=\"Delete\"\n        variant=\"destructive\"\n        onClick={() => {\n          onClose();\n          onDelete();\n        }}\n      />\n    ]}\n    isOpen={isOpen}\n    onRequestClose={onClose}\n    prompt=\"error\"\n    size=\"small\"\n    title={<span>Delete Scenario?</span>}\n  >\n  </Modal>\n);\n\nconst ScenarioCardActions = ({ isEditMode, onDelete, onDuplicate, onRun, onViewDuplicates }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const deleteButton = (\n    <Button\n      className=\"slds-m-horizontal_xx-small\"\n      iconCategory=\"utility\"\n      iconName=\"delete\"\n      iconVariant=\"border-filled\"\n      onClick={onDelete}\n    />\n  );\n  const utilityButton = (\n    <Dropdown\n      buttonVariant=\"icon\"\n      checkmark\n      iconName=\"settings\"\n      iconSize=\"large\"\n      iconVariant=\"more\"\n      align=\"right\"\n      onSelect={selected => {\n        switch (selected.value) {\n          case SCENARIO_FETCH_ENUMS_RUN:\n            onRun();\n            break;\n          case SCENARIO_FETCH_ENUMS_RESULTS:\n            onViewDuplicates();\n            break;\n          default:\n            onDuplicate();\n        }\n      }}\n      options={[\n        { label: \"Run\", value: SCENARIO_FETCH_ENUMS_RUN },\n        //FIXME: wrong name, imported from wrong location\n        { label: \"View Result\", value: SCENARIO_FETCH_ENUMS_RESULTS },\n        { label: \"Duplicate\", value: SCENARIO_FETCH_ENUMS_DUPLICATE }\n      ]}\n    />\n  );\n  const actions = [];\n\n  if (isEditMode === true) {\n    actions.push(utilityButton);\n    actions.push(deleteButton);\n    actions.push(\n      <DeleteScenarioPromp isOpen={isOpen} onClose={() => setIsOpen(false)} onDelete={onDelete} />\n    );\n  }\n\n  return actions;\n};\n\nScenarioCardActions.propType = scenarioCardActionPropTypes;\nScenarioCardActions.displayName = DEDUP_SCENARIO_CARD_ACTIONS;\n\nexport default ScenarioCardActions;\n","import React, { memo, useRef } from \"react\";\nimport PropType from \"prop-types\";\n\nimport { ExpandableSection, Input, Checkbox } from \"@salesforce/design-system-react\";\n\nimport { DEDUP_SCENARIO_GENERIAL } from \"../../../consts/dedup/componentNames\";\n\nconst propTypes = {\n  name: PropType.string.required,\n  description: PropType.string.required,\n  isActive: PropType.bool.required,\n  onChangeName: PropType.func,\n  onChangeDescription: PropType.func,\n  onChangeNameIsActive: PropType.func\n};\n\nconst ScenarioGeneral = memo(\n  ({ name, description, isActive, onChangeName, onChangeDescription, onChangeIsActive }) => {\n    const c = useRef(0);\n    c.current = c.current + 1;\n    // console.log(c, \"general\");\n    return (\n      <ExpandableSection\n        title=\"General\"\n        className=\"slds-m-bottom_medium slds-m-top_none\"\n        nonCollapsible\n      >\n        <div className=\"slds-grid slds-gutters_small\">\n          <div className=\"slds-col slds-size_2-of-5\">\n            <Input\n              label=\"Name\"\n              required\n              value={name}\n              onChange={e => onChangeName(e.target.value)}\n            />\n          </div>\n          <div className=\"slds-col slds-size_2-of-5\">\n            <Input\n              label=\"Description\"\n              value={description}\n              onChange={e => onChangeDescription(e.target.value)}\n            />\n          </div>\n          <div className=\"slds-col slds-size_1-of-5\">\n            <div className=\"slds-form-element\">\n              <label className=\"slds-form-element__label\">Is Active</label>\n              <Checkbox\n                checked={isActive}\n                variant=\"toggle\"\n                onChange={(_event, { checked }) => onChangeIsActive(checked)}\n              />\n            </div>\n          </div>\n        </div>\n      </ExpandableSection>\n    );\n  }\n);\n\nScenarioGeneral.prototype = propTypes;\nScenarioGeneral.prototype.displayName = DEDUP_SCENARIO_GENERIAL;\n\nexport default ScenarioGeneral;\n","import React, { useState } from \"react\";\n\nimport { Combobox, comboboxFilterAndLimit } from \"@salesforce/design-system-react\";\n\nconst GRAXCombobox = ({ options = [], onChange, ...props }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selection, setSelection] = useState([]);\n\n  const onChangeHandler = (event, dataSelection) => {\n    if (onChange) {\n      onChange(event, dataSelection, options);\n    }\n  };\n\n  return (\n    <Combobox\n      events={{\n        onChange: (event, { value }) => setInputValue(value),\n        onRequestRemoveSelectedOption: (event, data) => {\n          setInputValue(\"\");\n          setSelection(data.selection);\n\n          onChangeHandler(event, data.selection);\n        },\n        onSelect: (event, data) => {\n          setInputValue(\"\");\n          setSelection(data.selection);\n\n          onChangeHandler(event, data.selection);\n        }\n      }}\n      options={comboboxFilterAndLimit({\n        inputValue: inputValue,\n        limit: 1000,\n        options: options,\n        selection: selection\n      })}\n      selection={selection}\n      value={inputValue}\n      variant={\"inline-listbox\"}\n      required={true}\n      menuItemVisibleLength={5}\n      classNameMenu=\"slds-dropdown_length-7\"\n      {...props}\n    />\n  );\n};\n\nexport default GRAXCombobox;\n","import React, { createContext, useContext, useMemo } from \"react\";\n\nimport { DEDUP_PROXY_ADDRESS } from \"../consts/addresses\";\nimport useFetch from \"../hooks/useFetch\";\n\nexport const DedupStoreContext = createContext();\nexport const useScenarioStore = () => useContext(DedupStoreContext);\n\nexport const DedupStoreContextProvider = ({ children }) => {\n  //TODO: retrieve sfdcorgid from .env\n  const [metadata] = useFetch(\n    { url: `${DEDUP_PROXY_ADDRESS}/metadata`, params: { sfdcorgid: \"\" } },\n    { data: { data: { operators: [], stopwords: [], synonyms: [] } } }\n  );\n  // TODO: move salesforce object into a React cache\n\n  const store = useMemo(\n    () => ({\n      metadata\n    }),\n    [metadata]\n  );\n\n  return <DedupStoreContext.Provider value={store}>{children}</DedupStoreContext.Provider>;\n};\n","import React, { memo, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { DEDUP_SCENARIO_MERGE_ACTIONS } from \"../../../consts/dedup/componentNames\";\nimport GRAXCombobox from \"../../commons/GRAXCombobox\";\nimport { useScenarioStore } from \"../../../contexts/scenarioContext\";\n\nconst propTypes = {\n  scenarioActions: PropTypes.array,\n  scenarioAction: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nconst MergeActions = ({ scenarioAction, onChange }) => {\n  const scenarioStore = useScenarioStore();\n  const { scenario_actions } = scenarioStore.metadata.data.data;\n\n  const extractMergeActions = scenarioActions => {\n    const options = [];\n\n    for (let index in scenarioActions) {\n      let values = scenarioActions[index].values;\n\n      values = values.map(value => ({\n        label: value.display_value,\n        value: value.code\n      }));\n\n      options.push(...values);\n    }\n\n    return options;\n  };\n\n  const b = useRef(0);\n  b.current = b.current + 1;\n  //console.log(b);\n  return (\n    <div className=\"slds-col slds-size_2-of-5\">\n      <GRAXCombobox\n        options={extractMergeActions(scenario_actions)}\n        value={scenarioAction}\n        labels={{ placeholder: \"Select Option\" }}\n        required\n        onChange={(e, selected) => onChange(selected.length === 1 ? selected[0].value : null)}\n      />\n    </div>\n  );\n};\n\nMergeActions.prototype = propTypes;\nMergeActions.displayName = DEDUP_SCENARIO_MERGE_ACTIONS;\n\nexport default memo(MergeActions);\n","import React from \"react\";\n\nimport { PageHeader, PageHeaderControl, Button } from \"@salesforce/design-system-react\";\n\nconst ScenarioHeader = ({ heading, onSubmit }) => (\n  <PageHeader\n    className=\"slds-m-bottom_large\"\n    title={heading}\n    variant=\"object-home\"\n    trail={[<span>Dedup </span>, <a href=\"javascript:void(0);\">Scenarios</a>]}\n    onRenderActions={() => (\n      <React.Fragment>\n        <PageHeaderControl variant=\"list\">\n          <Button label=\"Save\" type=\"submit\" />\n        </PageHeaderControl>\n      </React.Fragment>\n    )}\n  />\n);\n\nexport default ScenarioHeader;\n","import React from \"react\";\n\nimport { Button } from \"@salesforce/design-system-react\";\n\nexport const RepeatingRemoveRowButton = ({ onRemove, ...props }) => (\n  <div className=\"slds-col slds-size_1-of-12\">\n    <div className=\"slds-form-element\">\n      <label className=\"slds-form-element__label\">&nbsp;</label>\n      <div className=\"slds-from_element__control\">\n        <Button\n          onClick={onRemove}\n          iconCategory=\"utility\"\n          variant=\"icon\"\n          iconName=\"delete\"\n          iconVariant=\"border-filled\"\n          {...props}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport const AddRowButton = ({ onClick, ...props }) => (\n  <Button\n    className=\"slds-m-top_medium\"\n    label=\"Add New Row\"\n    iconCategory=\"utility\"\n    iconName=\"add\"\n    iconPosition=\"left\"\n    onClick={onClick}\n    {...props}\n  />\n);\n","import React, { cloneElement } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { AddRowButton } from \"./Buttons\"\n\nconst propTypes = {\n    rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onChange: PropTypes.func.isRequired,\n    header: PropTypes.element,\n    footer: PropTypes.element\n}\n\nconst withRepeating = WrappedComponent => ({\n    rows,\n    onChange,\n    footer,\n    hideFooter,\n    ...props\n}) => {\n    const addRow = (row = {}) => onChange(rows.concat(row));\n    const removeRow = index => onChange(rows.filter((r, i) => index !== i));\n    const editRow = (row, index) => onChange(rows.map((r, i) => index === i ? row : r));\n    const displayName = `${withRepeating.name}${WrappedComponent.name}`;\n    const repeatedWrapped = [];\n\n    WrappedComponent.displayName = displayName;\n    rows.map((row, index) =>\n        repeatedWrapped.push(<WrappedComponent\n            row={row}\n            index={index}\n            key={`${displayName}-${index}`}\n            onChange={row => editRow(row, index)}\n            onRemove={() => removeRow(index)}\n            {...props}\n        />)\n    );\n\n    const renderFooter = (footer, hideFooter) => {\n        if (hideFooter === undefined) {\n            if (React.isValidElement(footer)) {\n                return cloneElement(footer, { addRow });\n            }\n\n            return <AddRowButton onClick={() => addRow({})} />;\n        }\n    }\n\n    return [\n        repeatedWrapped,\n        renderFooter(footer, hideFooter)\n    ];\n}\n\nwithRepeating.displayName = 'withRepeating';\nwithRepeating.propTypes = propTypes;\n\nexport default withRepeating","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DEDUP_SCENARIO_FIELDS_AND_OPERATORS } from \"../../../consts/dedup/componentNames\";\nimport GRAXCombobox from \"../../commons/GRAXCombobox\";\nimport { useOperators } from \"../../../hooks/useFieldsAndOperators\";\n\nconst propTypes = {\n  fieldName: PropTypes.string,\n  docPrefixedFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  operator: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  onChangeField: PropTypes.func,\n  onChangeOperator: PropTypes.func,\n  operators: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst FieldsAndOperators = ({\n  fieldName,\n  operator,\n  docPrefixedFields,\n  onChangeField,\n  onChangeOperator\n}) => {\n  const [dropdownLabel, setDropdownLabel] = useState(\"\");\n  const [operators, setDataType] = useOperators(fieldName);\n\n  useEffect(() => {\n    if (operators.length === 0 && fieldName !== \"\" && docPrefixedFields.length > 0) {\n      const fieldDataType = docPrefixedFields.find(field => field.value === fieldName);\n      if (fieldDataType !== undefined) setDataType(fieldDataType.dataType);\n    }\n  }, [docPrefixedFields]); //TODO: watch for fieldName also\n\n  useEffect(() => {\n    let fieldLabel = \"\";\n    if (fieldName !== undefined && fieldName.startsWith(\"doc.\"))\n      fieldLabel = fieldName.split(\"doc.\")[1];\n\n    setDropdownLabel(fieldLabel);\n  }, [fieldName]);\n\n  const handleFieldName = selection => {\n    if (selection.length === 1) {\n      const { value, dataType } = selection[0];\n      onChangeField(value);\n      setDataType(dataType);\n    } else {\n      onChangeField(\"\");\n      setDataType(null);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"slds-col slds-size_1-of-5\">\n        <GRAXCombobox\n          onChange={(event, selection) => handleFieldName(selection)}\n          options={docPrefixedFields}\n          value={dropdownLabel}\n          required\n          labels={{\n            label: \"Fields\",\n            placeholder: \"Select Option\"\n          }}\n        />\n      </div>\n      <div className=\"slds-col slds-size_1-of-5\">\n        <GRAXCombobox\n          onChange={(event, selection) =>\n            onChangeOperator(selection.length === 1 ? selection[0].label : \"\")\n          }\n          options={operators}\n          value={operator}\n          required\n          labels={{\n            label: \"Operators\",\n            placeholder: \"Select Option\"\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nFieldsAndOperators.prototype = propTypes;\nFieldsAndOperators.displayName = DEDUP_SCENARIO_FIELDS_AND_OPERATORS;\n\nexport default FieldsAndOperators;\n","import { useState, useEffect } from \"react\";\n\nimport { useScenarioStore } from \"../contexts/scenarioContext\";\n\nexport const useOperators = () => {\n  const [dataType, setDataType] = useState(null);\n  const [fieldOperators, setFieldOperators] = useState([]);\n  const scenarioStore = useScenarioStore();\n  const { operators } = scenarioStore.metadata.data.data;\n\n  useEffect(() => {\n    if (dataType === null) setFieldOperators([]);\n    else {\n      const applicableOperators = operators\n        .filter(operator => operator.applicable_data_types.includes(dataType))\n        //TODO: map operators just one\n        .map(operator => ({\n          label: operator.name,\n          value: operator.id\n        }));\n      setFieldOperators(applicableOperators);\n    }\n  }, [dataType, operators]);\n\n  return [fieldOperators, setDataType];\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Checkbox } from \"@salesforce/design-system-react\";\n\nimport { DEDUP_SCENARIO_MATCH_CRITERIAS } from \"../../../consts/dedup/componentNames\";\nimport { mutateRow } from \"../../../lib/utils\";\nimport { RepeatingRemoveRowButton } from \"../../commons/Buttons\";\nimport withRepeating from \"../../commons/withRepeating\";\nimport FieldsAndOperators from \"./FieldsAndOperators\";\n\nconst propTypes = {\n  row: PropTypes.shape({\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    value: PropTypes.string,\n    stopWord: PropTypes.array,\n    synonyms: PropTypes.array,\n    cleanse: PropTypes.bool\n  }),\n  index: PropTypes.number,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func,\n  docPrefixedFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  operators: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  )\n};\n\nconst MatchCriteriaRow = ({\n  row,\n  onChange,\n  onRemove,\n  setMetadata,\n  docPrefixedFields,\n  operators,\n  rowsNum\n}) => {\n  const disabledRemoveButton = rowsNum === 1;\n  return (\n    <li className=\"slds-grid slds-gutters_small\">\n      <FieldsAndOperators\n        docPrefixedFields={docPrefixedFields}\n        operators={operators}\n        fieldName={row.field_name}\n        operator={row.operator}\n        onChangeField={fieldName =>\n          onChange(\n            Object.assign({}, row, {\n              field_name: fieldName,\n              operator: \"\"\n            })\n          )\n        }\n        onChangeOperator={operator => onChange(mutateRow(row, \"operator\", operator))}\n      />\n      <div className=\"slds-col slds-size_1-of-5\">\n        <div className=\"slds-form-element\">\n          <label className=\"slds-form-element__label\">stopWord</label>\n          <div className=\"slds-form-element__control\">\n            <a\n              className=\"\"\n              style={{ lineHeight: \"1.875rem\" }}\n              href={e => e.preventDefault()}\n              onClick={() =>\n                setMetadata({\n                  matchCriteriaId: row.id,\n                  id: row.stopwords_list_id,\n                  variant: \"stopwords\"\n                })\n              }\n            >\n              Contact Prefixes\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"slds-col slds-size_1-of-6\">\n        <div className=\"slds-form-element\">\n          <label className=\"slds-form-element__label\">Synonym</label>\n          <div className=\"slds-form-element__control\">\n            <a\n              className=\"\"\n              style={{ lineHeight: \"1.875rem\" }}\n              href={e => e.preventDefault()}\n              onClick={() =>\n                setMetadata({\n                  matchCriteriaId: row.id,\n                  id: row.synonyms_id,\n                  variant: \"synonyms\"\n                })\n              }\n            >\n              Synonym name\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"slds-col slds-size_2-of-12\">\n        <span class=\"slds-form-element__label\">Use Cleansed Field</span>\n        <div className=\"slds-form-element__control\">\n          <Checkbox\n            variant=\"toggle\"\n            checked={row.cleanse}\n            onChange={(event, { checked }) => onChange(mutateRow(row, \"cleanse\", !row.cleanse))}\n          />\n        </div>\n      </div>\n      <RepeatingRemoveRowButton onRemove={onRemove} disabled={disabledRemoveButton} />\n    </li>\n  );\n};\n\nMatchCriteriaRow.prototype = propTypes;\nMatchCriteriaRow.displayName = DEDUP_SCENARIO_MATCH_CRITERIAS;\n\nexport default withRepeating(MatchCriteriaRow);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Input } from \"@salesforce/design-system-react\";\n\nimport { DEDUP_SCENARIO_FILTER_CRITERIAS } from \"../../../consts/dedup/componentNames\";\nimport { RepeatingRemoveRowButton } from \"../../commons/Buttons\";\nimport { mutateRow } from \"../../../lib/utils\";\nimport withRepeating from \"../../commons/withRepeating\";\nimport FieldsAndOperators from \"./FieldsAndOperators\";\n\nconst propTypes = {\n  row: PropTypes.shape({\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    value: PropTypes.any\n  }),\n  index: PropTypes.number,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func,\n  docPrefixedFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  operators: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  )\n};\n\nconst FilterCriteriaRow = ({ row, onChange, onRemove, docPrefixedFields, operators }) => {\n  const [value, setValue] = useState();\n\n  useEffect(() => setValue(row.value), [row.value]);\n\n  return (\n    <li className=\"slds-grid slds-gutters_small\">\n      <FieldsAndOperators\n        docPrefixedFields={docPrefixedFields}\n        operators={operators}\n        fieldName={row.field_name}\n        operator={row.operator}\n        onChangeField={fieldName => onChange(mutateRow(row, \"field_name\", fieldName))}\n        onChangeOperator={operator => onChange(mutateRow(row, \"operator\", operator))}\n      />\n      <div className=\"slds-col slds-size_1-of-5\">\n        <Input\n          label=\"Value\"\n          value={value}\n          required\n          onChange={e => setValue(e.target.value)}\n          onBlur={e => onChange(mutateRow(row, \"value\", value))}\n        />\n      </div>\n      <RepeatingRemoveRowButton onRemove={onRemove} />\n    </li>\n  );\n};\n\nFilterCriteriaRow.proptype = propTypes;\nFilterCriteriaRow.displayName = DEDUP_SCENARIO_FILTER_CRITERIAS;\n\nexport default withRepeating(FilterCriteriaRow);\n","import React, { useState } from \"react\";\nimport { Button, EditDialog, Radio } from \"@salesforce/design-system-react\";\n\nimport withRepeating from \"../../../commons/withRepeating\";\n\nconst TreeModalRow = ({ row, selectedId, onChange, onRemove }) => {\n  const [isEditMode, setIsEditMode] = useState(false);\n  return (\n    <tr className=\"slds-hint-parent\">\n      <th class=\"slds-cell-edit\">\n        <Radio variant=\"base\" checked={selectedId === row.id} />\n      </th>\n      <th class=\"slds-cell-edit\">\n        <span className=\"slds-grid slds-grid_align-spread\">\n          <a className=\"slds-truncate\">\n            <span class=\"slds-grid slds-grid_align-spread\">\n              <span class=\"slds-truncate\" title=\"Acme\">\n                {row.name}\n              </span>\n            </span>\n          </a>\n\n          <Button\n            iconSize=\"small\"\n            onClick={() => setIsEditMode(true)}\n            iconCategory=\"utility\"\n            variant=\"icon\"\n            iconName=\"edit\"\n            iconVariant=\"bare\"\n            className=\"slds-cell-edit__button\"\n            iconClassName=\"slds-button__icon_hint slds-button__icon_edit\"\n          />\n        </span>\n        {isEditMode && (\n          <section\n            class=\"slds-popover slds-popover slds-popover_edit\"\n            role=\"dialog\"\n            style={{ position: \"absolute\", top: \"0px\", left: \"0.0625rem\" }}\n          >\n            <div class=\"slds-popover__body\" id=\"dialog-body-id-1\">\n              <div class=\"slds-form-element slds-grid slds-wrap\">\n                <label\n                  class=\"slds-form-element__label slds-form-element__label_edit slds-no-flex\"\n                  for=\"company-01\"\n                >\n                  <span class=\"slds-assistive-text\">Company</span>\n                </label>\n                <div class=\"slds-form-element__control slds-grow\">\n                  <input\n                    class=\"slds-input\"\n                    id=\"company-01\"\n                    type=\"text\"\n                    value=\"Acme Enterprises\"\n                    onBlur={() => {\n                      setIsEditMode(false);\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n      </th>\n      <td class=\"slds-cell-edit slds-text-align_right\">\n        <Button\n          iconSize=\"small\"\n          onClick={onRemove}\n          iconCategory=\"utility\"\n          variant=\"icon\"\n          iconName=\"delete\"\n          iconVariant=\"border-filled\"\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default withRepeating(TreeModalRow);\n","import React, { useState, useEffect } from \"react\";\n\nimport { Button } from \"@salesforce/design-system-react\";\n\nimport TreeModalBranchItem from \"./TreeModalBranchItem\";\nimport { mutateRow } from \"../../../../lib/utils\";\nimport { useScenarioStore } from \"../../../../contexts/scenarioContext\";\n\nconst TreeModalBranch = ({ criteria, onChange, onSelect }) => {\n  const [rows, setRows] = useState([]);\n  const scenarioStore = useScenarioStore();\n  const { stopwords, synonyms } = scenarioStore.metadata.data.data;\n\n  useEffect(() => {\n    if (criteria.variant === \"stopwords\") setRows(stopwords);\n    else setRows(synonyms);\n  }, [criteria]);\n\n  return (\n    <table className=\"slds-table slds-table_bordered slds-no-row-hover slds-table_edit\">\n      <thead>\n        <tr class=\"slds-line-height_reset\">\n          <th class=\"\" style={{ width: \"1rem\" }} />\n          <th>\n            <a\n              class=\"slds-th__action slds-text-link_reset\"\n              href=\"javascript:void(0);\"\n              role=\"button\"\n              tabindex=\"0\"\n            >\n              <span class=\"slds-assistive-text\">Sort by: </span>\n              <div class=\"slds-grid slds-grid_vertical-align-center slds-has-flexi-truncate\">\n                <span class=\"slds-truncate\" title=\"Account Name\">\n                  Name\n                </span>\n              </div>\n            </a>\n          </th>\n          <th aria-label=\"Close Date\" aria-sort=\"none\" class=\"\" scope=\"col\" />\n        </tr>\n      </thead>\n      <tbody>\n        <TreeModalBranchItem rows={rows} selectedId={criteria.id} hideFooter={true} />\n      </tbody>\n    </table>\n  );\n};\n\nexport default TreeModalBranch;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Modal, Button } from \"@salesforce/design-system-react\";\n\nimport TreeModalBranch from \"./TreeModalBranch\";\n\nconst HEADINGS = {\n  stopwords: \"Stopwords\",\n  synonyms: \"Synonyms\"\n};\nconst TreeModal = ({ isOpen, criteria, onChange, onRequestClose }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      heading={HEADINGS[criteria.variant]}\n      onRequestClose={onRequestClose}\n      size={\"small\"}\n      footer={[\n        <Button label=\"Cancel\" onClick={onRequestClose} />,\n        <Button variant=\"brand\" label=\"Apply\" onClick={onRequestClose} />\n      ]}\n    >\n      <TreeModalBranch criteria={criteria} onChange={onChange} />\n    </Modal>\n  );\n};\n\nexport default TreeModal;\n","import React, { useState, Fragment, useRef, memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ExpandableSection } from \"@salesforce/design-system-react\";\n\nimport MatchCriterias from \"./MatchCriterias\";\nimport FilterCriterias from \"./FilterCriterias\";\nimport { useScenarioStore } from \"../../../contexts/scenarioContext\";\nimport GRAXCombobox from \"../../commons/GRAXCombobox\";\nimport TreeModal from \"./metadata/TreeModal\";\nimport GRAXFieldsCombobox from \"../../GRAXFieldsCombobox\";\n\nconst propTypes = {\n  matchCriteria: PropTypes.shape({\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    value: PropTypes.string,\n    stopword: PropTypes.array,\n    synonyms: PropTypes.array,\n    cleanse: PropTypes.bool\n  }),\n  filterCriteria: PropTypes.shape({\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    value: PropTypes.any\n  }),\n  operators: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  stopwords: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  synonyms: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string\n    })\n  ),\n  onChangeMatchCriteria: PropTypes.func,\n  onChangeFilterCriteria: PropTypes.func\n};\n\nconst ScenarioCriterias = ({\n  matchCriteria,\n  filterCriteria,\n  objectName,\n  fields,\n  docPrefixedFields,\n  sObjects,\n  onChangeObject,\n  onChangeFields,\n  onChangeMatchCriteria,\n  onChangeFilterCriteria\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [criteria, setCriteria] = useState({});\n  const scenarioStore = useScenarioStore();\n  const { operators } = scenarioStore.metadata;\n\n  const setMetadata = criteria => {\n    setIsOpen(true);\n    setCriteria(criteria);\n  };\n\n  return (\n    <Fragment>\n      <ExpandableSection title=\"Objects\" className=\"slds-m-bottom_medium\" nonCollapsible>\n        <div class=\"slds-grid slds-gutters_small\">\n          <div className=\"slds-col slds-size_1-of-5\">\n            <GRAXCombobox\n              options={sObjects}\n              labels={{ placeholder: \"Select option\" }}\n              value={objectName}\n              onChange={(event, selection) => {\n                //TODO: improve object name and object index retrievement\n                const sObject =\n                  selection.length === 1 ? selection[0] : { objectName: \"\", objectIndex: \"\" };\n                onChangeObject(sObject.label, sObject.id);\n              }}\n            />\n          </div>\n        </div>\n      </ExpandableSection>\n\n      <ExpandableSection title=\"Matching Criterias\" className=\"slds-m-bottom_medium\" nonCollapsible>\n        <MatchCriterias\n          rows={matchCriteria}\n          docPrefixedFields={docPrefixedFields}\n          operators={operators}\n          rowsNum={matchCriteria.length}\n          onChange={onChangeMatchCriteria}\n          setMetadata={setMetadata}\n        />\n      </ExpandableSection>\n      <ExpandableSection title=\"Filter Criterias\" className=\"slds-m-bottom_medium\" nonCollapsible>\n        <FilterCriterias\n          rows={filterCriteria}\n          docPrefixedFields={docPrefixedFields}\n          operators={operators}\n          onChange={onChangeFilterCriteria}\n        />\n      </ExpandableSection>\n      <TreeModal isOpen={isOpen} criteria={criteria} onRequestClose={() => setIsOpen(false)} />\n    </Fragment>\n  );\n};\n\nScenarioCriterias.propType = propTypes;\nexport default ScenarioCriterias;\n","import React, { useCallback, useRef } from \"react\";\nimport { ExpandableSection, Card } from \"@salesforce/design-system-react\";\n\nimport {\n  SCENARIO_SET_NAME,\n  SCENARIO_SET_DESCRIPTION,\n  SCENARIO_SET_IS_ACTIVE,\n  SCENARIO_SET_SCENARIO_ACTION,\n  SCENARIO_SET_MATCH_CRITERIA,\n  SCENARIO_SET_FILTER_CRITERIA,\n  SCENARIO_SET_OBJECT_NAME,\n  SCENARIO_SET_FIELDS\n} from \"../../../consts/dedup/scenarioActions\";\nimport useScenario from \"../../../hooks/useScenario\";\nimport ScenarioCardActions from \"./ScenarioCardActions\";\nimport ScenarioGeneral from \"./ScenarioGeneral\";\nimport MergeActions from \"./MergeActions\";\nimport ScenarioHeader from \"./ScenarioHeader\";\nimport ScenarioCriterias from \"./ScenarioCriterias\";\nimport { DEDUP_SCENARIO } from \"../../../consts/dedup/componentNames\";\nimport { DedupStoreContextProvider } from \"../../../contexts/scenarioContext\";\nimport GRAXFieldsCombobox from \"../../GRAXFieldsCombobox\";\n\nconst propType = {};\n\nconst Scenario = () => {\n  const [\n    { formState, isEditMode, docPrefixedFields, scenarioId, heading, sObjects },\n    { dispatch, deleteScenario, duplicateScenario, runDeduplication, viewDuplicates, onSubmit }\n  ] = useScenario();\n\n  const {\n    name,\n    description,\n    is_active,\n    object_name,\n    fields,\n    matchCriteria,\n    filterCriteria,\n    scenario_action\n  } = formState;\n\n  const c = useRef(0);\n  c.current = c.current + 1;\n  console.log(c, \"scenario\");\n  return (\n    <DedupStoreContextProvider>\n      <form onSubmit={e => onSubmit(e)}>\n        <ScenarioHeader heading={heading} />\n        <Card\n          heading={heading}\n          headerActions={\n            <ScenarioCardActions\n              isEditMode={isEditMode}\n              onDelete={() => deleteScenario(scenarioId)}\n              onDuplicate={() => duplicateScenario(scenarioId)}\n              onRun={() => runDeduplication(scenarioId)}\n              onViewDuplicates={() => viewDuplicates(scenarioId)}\n            />\n          }\n        >\n          <div className=\"slds-p-horizontal_medium\">\n            <ScenarioGeneral\n              name={name}\n              description={description}\n              isActive={is_active}\n              onChangeName={useCallback(\n                name =>\n                  dispatch({\n                    type: SCENARIO_SET_NAME,\n                    payload: { name }\n                  }),\n                [name]\n              )}\n              onChangeDescription={useCallback(\n                description =>\n                  dispatch({\n                    type: SCENARIO_SET_DESCRIPTION,\n                    payload: { description }\n                  }),\n                [description]\n              )}\n              onChangeIsActive={useCallback(\n                isActive =>\n                  dispatch({\n                    type: SCENARIO_SET_IS_ACTIVE,\n                    payload: { is_active: isActive }\n                  }),\n                [is_active]\n              )}\n            />\n            <ScenarioCriterias\n              matchCriteria={matchCriteria}\n              filterCriteria={filterCriteria}\n              objectName={object_name}\n              fields={fields}\n              docPrefixedFields={docPrefixedFields}\n              sObjects={sObjects}\n              onChangeMatchCriteria={rows =>\n                dispatch({\n                  type: SCENARIO_SET_MATCH_CRITERIA,\n                  payload: { matchCriteria: rows }\n                })\n              }\n              onChangeFilterCriteria={rows =>\n                dispatch({\n                  type: SCENARIO_SET_FILTER_CRITERIA,\n                  payload: { filterCriteria: rows }\n                })\n              }\n              onChangeObject={(objectName, objectIndex) =>\n                dispatch({\n                  type: SCENARIO_SET_OBJECT_NAME,\n                  payload: { object_name: objectName, objectIndex: objectIndex }\n                })\n              }\n              onChangeFields={fields =>\n                dispatch({\n                  type: SCENARIO_SET_FIELDS,\n                  payload: { fields }\n                })\n              }\n            />\n            <ExpandableSection\n              title=\"Merge Actions\"\n              nonCollapsible\n              className=\"slds-m-bottom_medium\"\n            >\n              <div className=\"slds-grid slds-gutters_small\">\n                <MergeActions\n                  scenarioAction={scenario_action}\n                  onChange={selection =>\n                    dispatch({\n                      type: SCENARIO_SET_SCENARIO_ACTION,\n                      payload: { scenario_action: selection }\n                    })\n                  }\n                />\n              </div>\n            </ExpandableSection>\n          </div>\n        </Card>\n      </form>\n    </DedupStoreContextProvider>\n  );\n};\n\nScenario.propType = propType;\nScenario.displayName = DEDUP_SCENARIO;\n\nexport default Scenario;\n","import React, { Suspense, lazy } from \"react\";\nimport { Tabs, TabsPanel, IconSettings, Spinner } from \"@salesforce/design-system-react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"@salesforce-ux/design-system/assets/styles/salesforce-lightning-design-system.min.css\";\nimport \"./App.css\";\n\nimport { isEmbeded, isAppleDevice } from \"./lib/utils\";\nimport routes from \"./consts/routes\";\n\nconst GRAXRestoreTabs = lazy(() => import(\"./components/GRAXRestoreTabs\"));\nconst GRAXLogging = lazy(() => import(\"./components/GRAXLogging\"));\nconst GRAXHistory = lazy(() => import(\"./components/GRAXHistory\"));\nconst GRAXDelete = lazy(() => import(\"./components/GRAXDelete\"));\nconst GRAXCloud = lazy(() => import(\"./components/GRAXCloud\"));\nconst GRAXAudit = lazy(() => import(\"./components/GRAXAudit\"));\nconst GRAXSummaryCharts = lazy(() => import(\"./components/GRAXSummaryCharts\"));\n\nlet appName;\n\nif (window.__grax__ != null && window.__grax__.appName != null) {\n  appName = window.__grax__.appname;\n} else {\n  appName = window.location.pathname.split(\"/\").pop() || \"cloud\";\n}\n\nvar helpLinkbyAppName = {\n  // 'mapping': 'grax-restore',\n  summarycharts: \"summary-charts\",\n  delete: \"datalake-delete\",\n  timemachine: \"grax-object-time-machine\",\n  logging: \"grax-logs\"\n};\n\nclass GRAXApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    if (appName === \"summarycharts\") {\n      const script = document.createElement(\"script\");\n      script.src = \"https://www.gstatic.com/charts/loader.js\";\n      script.async = true;\n      script.onload = () => {\n        this.setState({ isLoading: false });\n      };\n\n      document.body.appendChild(script);\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Spinner size=\"large\" variant=\"brand\" />;\n    }\n\n    return (\n      <React.Fragment>\n        {isAppleDevice && (\n          <style>{`\n                    html, body {\n                        height: 100%;\n                        overflow: auto;\n                        -webkit-overflow-scrolling: touch;\n                    }\n                `}</style>\n        )}\n        <div className={isEmbeded ? \"slds-tabs_scoped__content\" : \"\"}>\n          {helpLinkbyAppName[appName] != null ? (\n            <div aria-hidden=\"false\" id=\"GRAXHelpLink\">\n              <h3>\n                <a\n                  href={\"https://documentation.grax.io/docs/\" + helpLinkbyAppName[appName]}\n                  style={{\n                    position: \"absolute\",\n                    right: \"27px\"\n                  }}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  GRAX Help\n                </a>\n              </h3>\n            </div>\n          ) : null}\n\n          <IconSettings iconPath=\"./assets/icons\">\n            <Suspense fallback={<Spinner size=\"large\" variant=\"brand\" />}>\n              {(appName === \"restore\" || appName === \"mapping\") && (\n                <GRAXRestoreTabs variant={isEmbeded ? \"default\" : \"scoped\"} appName={appName} />\n              )}\n              {appName === \"logging\" && (\n                <Tabs variant={isEmbeded ? \"default\" : \"scoped\"} id=\"grax-logging-tabs\">\n                  <TabsPanel label=\"Error Logs\">\n                    <GRAXLogging\n                      columns={[\"CreatedDate\", \"source\", \"info\", \"error\", \"stack\", \"description\"]}\n                    />\n                  </TabsPanel>\n                  <TabsPanel label=\"Restore Logs\">\n                    <GRAXLogging\n                      subtype=\"restore\"\n                      columns={[\n                        \"CreatedDate\",\n                        \"objecttype\",\n                        \"sourceId\",\n                        \"destinationId\",\n                        \"status\",\n                        \"error\",\n                        \"description\"\n                      ]}\n                    />\n                  </TabsPanel>\n                </Tabs>\n              )}\n              {appName === \"timemachine\" && (\n                <Tabs variant={isEmbeded ? \"default\" : \"scoped\"} id=\"grax-history-tabs\">\n                  <TabsPanel label=\"History\">\n                    <GRAXHistory />\n                  </TabsPanel>\n                </Tabs>\n              )}\n              {appName === \"delete\" && (\n                <Tabs variant={isEmbeded ? \"default\" : \"scoped\"} id=\"grax-delete-tabs\">\n                  <TabsPanel label=\"Delete\">\n                    <GRAXDelete />\n                  </TabsPanel>\n                </Tabs>\n              )}\n              {appName === \"cloud\" && <GRAXCloud />}\n              {appName === \"audit\" && (\n                <GRAXAudit columns={[\"LastModifiedDate\", \"ObjectType\", \"ObjectVersion\"]} />\n              )}\n              {appName === \"summarycharts\" && (\n                <GRAXSummaryCharts variant={isEmbeded ? \"default\" : \"scoped\"} />\n              )}\n          \n              <Router>\n                <Switch>\n                  {routes.map((route, index) => (\n                    <Route\n                      key={`route-${index}`}\n                      path={route.path}\n                      render={props => (\n                        <route.component\n                          routes={route.subRoutes}\n                          exact={route.exact}\n                          isEmbeded={isEmbeded}\n                          {...props}\n                        />\n                      )}\n                    />\n                  ))}\n                </Switch>\n                      </Router>\n            </Suspense>\n          </IconSettings>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GRAXApp;\n","import React from \"react\";\n\nconst DuplicatesHeader = ({ tableFields }) => {\n  return (\n    <thead>\n      <tr class=\"slds-line-height_reset\">\n        <th class=\"slds-text-align_right\" style={{ width: \"3.25rem\" }} />\n        {tableFields.map(field => (\n          <th aria-label=\"Contact\">\n            <div>\n              <span class=\"slds-truncate\" title=\"Contact\">\n                {field}\n              </span>\n            </div>\n          </th>\n        ))}\n        <th aria-label=\"Contact\" style={{ width: \"3.25rem\" }}>\n          <div>\n            <span class=\"slds-truncate\" title=\"Contact\" />\n          </div>\n        </th>\n      </tr>\n    </thead>\n  );\n};\n\n//TODO: set proptypes\n\nexport default DuplicatesHeader;\n","import React, { useState } from \"react\";\nimport { Button, Checkbox, IconSettings } from \"@salesforce/design-system-react\";\n\n//TODO: should name be plural or singular\nconst DuplicateRow = ({ tableFields, row, onViewRecord }) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const getColumn = (field, row) => {\n    return row[field];\n  };\n\n  return (\n    <tr aria-level=\"1\" class=\"slds-hint-parent\">\n      <td style={{ width: \"3.25rem\" }}>\n        <div class=\"slds-checkbox\">\n          <Checkbox\n            checked={isChecked}\n            onChange={e => {\n              setIsChecked(!isChecked);\n              //onChange();\n            }}\n          />\n        </div>\n      </td>\n      {tableFields.map(field => (\n        <td>\n          <div class=\"slds-truncate\" title=\"Acme\">\n            {getColumn(field, row)}\n          </div>\n        </td>\n      ))}\n\n      <td className=\"slds-text-align_right\">\n        <IconSettings iconPath=\"/assets/icons\">\n          <Button\n            align={\"right\"}\n            iconCategory=\"utility\"\n            iconName=\"expand\"\n            iconVariant=\"border\"\n            iconSize=\"small\"\n            onClick={value => {\n              // move record action to const file\n              onViewRecord(row);\n            }}\n          />\n        </IconSettings>\n      </td>\n    </tr>\n  );\n};\n\n//TODO: set proptypes\n\nexport default DuplicateRow;\n","import { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetchDuplicates } from \"./useScenarioFetch\";\nimport { ToastContext } from \"../contexts/toastContext\";\n\nconst useDuplicates = () => {\n  const [rows, setRows] = useState([]);\n  const [tableFields, setTableFields] = useState([]);\n  const [tableFieldsExpanded, setTableFieldsExpanded] = useState([]);\n  const [indexName, setIndexName] = useState(null);\n  const [duplicates, fetchDuplicates] = useFetchDuplicates();\n  const params = useParams();\n  const { openToast } = useContext(ToastContext);\n  const scenarioId = params.scenario_id;\n\n  useEffect(() => fetchDuplicates(scenarioId), [scenarioId]);\n  useEffect(() => {\n    const data = duplicates.data.data;\n    const results = data.results;\n    //TODO: move scenario job status to a const file\n    if (results.length > 0) {\n      // const fields = data.results_table_fields.map(field => field.split(\".\")[1]);\n      const fields = [\n        \"doc.Name\",\n        \"doc.Website\",\n        \"doc.Phone\",\n        \"doc.BillingCity\",\n        \"doc.BillingState\"\n      ].map(field => field.split(\".\")[1]);\n\n      setRows(results);\n      setIndexName(results[0].index_name);\n      setTableFields(fields.slice(0, 4));\n      setTableFieldsExpanded(fields);\n    }\n  }, [duplicates.data]);\n\n  useEffect(() => {\n    const jobStatus = duplicates.data.data.job_status;\n\n    if (jobStatus === \"CREATED\") {\n      openToast({ heading: [\"Scenario Job Created\"] });\n    }\n  }, [duplicates.data.data.job_status]);\n\n  return { tableFields, tableFieldsExpanded, rows, indexName };\n};\n\nexport default useDuplicates;\n","import React from \"react\";\nimport { Dropdown, IconSettings } from \"@salesforce/design-system-react\";\n\n//TODO: should name be plural or singular\nconst DuplicateKey = ({ keyName, tableFields }) => {\n  return (\n    <tr class=\"slds-is-selected\">\n      <td colspan={tableFields.length + 1}>Duplicate key: {keyName}</td>\n      <td className=\"slds-text-align_right\" style={{ width: \"3.25rem\" }}>\n        <IconSettings iconPath=\"/assets/icons\">\n          <Dropdown\n            align={\"right\"}\n            iconCategory=\"utility\"\n            iconName=\"down\"\n            iconVariant=\"border-filled\"\n            onSelect={value => {}}\n            buttonClassName=\"slds-button_icon-small\"\n            options={[{ label: \"Merge Records\", value: \"A0\" }]}\n          />\n        </IconSettings>\n      </td>\n    </tr>\n  );\n};\n\n//TODO: set proptypes\n\nexport default DuplicateKey;\n","import React, { Fragment } from \"react\";\n\n//TODO: should name be plural or singular\nconst DuplicateRowVertical = ({ field, record }) => {\n  const getColumn = (field, record) => {\n    return record[field];\n  };\n\n  return (\n    <tr class=\"slds-hint-parent\">\n      <Fragment>\n        <td>\n          <div class=\"slds-truncate\" title=\"Acme\">\n            {field}\n          </div>\n        </td>\n        <td colSpan=\"3\">\n          <div class=\"slds-truncate\" title=\"Acme\">\n            {getColumn(field, record)}\n          </div>\n        </td>\n      </Fragment>\n    </tr>\n  );\n};\n\n//TODO: set proptypes\n\nexport default DuplicateRowVertical;\n","import React, { useState, Fragment } from \"react\";\n\nimport { Modal, Button, IconSettings } from \"@salesforce/design-system-react\";\nimport DuplicateKey from \"./DuplicateKey\";\nimport DuplicateRowVertical from \"./duplicateRowVertical\";\n\nconst DuplicatesExpanded = ({ setIsOpen, tableFields, record }) => {\n  return (\n    <IconSettings iconPath=\"/assets/icons\">\n      <Modal isOpen={true} size=\"medium\" onRequestClose={() => setIsOpen(false)} hasNoHeader={true}>\n        <table\n          aria-multiselectable=\"true\"\n          class=\"slds-table slds-table_header-hidden slds-table_bordered slds-table_cell-buffer slds-no-row-hover slds-tree slds-table_tree\"\n          role=\"grid\"\n        >\n          <thead>\n            <tr aria-level=\"1\" class=\"slds-hint-parent\">\n              <th role=\"gridcell\">\n                <div class=\"slds-truncate\" title=\"Acme\">\n                  STANDARD FIELD NAMES\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {record !== null && (\n              <Fragment>\n                {tableFields.map(field => (\n                  <DuplicateRowVertical field={field} record={record} />\n                ))}\n              </Fragment>\n            )}\n          </tbody>\n        </table>\n      </Modal>\n    </IconSettings>\n  );\n};\n\nexport default DuplicatesExpanded;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { PageHeader, Card, Dropdown, Modal, Button } from \"@salesforce/design-system-react\";\n\n//TODO: import component name\nimport DuplicatesHeader from \"./duplicatesHeader\";\nimport DuplicateRow from \"./duplicateRow\";\nimport useDuplicates from \"../../../../hooks/useDuplicates\";\nimport DuplicateKey from \"./DuplicateKey\";\nimport DuplicatesExpanded from \"./duplicatesVertical\";\n\nconst Duplicates = () => {\n  const { tableFields, tableFieldsExpanded, rows, indexName } = useDuplicates();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedRecord, setSelectedRecord] = useState(null);\n\n  const onViewRecord = row => {\n    setSelectedRecord(row);\n  };\n\n  useEffect(() => {\n    if (selectedRecord !== null) setIsOpen(true);\n  }, [selectedRecord]);\n\n  return (\n    <React.Fragment>\n      <PageHeader\n        className=\"slds-m-bottom_large\"\n        title=\"All Potential Duplicate Records\"\n        variant=\"object-home\"\n        trail={[<a href=\"javascript:void(0);\">Dedup</a>]}\n      />\n      <Card\n        style={{ flexGrow: 1 }}\n        hasNoHeader={indexName === null}\n        heading={`Index: ${indexName}`}\n      >\n        {rows.length > 0 && (\n          <Fragment>\n            <table\n              aria-multiselectable=\"true\"\n              class=\"slds-table  slds-table_bordered slds-no-row-hover \"\n              role=\"grid\"\n            >\n              <DuplicatesHeader tableFields={tableFields} />\n              <tbody>\n                {rows.map(row => (\n                  <Fragment>\n                    <DuplicateKey keyName={row.key} tableFields={tableFields} />\n                    {row.records.map(record => (\n                      <DuplicateRow\n                        tableFields={tableFields}\n                        row={record}\n                        onViewRecord={onViewRecord}\n                      />\n                    ))}\n                  </Fragment>\n                ))}\n              </tbody>\n            </table>\n            {isOpen === true && (\n              <DuplicatesExpanded\n                isOpen={isOpen}\n                setIsOpen={setIsOpen}\n                tableFields={tableFieldsExpanded}\n                record={selectedRecord}\n              />\n            )}\n          </Fragment>\n        )}\n      </Card>\n    </React.Fragment>\n  );\n};\nexport default Duplicates;\n","import Cloud from \"../components/cloud\";\nimport Scenarios from \"../components/cloud/dedup/Scenarios\";\nimport Scenario from \"../components/cloud/dedup/Scenario\";\nimport Duplicates from \"../components/cloud/dedup/duplicates/Duplicates\";\nimport EmptyLandingPage from \"../components/cloud/configurations/EmptyLandingPage\";\n\nimport { CLIENT_CLOUD_PATH, CONFIGURATION_PATH, DEDUP_PATH } from \"./addresses\";\n\nconst routes = [\n  {\n    exact: true,\n    path: CLIENT_CLOUD_PATH,\n    component: Cloud,\n    subRoutes: [\n      {\n        exact: true,\n        path: CONFIGURATION_PATH,\n        component: EmptyLandingPage\n      },\n      {\n        exact: true,\n        path: `${DEDUP_PATH}/scenarios`,\n        component: Scenarios\n      },\n      {\n        exact: true,\n        path: `${DEDUP_PATH}/scenarios/:scenario_id`,\n        component: Scenario\n      },\n      {\n        exact: true,\n        path: `${DEDUP_PATH}/scenarios/new`,\n        component: Scenario\n      },\n      {\n        exact: true,\n        path: `${DEDUP_PATH}/duplicates/:scenario_id`,\n        component: Duplicates\n      }\n    ]\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport {  Card, Button} from \"@salesforce/design-system-react\";\n\nconst EmptyLandingPage = () => {\n    return (      \n    <Card \n        hasNoHeader={true}>\n        <div class=\"slds-text-longform slds-text-align_center\">\n            <h2 class=\"slds-text-heading_medium\">Welcome to GRAX!</h2>\n            <p class=\"slds-text-body_regular\">Your Data Value Platform.</p>\n        </div>\n        <footer class=\"slds-card__footer\">\n            <button class=\"slds-button slds-button_brand\">Start</button>\n        </footer>\n    </Card>\n    )\n}\n\nexport default EmptyLandingPage","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable no-useless-escape */\n/* --------------------------------------------------------------------------\n * This file is subject to the terms and conditions defined in\n * file https://github.com/HardingPoint/GRAXForSFDC/blob/master/LICENSE,\n * which is part of this source code package.\n * --------------------------------------------------------------------------\n *          Copyright (c) 2017-2018 Harding Point\n *                  All rights reserved\n * --------------------------------------------------------------------------\n * Support:\tSupport@Grax.io\n * Website:\thttps://grax.io\n * Github:\thttps://github.com/HardingPoint/grax-application\n * License:\thttps://github.com/HardingPoint/grax-application/blob/master/LICENSE\n * --------------------------------------------------------------------------*/\n\nimport $ from \"jquery\";\n\n// export const isDev = window.location.port !== '80';\n\nexport const isDev = false;\n\nconst devBaseUrl = \"https://grax-datalake-demo2.herokuapp.com\";\n\nexport const baseUrl = isDev ? devBaseUrl : \"\";\n\nexport const token = window.__grax__.token;\nexport const _csrf = window.__grax__._csrf;\nexport const orgid = window.__grax__.orgid;\nexport const userid = window.__grax__.userid;\nexport const sessionid = null;\nexport const endpoint = null;\nexport const pageParams = window.__grax__.pageParams || {};\n\nexport function GetParams(params) {\n  if (params === null || params === undefined) params = {};\n\n  if (params.action === null || params.action === undefined || params.action === \"\")\n    params.action = \"load\";\n\n  return \"?\" + $.param(params);\n}\n\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);\n}\n$.ajaxSetup({\n  beforeSend: function(xhr, settings) {\n    xhr.setRequestHeader(\"sfdcorgid\", orgid);\n\n    if (pageParams.authorization != null) {\n      xhr.setRequestHeader(\"Authorization\", pageParams.authorization);\n    } else {\n      xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n    }\n\n    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n      xhr.setRequestHeader(\"X-CSRFToken\", _csrf);\n    }\n\n    xhr.withCredentials = true;\n\n    if (settings.skipFail !== true) {\n      xhr.fail((jqXHR, textStatus, errorThrown) => {\n        console.error(jqXHR);\n\n        if (jqXHR.status !== 404 && errorThrown !== \"Not Found\") {\n          window.showError(jqXHR.statusText + \": \" + jqXHR.responseText);\n        }\n      });\n    }\n  }\n});\n\nexport { $ };\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {Spinner, Combobox} from '@salesforce/design-system-react';\n\nimport {$, baseUrl, GetParams} from '../lib/grax-data-lake';\n\nimport {comboboxFilterAndLimit} from '../lib/utils';\n\nimport {getCookie, setCookie} from '../lib/utils';\n\nvar selectedDataIndex;\nvar cookieSubfix = 'Fields';\n\n\nexport default class GRAXFieldsCombobox extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            options: [],\n\t\t\tinputValue: '',\n            selection: [{id: 'Id', label: 'Id', type: 'text'}],\n            isLoaded: false,\n            error: null\n        };\n        \n        this.getMappedFieldList = this.getMappedFieldList.bind(this);\n    }\n\n\n    getMappedFieldList(selection) {\n        return _.map(selection || this.state.selection, (item) => {\n            return item.id;\n        });\n    }\n\n    onLoadHandler(event, selection) {\n        var selectedFieldList = this.getMappedFieldList(selection);\n\n        if(this.props.onLoad) {\n            this.props.onLoad(event, selection, this.state.options, selectedFieldList);\n        }\n    }\n\n    onChangeHandler(event, selection) {\n        var selectedFieldList = this.getMappedFieldList(selection);\n\n        if (this.props.onChange) {\n            this.props.onChange(event, selection, this.state.options, selectedFieldList);\n        }\n\n        setCookie(selectedDataIndex + cookieSubfix, JSON.stringify(selectedFieldList));\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n\n        selectedDataIndex = this.props.dataIndex;\n\n        if(this.props.cookieSubfix) {\n            cookieSubfix += this.props.cookieSubfix;\n        }\n\n        $.ajax({\n            type: 'GET',\n            // dataType: 'jsonp',\n            url: baseUrl + '/grax-app/grax-data-lake/getDataTypeFields/' + selectedDataIndex + GetParams({action:'load'}),\n            data: {},\n            success: (data) => {\n                if(this._isMounted) {\n                    var options = _.map(data, (val, key) => ({\n                        id: key,\n                        label: key,\n                        type: val\n                    }));\n\n                    this.setState({\n                        options: options,\n                        isLoaded: true\n                    });\n\n                    var selectedFieldsCookie = getCookie(selectedDataIndex + cookieSubfix);\n                    if(!selectedFieldsCookie.startsWith('[')) {\n                        selectedFieldsCookie = '[]';\n                    }\n\n                    var selectedFields = JSON.parse(selectedFieldsCookie);\n\n                    this.setState({\n                        selection: selectedFields.length > 0 ? (\n                            _.sortBy(\n                                _.reduce(options, (_selection, item) => {\n                                    if(selectedFields.indexOf(item.id) !== -1) {\n                                        _selection.push(item);\n                                    }\n\n                                    return _selection;\n                                }, [])\n                            , (item) => {\n                                return selectedFields.indexOf(item.id);\n                            })\n                        ) : this.state.selection\n                    });\n                }\n\n                this.onLoadHandler(null, this.state.selection);\n            },\n            error: (xhr, status, err) => {\n                console.error(xhr, status, err);\n\n                if(this._isMounted) {\n                    this.setState({\n                        isLoaded: true,\n                        error: err.toString()\n                    });\n                }\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    /*shouldComponentUpdate(nextProps, nextState) {\n        return this.state.isLoaded !== nextState.isLoaded;\n    }*/\n\n    render() {\n        if (this.state.error) {\n            return <div>Error: {this.state.error}</div>;\n        } else if (!this.state.isLoaded) {\n            return (\n                <div style={{ position: 'relative', height: '2rem' }}>\n                    <Spinner size=\"small\" variant=\"base\" />\n                </div>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <Combobox\n                        classNameMenu={'scrollable-GRAXFieldsCombobox'}\n                        events={{\n                            onChange: (event, { value }) => {\n                                this.setState({\n                                    inputValue: value\n                                });\n                            },\n                            onRequestRemoveSelectedOption: (event, data) => {\n                                this.setState({\n                                    inputValue: '',\n                                    selection: data.selection,\n                                });\n\n                                this.onChangeHandler(event, data.selection);\n                            },\n                            onSelect: (event, data) => {\n                                this.setState({\n                                    inputValue: '',\n                                    selection: data.selection,\n                                });\n\n                                this.onChangeHandler(event, data.selection);\n                            },\n                            onRequestClose: (event, data) => {\n                                if (this.props.onSelect && this.state.inputValue) {\n                                    var selectedFieldList = this.getMappedFieldList(data.selection);\n\n                                    this.props.onSelect(event, [{\n                                        id: this.state.inputValue,\n                                        label: this.state.inputValue\n                                    }], this.state.options, selectedFieldList);\n                                }\n                            }\n                        }}\n                        labels={{\n                            placeholder: 'Select Option',\n                        }}\n                        options={comboboxFilterAndLimit({\n                            inputValue: this.state.inputValue,\n                            limit: 1000,\n                            options: this.state.options,\n                            selection: this.state.selection\n                        })}\n                        selection={this.state.selection}\n                        value={this.state.inputValue}\n                        // variant={this.props.variant || 'inline-listbox'}\n                        required={true}\n                        multiple={true}\n                    />\n                </React.Fragment>\n            );\n        }\n    }\n}"],"sourceRoot":""}